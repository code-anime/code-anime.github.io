<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不荒废现在,不畏惧未来🌸</title>
  
  
  <link href="https://codeanime.cc/atom.xml" rel="self"/>
  
  <link href="https://codeanime.cc/"/>
  <updated>2021-10-14T13:27:22.147Z</updated>
  <id>https://codeanime.cc/</id>
  
  <author>
    <name>CodeAnime</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL事务小记</title>
    <link href="https://codeanime.cc/MySQL%E4%BA%8B%E5%8A%A1%E5%B0%8F%E8%AE%B0.html"/>
    <id>https://codeanime.cc/MySQL%E4%BA%8B%E5%8A%A1%E5%B0%8F%E8%AE%B0.html</id>
    <published>2021-10-14T13:25:28.000Z</published>
    <updated>2021-10-14T13:27:22.147Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL事务小记"><a href="#MySQL事务小记" class="headerlink" title="MySQL事务小记"></a>MySQL事务小记</h1><h2 id="一-什么是事务"><a href="#一-什么是事务" class="headerlink" title="一.什么是事务"></a>一.什么是事务</h2><p>事务:一个最小的不可再分的工作单元</p><p>通常一个事务对应一个完整的业务(例如银行账户转账业务，该业务就是一个最小的工作单元), 一个完整的业务需要批量的DML(insert、update、delete)语句共同联合完成. 事务只和DML语句有关，或者说DML语句才有事务。这个和业务逻辑有关，业务逻辑不同，DML语句的个数不同</p><h2 id="二-事务的四大特征-ACID"><a href="#二-事务的四大特征-ACID" class="headerlink" title="二.事务的四大特征(ACID)"></a>二.事务的四大特征(ACID)</h2><ul><li><p><strong>原子性(Atomicity)</strong>: 事务开始后所有操作，要么全部做完，要么全部不做，不可能停滞在中间环节。事务执行过程中出错，会回滚到事务开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体，就像化学中学过的原子，是物质构成的基本单位。</p></li><li><p><strong>一致性(Consistency)</strong>: 事务开始之前、执行中、执行完毕，这些时间点，多个人去观察事务操作的数据的时候，看到的数据都是一致的。</p></li><li><p><strong>隔离性(Isolation)</strong>: 一个事务的执行不能被其他事务干扰。每个事务的执行过程是相对独立的；</p></li><li><p><strong>持久性(Durability)</strong>: 事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</p></li></ul><h2 id="三-事务中的并发问题"><a href="#三-事务中的并发问题" class="headerlink" title="三.事务中的并发问题"></a>三.事务中的并发问题</h2><ul><li><strong>脏读</strong>: 脏读又称无效数据的读出, 一个事务在执行的过程中读取到了其他事务还没有提交的数据。例如:事务A读取了事务B更新的数据，然后B回滚操作，那么A读取到的数据是脏数据</li><li><strong>读已提交</strong>: 一个事务操作过程中可以读取到其他事务已经提交的数据。事务中的每次读取操作，读取到的都是数据库中其他事务已提交的最新的数据</li><li><strong>可重复读</strong>:一个事务操作中对于一个读取操作不管多少次，读取到的结果都是一样的。</li><li><strong>不可重复读</strong>: 事务 A 多次读取同一数据，事务 B 在事务A多次读取的过程中，对数据作了更新并提交，导致事务A多次读取同一数据时，结果 不一致。</li><li><strong>幻读</strong>: 事务A在执行读取操作，需要两次统计数据的总量，前一次查询数据总量后，此时事务B执行了新增数据的操作并提交后，这个时候事务A读取的数据总量和之前统计的不一样，就像产生了幻觉一样，平白无故的多了几条数据，成为幻读。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL事务小记&quot;&gt;&lt;a href=&quot;#MySQL事务小记&quot; class=&quot;headerlink&quot; title=&quot;MySQL事务小记&quot;&gt;&lt;/a&gt;MySQL事务小记&lt;/h1&gt;&lt;h2 id=&quot;一-什么是事务&quot;&gt;&lt;a href=&quot;#一-什么是事务&quot; class=&quot;he</summary>
      
    
    
    
    <category term="MySQL" scheme="https://codeanime.cc/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://codeanime.cc/tags/MySQL/"/>
    
    <category term="事务" scheme="https://codeanime.cc/tags/%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis小记</title>
    <link href="https://codeanime.cc/MyBatis%E5%B0%8F%E8%AE%B0.html"/>
    <id>https://codeanime.cc/MyBatis%E5%B0%8F%E8%AE%B0.html</id>
    <published>2021-10-11T14:11:14.000Z</published>
    <updated>2021-10-11T14:16:38.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis小记"><a href="#MyBatis小记" class="headerlink" title="MyBatis小记"></a>MyBatis小记</h1><p>为什么要用Mybatis?</p><p>jdbc缺点:</p><p>缺点一：重复代码太多，这样会让开发效率降低。（比较繁琐，有一些代码是“没有必要的重复”）</p><p>缺点二：JDBC开发当中sql语句是编写在java程序当中的，sql语句不支持配置。sql语句<br>可能后期需要调优，sql语句被修改的概率还是很高的。在java程序中编写sql语句，后期修改<br>sql语句的时候，需要重新修改java源代码，源代码的修改会导致重新编译/重新部署等操作。<br>并且修改java源代码已经违背了开闭原则：OCP。<br>互联网分布式架构方面的项目，并发量很大，系统需要不断的优化，各方面优化，其中有一条<br>非常重要的优化就是sql优化。</p><h2 id="一-我的第一个Mybatis程序"><a href="#一-我的第一个Mybatis程序" class="headerlink" title="一. 我的第一个Mybatis程序:"></a>一. 我的第一个Mybatis程序:</h2><h3 id="1-准备数据库"><a href="#1-准备数据库" class="headerlink" title="1.准备数据库"></a>1.准备数据库</h3><p>新建一个数据库:</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> mybatis<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>新建一张表:</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>id <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>birth <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>插入数据:</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>birth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'1'</span> <span class="token punctuation">,</span> <span class="token string">'zhangsan'</span> <span class="token punctuation">,</span> <span class="token string">'20211010'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>birth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'2'</span> <span class="token punctuation">,</span> <span class="token string">'lisi'</span> <span class="token punctuation">,</span> <span class="token string">'20211011'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>birth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'3'</span> <span class="token punctuation">,</span> <span class="token string">'wangwu'</span> <span class="token punctuation">,</span> <span class="token string">'20211012'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="2-新建一个普通的java工程"><a href="#2-新建一个普通的java工程" class="headerlink" title="2.新建一个普通的java工程"></a>2.新建一个普通的java工程</h3><p>因为mybatis框架封装了JDBC。写一个main方法即可测试。</p><ul><li><p>新建工程<code>mybatis-project-laodu</code></p></li><li><p>在src同级目录下新建libs目录,把jar包引入到此目录</p></li><li><p>新建xml文件</p><ul><li>新建<code>mybatis-config.xml</code></li><li>新建<code>sqlMapper.xml</code></li></ul></li><li><p>在src目录下新建com/codeanime/main文件夹</p></li><li><p>在src目录下新建com/codeanime/test文件夹</p></li></ul><p><img src="https://i.loli.net/2021/10/10/KmfNYRukUIJniCB.png" alt="image-20211010215749996"></p><h3 id="3-引入相关的jar包"><a href="#3-引入相关的jar包" class="headerlink" title="3.引入相关的jar包"></a>3.引入相关的jar包</h3><p>mybatis-3.4.5.jar(mybatis核心jar)</p><p>mysql-connector-java-5.1.23-bin.jar(mysql数据库驱动jar)</p><p><img src="https://i.loli.net/2021/10/10/E6xNZUyB5GiWpXD.png" alt="image-20211010214929700"></p><h3 id="4-从xml中构建SqlSessionFactory"><a href="#4-从xml中构建SqlSessionFactory" class="headerlink" title="4.从xml中构建SqlSessionFactory"></a>4.从xml中构建SqlSessionFactory</h3><h4 id="4-1-编写main方法"><a href="#4-1-编写main方法" class="headerlink" title="4.1 编写main方法"></a>4.1 编写main方法</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> resource <span class="token operator">=</span> <span class="token string">"org/mybatis/example/mybatis-config.xml"</span><span class="token punctuation">;</span><span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SqlSessionFactory</span> sqlSessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>注意:</p><p>什么是类路径？</p><p>bin是类的根路径, src可以等同看做类的根路径</p><p>修改main方法代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> resource <span class="token operator">=</span> <span class="token string">"mybatis-config.xml"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>编辑mybatis-config.xml:核心配置文件主要配置连接数据库的信息，以及“sql语句配置文件”的路径。</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mysql.jdbc.Driver<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc:mysql://localhost:3306/mybatis<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>123456<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org/mybatis/example/BlogMapper.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="5-编写SqlMapper-xml"><a href="#5-编写SqlMapper-xml" class="headerlink" title="5.编写SqlMapper.xml"></a>5.编写SqlMapper.xml</h3><p>提供一个配置sql语句的配置文件，通常这种文件一般都叫做：sql映射文件（SqlMapper.xml）<br>    在类的根路径下新建一个SqlMapper.xml文件，修改mybatis-config.xml配置：</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SqlMapper.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>编辑SqlMapper.xml文件：</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 先不要管 namespace，随意编写一个。--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1111111111<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 查询语句，查询所有的学生 --></span>    <span class="token comment">&lt;!-- id具有唯一性，代表了这条sql语句，将来这个id是需要“拷贝”到java程序当中的。 --></span>    <span class="token comment">&lt;!-- 思考：我们程序员需要告诉mybatis框架什么信息，mybatis才能自动创建对象，并且自动将查询的结果集放到java对象的对应属性上。 --></span>    <span class="token comment">&lt;!-- 需要告诉mybatis，最终封装的java对象的类型。 --></span>    <span class="token comment">&lt;!-- 需要告诉mybatis，最终查询出的结果集赋值到javabean的哪个属性上面，怎么告诉mybatis呢？    查询结果集的列名要和javabean的属性名对应上，不对应的时候使用as关键字起别名。--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select        id as sid, name as sname , birth as sbirth        from        student    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="6-在main文件夹新建Student类作为javabean"><a href="#6-在main文件夹新建Student类作为javabean" class="headerlink" title="6.在main文件夹新建Student类作为javabean"></a>6.在main文件夹新建Student类作为javabean</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/*     *注意：以下的属性名和数据库表当中的字段名不一致。     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> sid<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> sname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> sbirth<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> sid<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSid</span><span class="token punctuation">(</span><span class="token class-name">String</span> sid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sid <span class="token operator">=</span> sid<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> sname<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSname</span><span class="token punctuation">(</span><span class="token class-name">String</span> sname<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sname <span class="token operator">=</span> sname<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSbirth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> sbirth<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSbirth</span><span class="token punctuation">(</span><span class="token class-name">String</span> sbirth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sbirth <span class="token operator">=</span> sbirth<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="7-在test目录下新建MybatisTest01作为测试类"><a href="#7-在test目录下新建MybatisTest01作为测试类" class="headerlink" title="7.在test目录下新建MybatisTest01作为测试类"></a>7.在test目录下新建MybatisTest01作为测试类</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisTest01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> resource <span class="token operator">=</span> <span class="token string">"mybatis-config.xml"</span><span class="token punctuation">;</span>            <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">SqlSessionFactory</span> sqlSessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 事务自动提交机制关闭，等同于:conn.setAutoCommit(false);</span>            <span class="token comment">// SqlSession对象等同看做Connection，专门用来执行sql语句的一个会话对象。</span>            <span class="token comment">// 开启事务</span>            sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// do work(执行核心业务逻辑)</span>            <span class="token comment">// 获取所有的学生，返回List集合，List集合中存储Student。</span>            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span> studentList <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token string">"getAll"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Student</span> s <span class="token operator">:</span> studentList<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getSid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">getSname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">getSbirth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// 没有出现异常，则事务结束，提交</span>            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 遇到异常之后回滚</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 关闭资源</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行test程序:</p><p><img src="https://i.loli.net/2021/10/10/8hNgpaEI5MP3wLV.png" alt="image-20211010220802753"></p><p>和数据库中一样:</p><p><img src="https://i.loli.net/2021/10/10/U5bghxtdPOnE2Co.png" alt="image-20211010220832789"></p><h2 id="二-使用mybatis完成单张表的CRUD"><a href="#二-使用mybatis完成单张表的CRUD" class="headerlink" title="二. 使用mybatis完成单张表的CRUD"></a>二. 使用mybatis完成单张表的CRUD</h2><p>CRUD:增删改查</p><h4 id="2-1-优化用户体验"><a href="#2-1-优化用户体验" class="headerlink" title="2.1 优化用户体验"></a>2.1 优化用户体验</h4><p><strong>在类的根路径下，新建一个jdbc.properties文件。配置连接数据库的信息</strong></p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">jdbc.driver&#x3D;com.mysql.jdbc.Driverjdbc.url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;mybatisjdbc.user&#x3D;rootjdbc.password&#x3D;123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>然后在核心配置文件引入该资源文件。</strong></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>使用：<property name="driver" value="${jdbc.driver}" />语法。<br>        注意：${jdbc.driver}这个不是EL表达式，是mybatis中自定制的语法机制。<br>        ${属性文件中的key}</p><p><strong>完整配置文件:</strong></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 引入外部独立的资源文件 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.driver&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.url&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.user&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.password&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SqlMapper2.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>编辑SqlMapper2配置文件:</strong></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>111111111111111111111111<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>save<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into student        (id , name , birth)        values        (#&#123;stuId&#125; , #&#123;stuName&#125; , #&#123;stuBirth&#125;)    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>插入数据:</strong></p><p>编写类<code>MyBtisCRUD</code>:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token comment">/** * 使用mybatis完成学生信息的增删改查（查一个/查所有） */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisCRUD</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/*             * String resource = "mybatis-config.xml"; InputStream inputStream =             * Resources.getResourceAsStream(resource); SqlSessionFactory             * factory = new SqlSessionFactoryBuilder().build(inputStream);             */</span>            <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"mybatis-config.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 开启事务</span>            sqlSession <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// do work</span>            <span class="token comment">// insert</span>            <span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            stu<span class="token punctuation">.</span><span class="token function">setStuId</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            stu<span class="token punctuation">.</span><span class="token function">setStuName</span><span class="token punctuation">(</span><span class="token string">"zhangsan2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            stu<span class="token punctuation">.</span><span class="token function">setStuBirth</span><span class="token punctuation">(</span><span class="token string">"20211011"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> count <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">"save"</span><span class="token punctuation">,</span> stu<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回值是影响数据库表当中的记录条数。</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 提交事务</span>            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 回滚事务</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 释放资源</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行结果:</p><p><img src="https://i.loli.net/2021/10/11/Q8TWUzekZi7Nduv.png" alt="image-20211011083533443"></p><p>运行成功返回影响行号</p><p>查看数据表:</p><p><img src="https://i.loli.net/2021/10/11/IMfkPjphuXbozrD.png" alt="image-20211011083713178"></p><p>数据表多了一条数据.表示插入成功</p><p><strong>修改数据:</strong></p><p>在类MyBtisCRUD中添加代码</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// update</span><span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stu<span class="token punctuation">.</span><span class="token function">setStuId</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stu<span class="token punctuation">.</span><span class="token function">setStuName</span><span class="token punctuation">(</span><span class="token string">"zhangsan3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stu<span class="token punctuation">.</span><span class="token function">setStuBirth</span><span class="token punctuation">(</span><span class="token string">"20211012"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> count <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"update"</span><span class="token punctuation">,</span> stu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>MyBatis完整的代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token comment">/** * 使用mybatis完成学生信息的增删改查（查一个/查所有） */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisCRUD</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/*             * String resource = "mybatis-config.xml"; InputStream inputStream =             * Resources.getResourceAsStream(resource); SqlSessionFactory             * factory = new SqlSessionFactoryBuilder().build(inputStream);             */</span>            <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"mybatis-config.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 开启事务</span>            sqlSession <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// do work</span>            <span class="token comment">// insert</span>            <span class="token comment">//Student stu = new Student();</span>            <span class="token comment">//stu.setStuId("123");</span>            <span class="token comment">//stu.setStuName("zhangsan2");</span>            <span class="token comment">//stu.setStuBirth("20211011");</span>            <span class="token comment">//int count = sqlSession.insert("save", stu); // 返回值是影响数据库表当中的记录条数。</span>            <span class="token comment">//System.out.println(count);</span>            <span class="token comment">// update</span><span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stu<span class="token punctuation">.</span><span class="token function">setStuId</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stu<span class="token punctuation">.</span><span class="token function">setStuName</span><span class="token punctuation">(</span><span class="token string">"zhangsan3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stu<span class="token punctuation">.</span><span class="token function">setStuBirth</span><span class="token punctuation">(</span><span class="token string">"20211012"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> count <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"update"</span><span class="token punctuation">,</span> stu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 提交事务</span>            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 回滚事务</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 释放资源</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>SqlMapper2.xml</code>中添加代码:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>update<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Student<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        update student set        name = #&#123;stuName&#125; , birth = #&#123;stuBirth&#125;        where        id = #&#123;stuId&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>SqlMapper2.xml</code>完整代码:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>111111111111111111111111<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>save<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into student        (id , name , birth)        values        (#&#123;stuId&#125; , #&#123;stuName&#125; , #&#123;stuBirth&#125;)    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>update<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        update student set        name = #&#123;stuName&#125; , birth = #&#123;stuBirth&#125;        where        id = #&#123;stuId&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行代码:</p><p><img src="https://i.loli.net/2021/10/11/u8Lpw9oDehjIUVy.png" alt="image-20211011090015738"></p><p>查看数据库:</p><p><img src="https://i.loli.net/2021/10/11/qrn9TzG3LtdO1sW.png" alt="image-20211011090107325"></p><p>发现数据库数据已经改变.表示修改成功</p><p><strong>查询一条数据:</strong></p><p>在MyBtisCRUD类中填加代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Student</span> stu <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token string">"getById"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getStuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getStuName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getStuBirth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>完整代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token comment">/** * 使用mybatis完成学生信息的增删改查（查一个/查所有） */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisCRUD</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/*             * String resource = "mybatis-config.xml"; InputStream inputStream =             * Resources.getResourceAsStream(resource); SqlSessionFactory             * factory = new SqlSessionFactoryBuilder().build(inputStream);             */</span>            <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"mybatis-config.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 开启事务</span>            sqlSession <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// do work</span>            <span class="token comment">// insert</span>            <span class="token comment">//Student stu = new Student();</span>            <span class="token comment">//stu.setStuId("123");</span>            <span class="token comment">//stu.setStuName("zhangsan2");</span>            <span class="token comment">//stu.setStuBirth("20211011");</span>            <span class="token comment">//int count = sqlSession.insert("save", stu); // 返回值是影响数据库表当中的记录条数。</span>            <span class="token comment">//System.out.println(count);</span>            <span class="token comment">// update</span>            <span class="token comment">/*Student stu = new Student();stu.setStuId("123");stu.setStuName("zhangsan3");stu.setStuBirth("20211012");int count = sqlSession.update("update", stu);System.out.println(count);*/</span>            <span class="token comment">// selectOne</span><span class="token class-name">Student</span> stu <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token string">"getById"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getStuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getStuName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getStuBirth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 提交事务</span>            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 回滚事务</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 释放资源</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>在<code>SqlMapper2.xml</code>添加代码:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">   <span class="token comment">&lt;!-- parameterType是参数类型,专门负责给sql语句传值 但是可以省略不写 --></span>   <span class="token comment">&lt;!-- resultType是查询结果集的类型,只有在select语句中才会有  --></span>   <span class="token comment">&lt;!--     parameterType = "简单类型",则parameter可以省略     resultType = "简单类型",不能省略.     什么是简单类型:17个     byte short int     long float double boolean char     Byte Short Integer Long Float Double Boolean Character String     --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getById<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       select       id as stuId, name as stuName, birth as stuBirth<span class="token comment">&lt;!-- 列名和javabean的属性名必须一致,不一致,使用别名       ,因为Student类的属性名和数据库中student表的属性名不一致--></span>       from       student       where       id = #&#123;11111111111&#125;   <span class="token comment">&lt;!-- 当一个sql语句的占位符只有一个,这个时候#&#123;这里的内容随意编写&#125; --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行代码:</p><p><img src="https://i.loli.net/2021/10/11/kOXJyNtu5znWKGM.png" alt="image-20211011095038657"></p><p>对比数据库:</p><p><img src="https://i.loli.net/2021/10/11/Mi7vk38jnh4KILl.png" alt="image-20211011095057221"></p><p><strong>查询所有:</strong></p><p>在MyBtisCRUD类中填加代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span> stuList <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token string">"getAll"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Student</span> s <span class="token operator">:</span> stuList<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getStuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>在<code>SqlMapper2.xml</code>添加代码:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select    id as stuId, name as stuName, birth as stuBirth    from    student<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行代码:</p><p><img src="https://i.loli.net/2021/10/11/CzD8yt6RXbhkWIm.png" alt="image-20211011095805305"></p><p>对比数据库:</p><p><img src="https://i.loli.net/2021/10/11/1h4NWDcKvA5fba2.png" alt="image-20211011095830920"></p><p><strong>删除数据:</strong></p><p>在MyBtisCRUD类中填加代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> count <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"deleteById"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>在<code>SqlMapper2.xml</code>添加代码:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteById<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    delete from student where id = #&#123;22222222222&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>运行代码:</p><p><img src="https://i.loli.net/2021/10/11/zCIaKfEhkur78F1.png" alt="image-20211011100038198"></p><p>对比数据库:</p><p><img src="https://i.loli.net/2021/10/11/IbUHGf8MVZpDvPW.png" alt="image-20211011100109682"></p><p>发现数据库中id为123的数据被删除.</p><p><strong>附上完整代码:</strong></p><p>MyBtisCRUD</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token comment">/** * 使用mybatis完成学生信息的增删改查（查一个/查所有） */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisCRUD</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/*             * String resource = "mybatis-config.xml"; InputStream inputStream =             * Resources.getResourceAsStream(resource); SqlSessionFactory             * factory = new SqlSessionFactoryBuilder().build(inputStream);             */</span>            <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"mybatis-config.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 开启事务</span>            sqlSession <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// do work</span>            <span class="token comment">// insert</span>            <span class="token comment">//Student stu = new Student();</span>            <span class="token comment">//stu.setStuId("123");</span>            <span class="token comment">//stu.setStuName("zhangsan2");</span>            <span class="token comment">//stu.setStuBirth("20211011");</span>            <span class="token comment">//int count = sqlSession.insert("save", stu); // 返回值是影响数据库表当中的记录条数。</span>            <span class="token comment">//System.out.println(count);</span>            <span class="token comment">// update</span>            <span class="token comment">/*Student stu = new Student();stu.setStuId("123");stu.setStuName("zhangsan3");stu.setStuBirth("20211012");int count = sqlSession.update("update", stu);System.out.println(count);*/</span>            <span class="token comment">// selectOne</span><span class="token comment">//Student stu = sqlSession.selectOne("getById", "123");</span><span class="token comment">//System.out.println(stu.getStuId());</span><span class="token comment">//System.out.println(stu.getStuName());</span><span class="token comment">//System.out.println(stu.getStuBirth());</span>            <span class="token comment">// selectList</span><span class="token comment">//List&lt;Student> stuList = sqlSession.selectList("getAll");</span><span class="token comment">//for(Student s : stuList)&#123;</span><span class="token comment">//System.out.println(s.getStuId());</span><span class="token comment">//&#125;</span>            <span class="token comment">// delete</span><span class="token keyword">int</span> count <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"deleteById"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 提交事务</span>            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 回滚事务</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 释放资源</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>Student类:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> stuId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> stuName<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> stuBirth<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getStuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> stuId<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStuId</span><span class="token punctuation">(</span><span class="token class-name">String</span> stuId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>stuId <span class="token operator">=</span> stuId<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getStuName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> stuName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStuName</span><span class="token punctuation">(</span><span class="token class-name">String</span> stuName<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>stuName <span class="token operator">=</span> stuName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getStuBirth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> stuBirth<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStuBirth</span><span class="token punctuation">(</span><span class="token class-name">String</span> stuBirth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>stuBirth <span class="token operator">=</span> stuBirth<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong><code>mybatis-config.xml</code></strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span> <span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE configuration        PUBLIC <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token operator">></span><span class="token generics"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">></span></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 引入外部独立的资源文件 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>properties resource<span class="token operator">=</span><span class="token string">"jdbc.properties"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> mybatis的别名机制 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    <span class="token generics"><span class="token punctuation">&lt;</span>typeAliases<span class="token punctuation">></span></span>        <span class="token operator">&lt;</span>typeAlias type<span class="token operator">=</span><span class="token string">"com.codeanime.mybatis.main.Student"</span> alias<span class="token operator">=</span><span class="token string">"Student"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>typeAliases<span class="token operator">></span>     <span class="token operator">--</span><span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>typeAliases<span class="token punctuation">></span></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 使用<span class="token keyword">package</span>方式，那么该<span class="token keyword">package</span>包下的所有javabean会自动使用简类名作为别名。 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token keyword">package</span> <span class="token namespace">name</span><span class="token operator">=</span><span class="token string">"com.codeanime.mybatis.main"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>typeAliases<span class="token operator">></span>    <span class="token operator">&lt;</span>environments <span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"development"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>environment id<span class="token operator">=</span><span class="token string">"development"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>transactionManager type<span class="token operator">=</span><span class="token string">"JDBC"</span> <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span>dataSource type<span class="token operator">=</span><span class="token string">"POOLED"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"driver"</span> value<span class="token operator">=</span><span class="token string">"$&#123;jdbc.driver&#125;"</span> <span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"url"</span> value<span class="token operator">=</span><span class="token string">"$&#123;jdbc.url&#125;"</span> <span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"username"</span> value<span class="token operator">=</span><span class="token string">"$&#123;jdbc.user&#125;"</span> <span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"password"</span> value<span class="token operator">=</span><span class="token string">"$&#123;jdbc.password&#125;"</span> <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>dataSource<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>environment<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>environments<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>mappers<span class="token punctuation">></span></span>        <span class="token operator">&lt;</span>mapper resource<span class="token operator">=</span><span class="token string">"SqlMapper2.xml"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>mappers<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong><code>SqlMapper2.xml</code></strong></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>111111111111111111111111<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>save<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into student        (id , name , birth)        values        (#&#123;stuId&#125; , #&#123;stuName&#125; , #&#123;stuBirth&#125;)    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>update<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        update student set        name = #&#123;stuName&#125; , birth = #&#123;stuBirth&#125;        where        id = #&#123;stuId&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- parameterType是参数类型,专门负责给sql语句传值 但是可以省略不写 --></span>    <span class="token comment">&lt;!-- resultType是查询结果集的类型,只有在select语句中才会有  --></span>    <span class="token comment">&lt;!--      parameterType = "简单类型",则parameter可以省略      resultType = "简单类型",不能省略.      什么是简单类型:17个      byte short int     long float double boolean char      Byte Short Integer Long Float Double Boolean Character String      --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getById<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select        id as stuId, name as stuName, birth as stuBirth<span class="token comment">&lt;!-- 列名和javabean的属性名必须一致,不一致,使用别名        ,因为Student类的属性名和数据库中student表的属性名不一致--></span>        from        student        where        id = #&#123;11111111111&#125;    <span class="token comment">&lt;!-- 当一个sql语句的占位符只有一个,这个时候#&#123;这里的内容随意编写&#125; --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select        id as stuId, name as stuName, birth as stuBirth        from        student    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteById<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        delete from student where id = #&#123;22222222222&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="三-别名机制"><a href="#三-别名机制" class="headerlink" title="三. 别名机制"></a>三. 别名机制</h2><p>在**<code>mybatis-config.xml</code>**里添加:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- mybatis的别名机制 --></span><span class="token comment">&lt;!--&lt;typeAliases>    &lt;typeAlias type="com.codeanime.mybatis.main.Student" alias="Student"/>&lt;/typeAliases> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 使用package方式，那么该package包下的所有javabean会自动使用简类名作为别名。 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>然后**<code>SqlMapper2.xml</code>**中所有的parameterType可以写成包中的类名(默认)</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>111111111111111111111111<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>save<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into student        (id , name , birth)        values        (#&#123;stuId&#125; , #&#123;stuName&#125; , #&#123;stuBirth&#125;)    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>update<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Student<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        update student set        name = #&#123;stuName&#125; , birth = #&#123;stuBirth&#125;        where        id = #&#123;stuId&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- parameterType是参数类型,专门负责给sql语句传值 但是可以省略不写 --></span>    <span class="token comment">&lt;!-- resultType是查询结果集的类型,只有在select语句中才会有  --></span>    <span class="token comment">&lt;!--      parameterType = "简单类型",则parameter可以省略      resultType = "简单类型",不能省略.      什么是简单类型:17个      byte short int     long float double boolean char      Byte Short Integer Long Float Double Boolean Character String      --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getById<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select        id as stuId, name as stuName, birth as stuBirth<span class="token comment">&lt;!-- 列名和javabean的属性名必须一致,不一致,使用别名        ,因为Student类的属性名和数据库中student表的属性名不一致--></span>        from        student        where        id = #&#123;11111111111&#125;    <span class="token comment">&lt;!-- 当一个sql语句的占位符只有一个,这个时候#&#123;这里的内容随意编写&#125; --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select        id as stuId, name as stuName, birth as stuBirth        from        student    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteById<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        delete from student where id = #&#123;22222222222&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="四-使用maven模块创建mybatis项目"><a href="#四-使用maven模块创建mybatis项目" class="headerlink" title="四.使用maven模块创建mybatis项目"></a>四.使用maven模块创建mybatis项目</h2><ol start="0"><li><p>创建student表(id,name,email,age)</p> <div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 创建student表</span><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">,</span>email <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">,</span>age <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 插入一条数据</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>email<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span><span class="token string">"zhangsan"</span><span class="token punctuation">,</span><span class="token string">"zhangsan@163.com"</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>新建一个空项目</p></li><li><p>新建maven模块</p></li></ol><p><img src="https://i.loli.net/2021/10/11/Cu8VFhlUZTKHNmo.png" alt="image-20211011114825349"></p><p>创建完成之后是这样子的:</p><p><img src="https://i.loli.net/2021/10/11/5Wfsx4ibAgqR7Mm.png" alt="image-20211011115025524"></p><p>然后, 在main目录下新建文件夹resources, 删除默认创建的App类和App测试类AppTest</p><p>处理之后结构是这样的:</p><p><img src="https://i.loli.net/2021/10/11/UL8r3QG4HfWomdP.png" alt="image-20211011115453043"></p><p>整理<code>pom.xml</code>文件:</p><p>整理后的文件内容:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--坐标--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.codeanime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>project01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--依赖列表--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--单元测试--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ol start="3"><li><p>修改pom.xml文件</p><p>(1)加入mybatis依赖, mysql驱动,junit</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--依赖列表--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--单元测试--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- mybatis依赖 --></span>  <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- mysql驱动 --></span>  <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.46<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>(2)在<build>中加入资源插件</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--资源插件 处理src/main/java目录下的xml--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--所在的目录--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--包括目录下的.properties,.xml 文件都会扫描到--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  指定jdk版本的插件,可加可不加,因为在上面已经指定过jdk的版本   --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>完整pom.xml配置:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--坐标--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.codeanime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>project01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--依赖列表--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--单元测试--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- mybatis依赖 --></span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- mysql驱动 --></span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.46<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--资源插件 处理src/main/java目录下的xml--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--所在的目录--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--包括目录下的.properties,.xml 文件都会扫描到--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!--  指定jdk版本的插件,可加可不加,因为在上面已经指定过jdk的版本   --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>出国年间实体类Student, 定义属性,属性名和列名保持一致</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>domain</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> email<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token class-name">String</span> email<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> email<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"学生实体信息&#123;"</span> <span class="token operator">+</span>                <span class="token string">"id="</span> <span class="token operator">+</span> id <span class="token operator">+</span>                <span class="token string">", name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", email='"</span> <span class="token operator">+</span> email <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>创建Dao接口, 定义操作数据库方法</p><div class="code-wrapper"><pre class="line-numbers language-JAVA" data-language="JAVA"><code class="language-JAVA">package com.codeanime.dao;import com.codeanime.domain.Student;public interface StudentDao &#123;    &#x2F;&#x2F;查询一个学生    Student selectStudentById(Integer id);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>创建xml文件(mapper文件),写sql语句</p><p> mybatis框架是把sql语句和java代码分开</p><p> mapper文件:定义和dao接口在同一目录,一个表一个mapper文件</p></li></ol><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.dao.StudentDao<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!--    &lt;select id="selectBlog" resultType="Blog">--></span><span class="token comment">&lt;!--        select * from Blog where id = #&#123;id&#125;--></span><span class="token comment">&lt;!--    &lt;/select>--></span>    <span class="token comment">&lt;!--查询一个学生Student            &lt;select>: 表示查询操作,里面是select语句            id: 要执行的sql语句的唯一标识,是一个自定义的字符串                推荐使用dao接口中的方法名称            resultType: 告诉mybatis,执行sql语句,把数据赋值给那个类型的java对象                resultType的值现在使用的是java对象的全限定名称        --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectStudentById<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.domain.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select id,name,email,age from student where id=1001    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--    1.约束文件    http://mybatis.org/dtd/mybatis-3-mapper.dtd    约束文件的作用:    定义和限制当前文件中可以出现的标签和属性,以及标签出现的顺序    2.mapper是根标签        namespace: 命名空间,必须有值,不能为空,唯一值.                    推荐使用Dao接口的全限定名称.        作用: 参与识别sql语句的作用.     3.在mapper里面可以写&lt;insert>,&lt;update>,&lt;delete>,&lt;select>        &lt;insert>里面是insert语句,表示执行的insert操作        ...--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ol start="7"><li><p>创建mybatis的主配置文件(xml文件):有一个, 放在resources目录下</p><p>(1)定义创建连接实例的数据源(DataSource)对象</p><p>(2)指定其他mapper文件的位置</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token comment">&lt;!--配置数据源: 创建Connection对象--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!--driver:驱动的内容--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mysql.jdbc.Driver<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--                &lt;property name="driver" value="$&#123;driver&#125;"/>--></span>                <span class="token comment">&lt;!--连接数据库url--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc:mysql://localhost:3306/mybatis?useSSL=false<span class="token entity named-entity" title="&amp;">&amp;amp;</span>useUnicode=true<span class="token entity named-entity" title="&amp;">&amp;amp;</span>characterEncoding=utf-8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--                &lt;property name="url" value="$&#123;url&#125;"/>--></span>                <span class="token comment">&lt;!--用户名--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--                &lt;property name="username" value="$&#123;username&#125;"/>--></span>                <span class="token comment">&lt;!--密码--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>123456<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--                &lt;property name="password" value="$&#123;password&#125;"/>--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--指定其他mapper文件的位置:        指定其他的mapper文件目的是找到其他文件的sql语句    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--使用mapper的resource属性指定mapper文件的路径            这个路径是从target/classed路径开启的            使用注意:                resource="mapper文件的路径,只用 / 分割路径"                一个mapper resource指定一个mapper文件        --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com/codeanime/dao/StudentDao.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>创建测试的内容</p><p>使用main方法,测试mybatis访问数据库</p><p>也可以使用junit访问数据库</p><p>创建MyTest类测试:</p></li></ol><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//测试mybatis执行sql语句</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectStudentById</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//调用mybatis讴歌对象的方法,执行mapper文件中的sql语句</span>        <span class="token comment">//mybatis核心类:SqlSessionFactory</span>        <span class="token comment">//1.定义mybatis主配置文件的位置,从类路径开始相对路径</span>        <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>        <span class="token comment">//2.读取主配置文件,使用mybatis框架中的Resources类</span>        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>        <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//4.获取SqlSession对象</span>        <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//5.指定要执行的sql语句的id</span>        <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>        <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"selectStudentById"</span><span class="token punctuation">;</span>        <span class="token comment">//6.通过SqlSession的方法,执行sql语句</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis查询一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//7.关闭SqlSession对象</span>        session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行测试程序:</p><p><img src="https://i.loli.net/2021/10/11/QMHAf2mhTrbq5V3.png" alt="image-20211011185802779"></p><h2 id="五-mybatis概念"><a href="#五-mybatis概念" class="headerlink" title="五.mybatis概念"></a>五.mybatis概念</h2><h3 id="1-占位符"><a href="#1-占位符" class="headerlink" title="1.占位符"></a>1.占位符</h3><p>用一个占位符替换这个id</p><p><img src="https://i.loli.net/2021/10/11/nJYfLPbQDgWUSFm.png" alt="image-20211011192017960"></p><p>修改:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"> #&#123;studentId&#125;:占位符,表示从java程序中传入过来的数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectStudentById<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.domain.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select id,name,email,age from student where id = #&#123;studentId&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/11/Pui1xGdtZWJnOQ3.png" alt="image-20211011192643973"></p><div class="code-wrapper"><pre><code>在测试类里面添加一个方法2:</code></pre></div><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectStudentById2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//调用mybatis讴歌对象的方法,执行mapper文件中的sql语句</span>    <span class="token comment">//mybatis核心类:SqlSessionFactory</span>    <span class="token comment">//1.定义mybatis主配置文件的位置,从类路径开始相对路径</span>    <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>    <span class="token comment">//2.读取主配置文件,使用mybatis框架中的Resources类</span>    <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>    <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//4.获取SqlSession对象</span>    <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//5.指定要执行的sql语句的id</span>    <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>    <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"selectStudentById"</span><span class="token punctuation">;</span>    <span class="token comment">//6.通过SqlSession的方法,执行sql语句</span>    <span class="token class-name">Student</span> student <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//&lt;--------------修改,传入id的值为1001</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis查询一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//7.关闭SqlSession对象</span>    session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre><code>运行测试方法2:</code></pre></div><p><img src="https://i.loli.net/2021/10/11/xanqKyoAMPw8d9D.png" alt="image-20211011192827656"></p><h3 id="2-日志"><a href="#2-日志" class="headerlink" title="2.日志"></a>2.日志</h3><p>在配置文件mybatis.xml中添加日志配置:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logImpl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>STDOUT_LOGGING<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre><code>再运行测试方法2:</code></pre></div><p><img src="https://i.loli.net/2021/10/11/81OdSaHxpDY5VFT.png" alt="image-20211011193647664"></p><h3 id="3-事务"><a href="#3-事务" class="headerlink" title="3.事务"></a>3.事务</h3><p>(1)自动提交:当你的sql语句执行完毕后,提交事务,数据库更新操作直接保存数据</p><p>(2)</p><h4 id="3-1-在接口StudentDao中添加代码实现插入操作"><a href="#3-1-在接口StudentDao中添加代码实现插入操作" class="headerlink" title="3.1 在接口StudentDao中添加代码实现插入操作"></a>3.1 在接口StudentDao中添加代码实现插入操作</h4><p>接口中每一个方法对应一条sql语句</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//添加一个学生(返回值int表示本次操作影响的数据库行数)</span><span class="token keyword">int</span> <span class="token function">insertStudent</span><span class="token punctuation">(</span><span class="token class-name">Student</span> student<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h4 id="3-2-在mapper-StudentDao-xml-配置中添加代码"><a href="#3-2-在mapper-StudentDao-xml-配置中添加代码" class="headerlink" title="3.2 在mapper(StudentDao.xml)配置中添加代码"></a>3.2 在mapper(StudentDao.xml)配置中添加代码</h4><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--  添加insert  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insertStudent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    insert into student values(1002,"lisi","lisi@163.com",18)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="3-3-在MyTest类中添加测试方法insertStudent"><a href="#3-3-在MyTest类中添加测试方法insertStudent" class="headerlink" title="3.3 在MyTest类中添加测试方法insertStudent"></a>3.3 在MyTest类中添加测试方法insertStudent</h4><p>因为绝大多数代码都是重复的,所以可以直接复制上一个测试方法</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>    <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"insertStudent"</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rows <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis添加一个学生,rows = "</span><span class="token operator">+</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>    session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>执行测试方法:</p><p><img src="https://i.loli.net/2021/10/11/xrIvgqMZdHy194B.png" alt="image-20211011200645059"></p><p>测试方法执行成功,而且影响行数为:1</p><p>问题来了:</p><p>当检查数据库到底插入进去了没有时,</p><p><img src="https://i.loli.net/2021/10/11/AQhOSqae4KoIUrX.png" alt="image-20211011200844781"></p><p>发现没有,那么问题出在哪里,我们仔细观察刚才的日志,发现自动提交事务关闭了!</p><p><img src="https://i.loli.net/2021/10/11/RAosZIdT6BhMG28.png" alt="image-20211011200931167"></p><p>解决:</p><p>在测试方法中添加提交事务代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//mybatis默认执行sql语句是,手动提交事务模式,在左insert,delete,update时需要提交事务</span>session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>再次执行代码,并检查数据库:</p><p><img src="https://i.loli.net/2021/10/11/Ub3Nr2nz6HSOYVe.png" alt="image-20211011201347066"></p><p><img src="https://i.loli.net/2021/10/11/nraOceS8jMiIBVd.png" alt="image-20211011201415435"></p><p>成功!</p><p>insert语句使用占位符:</p><p>在测试分类MyTest中添加测试方法testInsertStudent2</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertStudent2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>    <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>    <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//4.获取SqlSession对象</span>    <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//5.指定要执行的sql语句的id</span>    <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>    <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"insertStudent2"</span><span class="token punctuation">;</span>    <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1003</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"wangwu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">"wangwu@163.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis插入一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rows <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">,</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//mybatis默认执行sql语句是,手动提交事务模式,在左insert,delete,update时需要提交事务</span>    session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//7.关闭SqlSession对象</span>    session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>在mapper配置文件(StudentDao.xml)中添加一条insert语句</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--  insert占位符    如果传入给mybatis是一个java对象,使用#&#123;属性名&#125; 获取属性的值    属性值放到 #&#123;&#125;占位符的位置,mybatis执行此属性对应的getxxx()    例如,#&#123;id&#125;,执行getId();  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insertStudent2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    insert into student values(#&#123;id&#125;,#&#123;name&#125;,#&#123;email&#125;,#&#123;age&#125;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>执行测试方法testInsertStudent2:</p><p><img src="https://i.loli.net/2021/10/11/pyOfcsZFI2WnMv1.png" alt="image-20211011203311335"></p><p>对比一下数据库:</p><p><img src="https://i.loli.net/2021/10/11/TdguKCDWMwkibpm.png" alt="image-20211011203549810"></p><h2 id="六-mybatis重要对象"><a href="#六-mybatis重要对象" class="headerlink" title="六.mybatis重要对象"></a>六.mybatis重要对象</h2><ol><li><p>Resources</p><p>mybatis框架中的对象,作用就是:读取主配置信息</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"mybatis.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>SqlSessionFactoryBuild</p><p>负责创建SqlSessionFactory对象</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>SqlSessionFactory</p><p><strong>重要对象!!!!!</strong></p><p>创建此对象需要更多的资源和时间.</p><p>在项目中有一个就可以了.</p><p>SqlSessionFactory是一个接口:作用是SqlSession的工厂,就是创建SqlSession对象.</p><p>DefaultSqlSessionFactory实现类</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultSqlSessionFactory</span> <span class="token keyword">implements</span> <span class="token class-name">SqlSessionFactory</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>SqlSessionFactory接口中的方法:</p><p>openSession():获取以恶搞默认的SqlSession对象,默认是手动提交事务的.</p><p>openSession(boolean): boolean参数表示是否提交事务</p><div class="code-wrapper"><pre><code>true: 创建一个自动提交事务的SqlSessionfalse: 等同于没有参数的openSession</code></pre></div><p>自动提交事务,例如:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertStudent2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>    <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>    <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//4.获取SqlSession对象</span>    <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//5.指定要执行的sql语句的id</span>    <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>    <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"insertStudent2"</span><span class="token punctuation">;</span>       <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1004</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"zhaoliu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">"zhaoliu@163.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis插入一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rows <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">,</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//mybatis默认执行sql语句是,手动提交事务模式,在左insert,delete,update时需要提交事务</span>    <span class="token comment">//session.commit();</span>          <span class="token comment">//7.关闭SqlSession对象</span>    session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>SqlSession对象</p><p>SqlSession是通过SqlSessionFactory获取的,SqlSession本事就是接口</p><p>DefaultSqlSession实现类</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultSqlSession</span> <span class="token keyword">implements</span> <span class="token class-name">SqlSession</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>SqlSession作用就是提供了大量的执行sql语句的方法</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">SelectOne</span><span class="token operator">:</span>执行sql语句<span class="token punctuation">,</span>最多得到一行记录<span class="token punctuation">,</span>多余<span class="token number">1</span>行是错误<span class="token class-name">SelectList</span><span class="token operator">:</span>执行sql语句<span class="token punctuation">,</span>可以返回多行数据<span class="token class-name">SelectMap</span><span class="token operator">:</span>执行sql语句<span class="token punctuation">,</span>得到一个<span class="token class-name">Map</span><span class="token class-name">Insert</span><span class="token operator">:</span>执行insert语句update<span class="token operator">:</span>执行update语句delete<span class="token operator">:</span>执行delete语句commit<span class="token operator">:</span>提交事务rollback<span class="token operator">:</span>回滚事务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>注意:</p><p>SqlSession对象不是线程安全的,使用的步骤:</p><p>①:在方法的内部,执行sql语句之前,先获取SqlSession对象</p><p>②:调用SqlSession的方法,执行sql语句</p><p>③:关闭SqlSession对象,执行SqlSession.close()</p><h2 id="七-属性配置文件"><a href="#七-属性配置文件" class="headerlink" title="七.属性配置文件"></a>七.属性配置文件</h2><p>在resources目录下新建<code>jdbc.properties</code>文件</p><p>内容:</p><div class="code-wrapper"><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">jdbc.driver</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span class="token attr-name">jdbc.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/mybatis?useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8"</span><span class="token attr-name">jdbc.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">jdbc.password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>修改mybatis配置文件<code>mybatis.xml</code></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  外部的属性配置文件          resource:指定类路径下的某个属性配置文件          因为:resources目录下的文件最中编译到target/classes根目录下的          classes是类目录的根          resource="jdbc.properties"指定的是classes目录下的某个文件      --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc.properties<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logImpl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>STDOUT_LOGGING<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token comment">&lt;!--配置数据源: 创建Connection对象--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!--driver:驱动的内容--></span><span class="token comment">&lt;!--                &lt;property name="driver" value="com.mysql.jdbc.Driver"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.driver&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!--连接数据库url--></span><span class="token comment">&lt;!--                &lt;property name="url" value="jdbc:mysql://localhost:3306/mybatis?useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.url&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!--用户名--></span><span class="token comment">&lt;!--                &lt;property name="username" value="root"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.username&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!--密码--></span><span class="token comment">&lt;!--                &lt;property name="password" value="123456"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.password&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--指定其他mapper文件的位置:        指定其他的mapper文件目的是找到其他文件的sql语句    --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行代码测试无误即可.</p><h2 id="八-完整的代码文件"><a href="#八-完整的代码文件" class="headerlink" title="八.完整的代码文件"></a>八.完整的代码文件</h2><p>结构:</p><p><img src="https://i.loli.net/2021/10/11/evCY2diwMlS63k5.png" alt="image-20211011220607863"></p></li></ol><p><code>pom.xml</code>:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--坐标--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.codeanime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>project01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--依赖列表--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--单元测试--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- mybatis依赖 --></span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- mysql驱动 --></span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.46<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--资源插件 处理src/main/java目录下的xml--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--所在的目录--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--包括目录下的.properties,.xml 文件都会扫描到--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!--  指定jdk版本的插件,可加可不加,因为在上面已经指定过jdk的版本   --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>mybatis.xml</code>:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  外部的属性配置文件          resource:指定类路径下的某个属性配置文件          因为:resources目录下的文件最中编译到target/classes根目录下的          classes是类目录的根          resource="jdbc.properties"指定的是classes目录下的某个文件      --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc.properties<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logImpl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>STDOUT_LOGGING<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token comment">&lt;!--配置数据源: 创建Connection对象--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!--driver:驱动的内容--></span><span class="token comment">&lt;!--                &lt;property name="driver" value="com.mysql.jdbc.Driver"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.driver&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!--连接数据库url--></span><span class="token comment">&lt;!--                &lt;property name="url" value="jdbc:mysql://localhost:3306/mybatis?useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.url&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!--用户名--></span><span class="token comment">&lt;!--                &lt;property name="username" value="root"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.username&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!--密码--></span><span class="token comment">&lt;!--                &lt;property name="password" value="123456"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.password&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--指定其他mapper文件的位置:        指定其他的mapper文件目的是找到其他文件的sql语句    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--使用mapper的resource属性指定mapper文件的路径            这个路径是从target/classed路径开启的            使用注意:                resource="mapper文件的路径,只用 / 分割路径"                一个mapper resource指定一个mapper文件        --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com/codeanime/dao/StudentDao.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>StudentDao.xml(mapper)</code>:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.dao.StudentDao<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!--    &lt;select id="selectBlog" resultType="Blog">--></span><span class="token comment">&lt;!--        select * from Blog where id = #&#123;id&#125;--></span><span class="token comment">&lt;!--    &lt;/select>--></span>    <span class="token comment">&lt;!--查询一个学生Student            &lt;select>: 表示查询操作,里面是select语句            id: 要执行的sql语句的唯一标识,是一个自定义的字符串                推荐使用dao接口中的方法名称            resultType: 告诉mybatis,执行sql语句,把数据赋值给那个类型的java对象                resultType的值现在使用的是java对象的全限定名称            #&#123;studentId&#125;:占位符,表示从java程序中传入过来的数据        --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectStudentById<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.domain.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select id,name,email,age from student where id = #&#123;studentId&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  添加insert  --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insertStudent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into student values(1002,"lisi","lisi@163.com",18)    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  insert占位符        如果传入给mybatis是一个java对象,使用#&#123;属性名&#125; 获取属性的值        属性值放到 #&#123;&#125;占位符的位置,mybatis执行此属性对应的getxxx()        例如,#&#123;id&#125;,执行getId();      --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insertStudent2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into student values(#&#123;id&#125;,#&#123;name&#125;,#&#123;email&#125;,#&#123;age&#125;)    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--    1.约束文件    http://mybatis.org/dtd/mybatis-3-mapper.dtd    约束文件的作用:    定义和限制当前文件中可以出现的标签和属性,以及标签出现的顺序    2.mapper是根标签        namespace: 命名空间,必须有值,不能为空,唯一值.                    推荐使用Dao接口的全限定名称.        作用: 参与识别sql语句的作用.     3.在mapper里面可以写&lt;insert>,&lt;update>,&lt;delete>,&lt;select>        &lt;insert>里面是insert语句,表示执行的insert操作        ...--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>jdbc.properties</code>:</p><div class="code-wrapper"><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">jdbc.driver</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span class="token attr-name">jdbc.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/mybatis?useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8"</span><span class="token attr-name">jdbc.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">jdbc.password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>StudentDao接口:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>dao</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">StudentDao</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//查询一个学生</span>    <span class="token class-name">Student</span> <span class="token function">selectStudentById</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//添加一个学生(返回值int表示本次操作影响的数据库行数)</span>    <span class="token keyword">int</span> <span class="token function">insertStudent</span><span class="token punctuation">(</span><span class="token class-name">Student</span> student<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>Student类:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>domain</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> email<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token class-name">String</span> email<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> email<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"学生实体信息&#123;"</span> <span class="token operator">+</span>                <span class="token string">"id="</span> <span class="token operator">+</span> id <span class="token operator">+</span>                <span class="token string">", name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", email='"</span> <span class="token operator">+</span> email <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>MyTest测试类:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//测试mybatis执行sql语句</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectStudentById</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//调用mybatis讴歌对象的方法,执行mapper文件中的sql语句</span>        <span class="token comment">//mybatis核心类:SqlSessionFactory</span>        <span class="token comment">//1.定义mybatis主配置文件的位置,从类路径开始相对路径</span>        <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>        <span class="token comment">//2.读取主配置文件,使用mybatis框架中的Resources类</span>        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>        <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//4.获取SqlSession对象</span>        <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//5.指定要执行的sql语句的id</span>        <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>        <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"selectStudentById"</span><span class="token punctuation">;</span>        <span class="token comment">//6.通过SqlSession的方法,执行sql语句</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis查询一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//7.关闭SqlSession对象</span>        session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectStudentById2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//调用mybatis讴歌对象的方法,执行mapper文件中的sql语句</span>        <span class="token comment">//mybatis核心类:SqlSessionFactory</span>        <span class="token comment">//1.定义mybatis主配置文件的位置,从类路径开始相对路径</span>        <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>        <span class="token comment">//2.读取主配置文件,使用mybatis框架中的Resources类</span>        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>        <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//4.获取SqlSession对象</span>        <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//5.指定要执行的sql语句的id</span>        <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>        <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"selectStudentById"</span><span class="token punctuation">;</span>        <span class="token comment">//6.通过SqlSession的方法,执行sql语句</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis查询一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//7.关闭SqlSession对象</span>        session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"insertStudent"</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rows <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis添加一个学生,rows = "</span><span class="token operator">+</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//mybatis默认执行sql语句是,手动提交事务模式,在左insert,delete,update时需要提交事务</span>        session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertStudent2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>        <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//4.获取SqlSession对象</span>        <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//5.指定要执行的sql语句的id</span>        <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>        <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"insertStudent2"</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        student<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1003</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        student<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"wangwu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        student<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">"wangwu@163.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis插入一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rows <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">,</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//mybatis默认执行sql语句是,手动提交事务模式,在左insert,delete,update时需要提交事务</span>        session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//7.关闭SqlSession对象</span>        session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MyBatis小记&quot;&gt;&lt;a href=&quot;#MyBatis小记&quot; class=&quot;headerlink&quot; title=&quot;MyBatis小记&quot;&gt;&lt;/a&gt;MyBatis小记&lt;/h1&gt;&lt;p&gt;为什么要用Mybatis?&lt;/p&gt;
&lt;p&gt;jdbc缺点:&lt;/p&gt;
&lt;p&gt;缺点一：重复</summary>
      
    
    
    
    <category term="MyBatis" scheme="https://codeanime.cc/categories/MyBatis/"/>
    
    
    <category term="MySQL" scheme="https://codeanime.cc/tags/MySQL/"/>
    
    <category term="MyBatis" scheme="https://codeanime.cc/tags/MyBatis/"/>
    
    <category term="mybatis" scheme="https://codeanime.cc/tags/mybatis/"/>
    
    <category term="maven" scheme="https://codeanime.cc/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Maven小记</title>
    <link href="https://codeanime.cc/Maven%E5%B0%8F%E8%AE%B0.html"/>
    <id>https://codeanime.cc/Maven%E5%B0%8F%E8%AE%B0.html</id>
    <published>2021-10-10T01:28:12.000Z</published>
    <updated>2021-10-10T01:41:01.422Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Maven小记"><a href="#Maven小记" class="headerlink" title="Maven小记"></a>Maven小记</h1><h2 id="一-Maven简介"><a href="#一-Maven简介" class="headerlink" title="一.Maven简介"></a>一.Maven简介</h2><p><strong>Maven</strong>是由Apache开发的一个工具<strong>软件</strong>。用来<strong>管理java项目</strong>，<strong>依赖管理</strong>(jar包的管理)，<strong>项目构建</strong>.</p><h2 id="二-Maven的作用"><a href="#二-Maven的作用" class="headerlink" title="二.Maven的作用"></a>二.Maven的作用</h2><p>Maven的作用可以分成三类:</p><ul><li><p>项目构建</p></li><li><p>依赖管理</p></li><li><p>统一开发结构</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">HelloMaven</span><span class="token punctuation">(</span><span class="token class-name">Maven</span>工程的根目录，目录名可以自定义<span class="token punctuation">)</span><span class="token operator">|</span><span class="token operator">--</span> pom<span class="token punctuation">.</span><span class="token function">xml</span><span class="token punctuation">(</span><span class="token class-name">Maven</span>工程的核心配置文件<span class="token punctuation">)</span><span class="token operator">|</span><span class="token operator">--</span> <span class="token function">src</span><span class="token punctuation">(</span>存放源码的目录<span class="token punctuation">)</span>    <span class="token operator">|</span><span class="token operator">--</span> <span class="token function">main</span><span class="token punctuation">(</span>主程序，简单来说就是我们写的非测试代码<span class="token punctuation">)</span>    <span class="token operator">|</span>   <span class="token operator">|</span><span class="token operator">--</span> <span class="token function">java</span><span class="token punctuation">(</span>主程序的<span class="token class-name">Java</span>代码<span class="token punctuation">)</span>    <span class="token operator">|</span>   <span class="token operator">|</span><span class="token operator">--</span> <span class="token function">resources</span><span class="token punctuation">(</span>主程序的配置文件，xml文件，properties文件等<span class="token punctuation">)</span>    <span class="token operator">|</span><span class="token operator">--</span> <span class="token function">test</span><span class="token punctuation">(</span>测试程序<span class="token punctuation">)</span>        <span class="token operator">|</span><span class="token operator">--</span> <span class="token function">java</span><span class="token punctuation">(</span>测试程序的<span class="token class-name">Java</span>代码<span class="token punctuation">)</span>        <span class="token operator">|</span><span class="token operator">--</span> <span class="token function">resources</span><span class="token punctuation">(</span>测试程序的配置文件，xml文件，properties文件等<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h2 id="三-Maven环境搭建"><a href="#三-Maven环境搭建" class="headerlink" title="三.Maven环境搭建"></a>三.Maven环境搭建</h2><h3 id="3-1-下载maven压缩包"><a href="#3-1-下载maven压缩包" class="headerlink" title="3.1,下载maven压缩包"></a>3.1,下载maven压缩包</h3><p>maven官网:<a href="https://maven.apache.org/">https://maven.apache.org/</a></p><p>maven下载地址:<a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a></p><p>我下的<code>.zip</code>的</p><p><img src="https://i.loli.net/2021/10/10/eBqnSxKiQNX9rlv.png" alt="image-20211009091852503"></p><p>下载下来解压即可.</p><p>各目录的作用:</p><p>bin：可执行程序目录，</p><p>boot：maven自身的启动加载器</p><p>conf：maven配置文件的存放目录</p><p>lib：maven运行所需库的存放目录</p><h2 id="3-2-配置环境变量"><a href="#3-2-配置环境变量" class="headerlink" title="3.2,配置环境变量"></a>3.2,配置环境变量</h2><p>配置<code>JAVA_HOME</code>—你的java安装目录</p><p><img src="https://i.loli.net/2021/10/10/zMGaXPB8xKEFsCU.png" alt="image-20211009092614772"></p><p>配置maven环境变量:在系统变量—Path—配置你的maven的<strong>bin目录</strong></p><p><img src="https://i.loli.net/2021/10/10/fY5qGVQEid1HSrW.png" alt="image-20211009092507066"></p><p>测试配置后的结果:—cmd–<code>mvn -v</code></p><p><img src="https://i.loli.net/2021/10/10/SwDi5K89WMBXNRT.png" alt="image-20211009092936716"></p><p>出现一堆信息表示配置成功.</p><h2 id="四-Maven核心概念"><a href="#四-Maven核心概念" class="headerlink" title="四.Maven核心概念"></a>四.Maven核心概念</h2><h3 id="4-1-仓库"><a href="#4-1-仓库" class="headerlink" title="4.1 仓库"></a>4.1 仓库</h3><p>仓库:用于存储资源，主要是各种jar包</p><p>maven仓库可以分为两种:本地仓库和远程仓库.</p><p>**本地仓库:**开发者自己电脑上存储资源的仓库，也可从远程仓库获取资源</p><p>**远程仓库:**可以分为中央仓库和私服</p><ul><li>中央仓库:maven团队维护的仓库, <a href="https://mvnrepository.com/">仓库地址</a></li><li>私服:各公司/部门等小范围内存储资源的仓库，私服也可以从中央仓库获取资源</li></ul><h3 id="4-2-坐标"><a href="#4-2-坐标" class="headerlink" title="4.2 坐标"></a>4.2 坐标</h3><p><strong>坐标元素:</strong></p><ul><li><p>groupId : 定义当前Maven项目组织名称（通常是域名反写，如：org.mybatis；）</p></li><li><p>artifactId : 定义实际项目名称</p></li><li><p>version : 定义当前项目的当前版本或者是所依赖的jar包的版本</p></li></ul><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.codeanime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>HelloMaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><strong>坐标的作用:</strong></p><p>使用唯一标识，唯一性定义资源位置，通过该标识可以将资源的识别与下载工作交由机器完成</p><h3 id="4-3-生命周期"><a href="#4-3-生命周期" class="headerlink" title="4.3 生命周期"></a>4.3 生命周期</h3><p>Maven生命周期就是为了对所有的构建过程进行抽象和统一。包括项目清理、初始化、编译、打包、测 试、部署等几乎所有构建步骤。生命周期可以理解为构建工程的步骤。</p><p><strong>maven生命周期（项目构建的过程）：</strong></p><p>对项目进行清理、编译、测试、报告、打包、安装、部署上传到私服的过程。</p><p><strong>清理</strong>（mvn clean）：它删除在构建编译和测试时在项目目录中生成target目录的文件。但是已经install到仓库里的包不会删除。<br><strong>编译</strong>（mvn compile）：maven可以批量的把程序源代码编译为执行代码（.java编译成.class），maven可以同时把成千上百的文件编译为class，javac不一样，javac一次编译一个文件。在pom.xml同级目录下生成target目录存放主程序编译之后的.class字节码文件。<br><strong>测试编译</strong>（mvn test-compile）：maven可以批量的同时执行测试程序代码以及测试功能，验证功能正确性，在pom.xml目录下生成target目录存放主程序编译之后的.class字节码文件。<br><strong>测试</strong>（mvn test）：maven可以批量的同时测试很多功能，在pom.xml同级目录下生成surefire-reports目录，保存测试结果。<br><strong>报告</strong>：生成测试结果的文件存放在surefire-reports目录，测试通过没有。<br><strong>打包</strong>（mvn package）：把你的项目中src/main/java目录下所有的.class文件，src/main/resources目录下配置文件等所有资源放到一个压缩文件中。这个压缩文件就是项目的结果文件，通常java程序，压缩文件是.jar扩展名的。对于web应用，压缩文件扩展名是.war。总而言之，会把编译、编译测试、测试、并且按照pom.xml配置把主程序打包生成jar包或者war包。<br><strong>安装</strong>（mvn install）：把打包（mvn package）中生成的文件jar、war安装到本地仓库。会把本工程打包，并且按照本工程的项目坐标（三个参数）保存到本地仓库中。<br><strong>部署</strong>（mvn deploy）：程序安装后可以执行，把本工程打包，按照本项目工程的项目坐标（三个参数）保存到本地仓库中，并且还会保存到私服仓库中以及自动把项目部署到web容器中。<br><strong>注意:执行以上命令必须在命令行进入pom.xml所在目录！</strong></p><p>常用命令:         </p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mvn -version         查看maven的版本及配置信息mvn compile          编译项目代码mvn package          打包项目mvn test             运行单元测试mvn clean            清除编译产生的target文件夹内容，可以配合相应命令一起使用，如mvn clean package， mvn clean testmvn install          打包后将其安装在本地仓库mvn deploy           打包后将其安装到pom文件中配置的远程仓库mvn site             生成站点目录  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="4-4-pom文件"><a href="#4-4-pom文件" class="headerlink" title="4.4 pom文件"></a>4.4 pom文件</h3><p><strong><code> pom.xml</code>是maven的核心文件，是maven的灵魂。</strong></p><p><code>pom.xml</code>结构说明:</p><h4 id="4-41-modelVersion"><a href="#4-41-modelVersion" class="headerlink" title="4.41 modelVersion"></a>4.41 modelVersion</h4><p>Maven模型的版本，对于Maven2和Maven3来说，它只能是4.0.0</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="4-42-groupid"><a href="#4-42-groupid" class="headerlink" title="4.42 groupid"></a>4.42 groupid</h4><p>组织id,一般是公司域名的倒写:</p><p>例如:<code>com.baidu</code>或者<code>com.baidu.project</code></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baidu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baidu.project<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h4 id="4-43-artifactId"><a href="#4-43-artifactId" class="headerlink" title="4.43 artifactId"></a>4.43 artifactId</h4><p>项目名称，也是模块名称，对应groupId中项目中的子项目</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>projectname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="4-44-version"><a href="#4-44-version" class="headerlink" title="4.44 version"></a>4.44 version</h4><p>项目版本号。如果项目还在开发中，是不稳定版本,通常在版本后带-SNAPSHOT，version使用三位数字标识，例如1.0.1</p><h4 id="4-45-gav"><a href="#4-45-gav" class="headerlink" title="4.45 gav"></a>4.45 gav</h4><p>groupId、artifactId、version三个元素合并在一起统称为项目坐标，项目坐标具有唯一性，称之为唯一值，在互联网中唯一标识一个项目的，在中央仓库中就是根据项目坐标的唯一值，在资源库中搜索下载相应的jar包</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>公司域名的倒序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>项目名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>版本号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>假如,获取<code>mysql5.0.8</code>连接驱动，必须在pom.xml中声明mysql连接驱动在仓库中唯一性项目坐标搜索下载jar包。打开地址：<a href="https://mvnrepository.com/%EF%BC%8C%E9%94%AE%E5%85%A5mysql%E5%85%B3%E9%94%AE%E5%AD%97%E6%89%BE%E5%88%B0%E5%AF%B9%E5%BA%94%E7%89%88%E6%9C%AC%E3%80%82">https://mvnrepository.com/，键入mysql关键字找到对应版本。</a></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.0.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/10/WBlxRAivmhJgMt6.png" alt="image-20211009104129229"></p><h4 id="4-46-packaging"><a href="#4-46-packaging" class="headerlink" title="4.46 packaging"></a>4.46 packaging</h4><p>项目打包的类型，可以是jar、rar、ear、pom，web应用是war， packaging可以不写，默认是jar</p><h4 id="4-47-依赖（dependencies和dependency）"><a href="#4-47-依赖（dependencies和dependency）" class="headerlink" title="4.47 依赖（dependencies和dependency）"></a>4.47 依赖（dependencies和dependency）</h4><p>项目中要使用的各种资源说明，比我的项目要使用mysql驱动，Maven的一个重要作用就是管理jar包，为了一个项目可以构建或运行，项目中不可避免的，会依赖很多其他的jar包，在 Maven中，这些jar就被称为依赖，使用标签dependency来配置。而这种依赖的配置正是通过坐标来定位的，由此我们也不难看出，maven把所有的jar包也都视为项目存在了</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--  依赖 相当于java代码中的 import --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.0.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>          <span class="token comment">&lt;!--单元测试程序的依赖 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="4-48-properties"><a href="#4-48-properties" class="headerlink" title="4.48 properties"></a>4.48 properties</h4><p>properties是用来定义一些配置属性的，例如project.build.sourceEncoding(项目构建源码编码方式)，可以设置为UTF-8，防止中文乱码，也可定义相关构建版本号，便于日后统一升级</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--配置属性 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--构建源码编码方式 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--jdk版本 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--maven构建版本号 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="4-49-bulid"><a href="#4-49-bulid" class="headerlink" title="4.49 bulid"></a>4.49 bulid</h4><p>表示与构建相关的配置，例如设置编译插件的jdk版本、插件配置等。</p><p>例如，使用maven项目骨架快速创建java项目时，会自动生成一堆的maven生命周期的插件，都放在build中：</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginManagement</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-clean-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-resources-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.22.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-jar-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-install-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.5.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-deploy-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.8.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-site-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.7.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-project-info-reports-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginManagement</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="4-5-Maven命令和插件"><a href="#4-5-Maven命令和插件" class="headerlink" title="4.5 Maven命令和插件"></a>4.5 Maven命令和插件</h3><p>maven命令：maven独立使用，通过命令，完成maven的生命周期的执行。maven可以使用命令，完成项目的清理，编译，测试等等</p><p>maven的插件：maven命令执行时，真正完成功能的是插件，插件是一些jar文件，一些类</p><h3 id="4-6-单元测试junit"><a href="#4-6-单元测试junit" class="headerlink" title="4.6 单元测试junit"></a>4.6 单元测试junit</h3><p>单元测试：用的是junit，是一个专门测试的框架（工具)</p><p>junit测试内容：测试的是类中的方法，每一个方法都是独立测试的。方法是测试的基本单位(单元)</p><p>maven借助单元测试，批量测试类中的大量方法是否符合预期的</p><p><strong>使用:</strong></p><p>(1)在pom.xml中加入依赖</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--单元测试程序的依赖 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="五-Maven项目搭建"><a href="#五-Maven项目搭建" class="headerlink" title="五.Maven项目搭建"></a>五.Maven项目搭建</h2><h3 id="5-1-仓库配置"><a href="#5-1-仓库配置" class="headerlink" title="5.1 仓库配置"></a>5.1 仓库配置</h3><p>我们要在自己的电脑上开发,那么首先就是要配置本地仓库</p><p>在maven的配置文件<code>conf/settings.xml</code>中可以找到它的说明</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- localRepository  | The path to the local repository maven will use to store artifacts.  |  | Default: $&#123;user.home&#125;/.m2/repository &lt;localRepository>/path/to/local/repo&lt;/localRepository> --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>修改为:</p><p><img src="https://i.loli.net/2021/10/10/fuRnTwCq7xlYUcX.png" alt="image-20211009100327288"></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- localRepository   | The path to the local repository maven will use to store artifacts.   |   | Default: $&#123;user.home&#125;/.m2/repository  &lt;localRepository>/path/to/local/repo&lt;/localRepository>  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">></span></span>E:\maven-repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="5-2-Maven项目搭建"><a href="#5-2-Maven项目搭建" class="headerlink" title="5.2 Maven项目搭建"></a>5.2 Maven项目搭建</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">HelloMaven</span>                <span class="token comment">//项目文件夹</span>\src\main            <span class="token comment">//主程序目录(完成项目功能的代码和配置文件)</span>    \java        <span class="token comment">//源代码(包和相关的类定义)</span>    \resources    <span class="token comment">//配置文件</span>    \test            <span class="token comment">//放置测试程序代码的</span>    \java        <span class="token comment">//测试代码(junit)</span>    \resources      <span class="token comment">//测试程序需要的配置文件</span>    \pom<span class="token punctuation">.</span>xml                <span class="token comment">//maven的配置文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="5-2-1-手动搭建maven项目"><a href="#5-2-1-手动搭建maven项目" class="headerlink" title="5.2.1 手动搭建maven项目"></a>5.2.1 手动搭建maven项目</h3><p>（1）在E盘下创建目录MavenProject并进入该目录，作为我们的操作目录</p><p>（2）创建我们的maven项目，创建一个目录project-java作为我们的项目文件夹，并进入到该目录</p><p>（3）创建java代码（源代码）所在目录，即创建src/main/java</p><p>（4）创建配置文件所在目录，即创建src/main/resources</p><p>（5）创建测试源代码所在目录，即创建src/test/java</p><p>（6）创建测试存放配置文件存放目录，即src/test/resources</p><p>（7）在src/main/java中创建一个包（注意在windos文件夹下就是创建目录）com/codeanime，在该目录下创建<code>HelloMaven.java</code>文件，作为演示所需java程序，内容如下:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloMaven</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">HelloMaven</span> hm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloMaven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> hm<span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"在main方法中执行addNumber方法"</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span> n1<span class="token punctuation">,</span><span class="token keyword">int</span> n2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloMaven--addNumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> n1<span class="token operator">+</span>n2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>（8）在src/test/java中创建一个测试包（目录）com/codeanime，在该包下创建测试程序<code>TestHelloMaven.java</code></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Assert</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestHelloMaven</span><span class="token punctuation">&#123;</span>    <span class="token comment">//定义多个独立的测试方法,每个方法都是独立的</span>    <span class="token annotation punctuation">@test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAddNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行测试方法testAddNumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HelloMaven</span> hm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloMaven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> hm<span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//把计算结果result交给junit判断</span>        <span class="token comment">//期望值,实际值</span>        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>(9）在project-java/src下创建pom.xml文件，编辑如下</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span>    <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>     <span class="token comment">&lt;!--父工程--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.codeanime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>project-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--    导入依赖--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--    junit--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>通过前面的操作，我们已经搭建好了maven的项目结构，下面要通过maven来构建我们的项目</p><p>maven的构建命令以mvn开头，后面添加功能参数，可以一次性执行多个命令，用空格分离</p><p>mvn compile：编译</p><p>mvn clean：清理</p><p>mvn test：测试</p><p>mvn package：打包</p><p>mvn install：安装到本地仓库</p><p>下面我们来进行操作：</p><p>（1）进入priject-java目录(目录中有src和pom.xml)运行cmd,执行命令<code>mvn compile</code>:</p><p>第一次运行maven会下载很多东西</p><p><img src="https://i.loli.net/2021/10/10/wlmDds1x8H4Fkzn.png" alt="image-20211009170152974"></p><p>出现<code>BUILD SUCESS</code>说明成功:</p><p><img src="https://i.loli.net/2021/10/10/ZPRnOG5urwpTy7i.png" alt="image-20211009170231412"></p><p>编译完成后在项目<code>project-java</code>下多了一个目录<code>target</code>，在这个目录下就存放的是maven编译好的一些东西</p><p><img src="https://i.loli.net/2021/10/10/W1HUgv8yckieflO.png" alt="image-20211009171144174"></p><p>我们可以进入到target目录查看</p><p>其中生成的classes目录就是编译好的字节码文件</p><p>（2）当然如果我们想清理掉这些东西，我们只需执行mvn clean命令即可，清理掉后target目录也就消失了</p><p><img src="https://i.loli.net/2021/10/10/tVGzFveUdPnHf4E.png" alt="image-20211009171849570"></p><p><img src="https://i.loli.net/2021/10/10/VsDouiAyJ6XwWde.png" alt="image-20211009171907473"></p><p>（3）如果我们要执行测试包中的测试程序，我们只需执行mvn test命令即可</p><p><img src="https://i.loli.net/2021/10/10/xauSQX3EryhAMzW.png" alt="image-20211009171957253"></p><p>期望值和实际值一致,则正常编译执行</p><p><img src="https://i.loli.net/2021/10/10/OlQ4StqVc3kYfuH.png" alt="image-20211009172035674"></p><p>如果把程序中期望值改为其他的:</p><p>例如:</p><p><img src="https://i.loli.net/2021/10/10/OnhJYuCvQ6VxL7E.png" alt="image-20211009172136801"></p><p>则会抛出异常.</p><p>(4）使用<code>mvn package</code>命令进行打包，如下</p><p><img src="https://i.loli.net/2021/10/10/leRmpWiLhDvOaIF.png" alt="image-20211009172651504"></p><p>在生成的<code>target</code>目录中可以看到打包的结果<img src="https://i.loli.net/2021/10/10/Xol5QD6C47AHt1i.png" alt="image-20211009172704400"></p><p>当然，如果仔细看DOS窗口输出的我们会发现，<code>mvn package</code>命令的时候maven会把前面两个命令<code>mvn compile,mvn test</code>都执行一遍</p><p>(5）使用<code>mvn install</code>命令进行安装，将项目打好的包存入本地仓库</p><p><img src="https://i.loli.net/2021/10/10/P4xFAyLepaYDcGE.png" alt="image-20211009172809262"></p><p>仔细查看输出会发现mvn install命令执行的时候也会将前面的命令都执行一遍</p><p>此时我们可以去本地仓库中查找</p><p>maven是按照<code>groupId/artifactId/version</code>的结构在本地仓库进行存储</p><p><img src="https://i.loli.net/2021/10/10/Ki7MX6ysnabW5kB.png" alt="image-20211009172916138"></p><h3 id="5-2-2-IDEA工具搭建maven项目"><a href="#5-2-2-IDEA工具搭建maven项目" class="headerlink" title="5.2.2 IDEA工具搭建maven项目"></a>5.2.2 IDEA工具搭建maven项目</h3><p>前面学习的基本都是通过命令来构建和管理项目，但是这在实际开发过程中基本不常用，常用的是通过相关IDE工具来进行项目的构建和管理，因此我们使用IDEA工具进行maven项目的搭建</p><p>需要注意的是：Maven和IDEA在版本上存在一些兼容性问题，因为要合理的选择Maven和IDEA的版本，本课程中提供安装maven-3.6.1版本是可用的</p><p><img src="https://i.loli.net/2021/10/10/6KFOuI1GfcVS7RJ.png" alt="image-20211010083634827"></p><p><img src="https://i.loli.net/2021/10/10/VbahGu6JmOsSgZ9.png" alt="image-20211010083953518"></p><p><code>-DarchetypeCatalog=internal</code></p><p>maven 创建项目时,会从网络中下载一个archetype-catelog.xml作为项目模版文件,加上<code>-DarchetypeCatalog=internal</code>告诉maven创建项目时不要下载这个文件,加快创建maven项目的速度.</p><p>然后在设置这个,作用是对新建的或者导入的项目也使用同样的maven设置</p><p><img src="https://i.loli.net/2021/10/10/2Aw4HQcC8gebTfi.png" alt="image-20211010084612788"></p><p>设置跟刚才一样</p><p><img src="https://i.loli.net/2021/10/10/vMcd5g1amjIx9LF.png" alt="image-20211010085108710"></p><p><img src="https://i.loli.net/2021/10/10/Guf6i5WVIkRF7dN.png" alt="image-20211010085241690"></p><p>创建maven模块</p><p><img src="https://i.loli.net/2021/10/10/iPw9QbpUxtdaOTv.png" alt="image-20211010085548600"></p><p><img src="https://i.loli.net/2021/10/10/udf3nQUZiy4hwDA.png" alt="image-20211010085741252"></p><p><img src="https://i.loli.net/2021/10/10/bABV2gkQ9qc7He6.png" alt="image-20211010090038446"></p><p>加载完毕即可</p><p><img src="https://i.loli.net/2021/10/10/cs7CKqZrym4FDih.png" alt="image-20211010090310932"></p><p>创建好的maven目录</p><p><img src="https://i.loli.net/2021/10/10/6qfwBalQyiSkDoF.png" alt="image-20211010090451143"></p><p>那么如何使用maven呢</p><p>首先,编写java程序:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloMaven</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span> n1<span class="token punctuation">,</span><span class="token keyword">int</span> n2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> n1<span class="token operator">+</span>n2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HelloMaven</span> helloMaven <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloMaven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> helloMaven<span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result = "</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>执行测试一下:</p><p><img src="https://i.loli.net/2021/10/10/hn9rvZqVUG2HFmI.png" alt="image-20211010091400326"></p><p>编写测试代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Assert</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestHelloMaven</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAddNumber1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testAddNumber1正在运行中-----------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HelloMaven</span> helloMaven <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloMaven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> helloMaven<span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAddNumber2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testAddNumber2正在运行中============="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HelloMaven</span> helloMaven <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloMaven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> helloMaven<span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/10/6d41Bhv2VO8n7Kz.png" alt="image-20211010091958024"></p><p>如果期望值和实际值不一样,则会抛出异常:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/10/12sTmMfX7vAWhtk.png" alt="image-20211010092216676"></p><p>maven使用技巧:</p><p>点击最右侧maven窗口:</p><p><img src="https://i.loli.net/2021/10/10/gCP1DUKS4RO3Vfh.png" alt="image-20211010092650290"></p><p>可以使用和命令行一样的功能,至此,maven先学到这里了!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Maven小记&quot;&gt;&lt;a href=&quot;#Maven小记&quot; class=&quot;headerlink&quot; title=&quot;Maven小记&quot;&gt;&lt;/a&gt;Maven小记&lt;/h1&gt;&lt;h2 id=&quot;一-Maven简介&quot;&gt;&lt;a href=&quot;#一-Maven简介&quot; class=&quot;header</summary>
      
    
    
    
    <category term="Maven" scheme="https://codeanime.cc/categories/Maven/"/>
    
    
    <category term="Java" scheme="https://codeanime.cc/tags/Java/"/>
    
    <category term="Maven" scheme="https://codeanime.cc/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Java多线程--sleep()方法小记</title>
    <link href="https://codeanime.cc/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B-sleep-%E6%96%B9%E6%B3%95%E5%B0%8F%E8%AE%B0.html"/>
    <id>https://codeanime.cc/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B-sleep-%E6%96%B9%E6%B3%95%E5%B0%8F%E8%AE%B0.html</id>
    <published>2021-10-06T14:01:38.000Z</published>
    <updated>2021-10-06T14:07:06.569Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Java多线程–sleep-方法小记"><a href="#Java多线程–sleep-方法小记" class="headerlink" title="Java多线程–sleep()方法小记"></a>Java多线程–sleep()方法小记</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">Thread01</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestThread01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//这段代码会让线程t进入休眠吗?</span>            t<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//在执行的时候回转换成Thread.sleep(1000 * 5)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//作用:让当前线程进入休眠,也就是main线程</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//sleep()方法为静态方法</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello Thread!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"----->"</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h4><p>五秒后打印<code>Hello Thread!</code></p><p><img src="https://i.loli.net/2021/10/06/Bc18GZdQfw5sELN.png" alt="image-20210930173558089"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Java多线程–sleep-方法小记&quot;&gt;&lt;a href=&quot;#Java多线程–sleep-方法小记&quot; class=&quot;headerlink&quot; title=&quot;Java多线程–sleep()方法小记&quot;&gt;&lt;/a&gt;Java多线程–sleep()方法小记&lt;/h3&gt;&lt;h4 id=</summary>
      
    
    
    
    <category term="Java" scheme="https://codeanime.cc/categories/Java/"/>
    
    
    <category term="Java" scheme="https://codeanime.cc/tags/Java/"/>
    
    <category term="多线程" scheme="https://codeanime.cc/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java线程安全问题-模拟对同一银行账户进行取款</title>
    <link href="https://codeanime.cc/Java%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98-%E6%A8%A1%E6%8B%9F%E5%AF%B9%E5%90%8C%E4%B8%80%E9%93%B6%E8%A1%8C%E8%B4%A6%E6%88%B7%E8%BF%9B%E8%A1%8C%E5%8F%96%E6%AC%BE.html"/>
    <id>https://codeanime.cc/Java%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98-%E6%A8%A1%E6%8B%9F%E5%AF%B9%E5%90%8C%E4%B8%80%E9%93%B6%E8%A1%8C%E8%B4%A6%E6%88%B7%E8%BF%9B%E8%A1%8C%E5%8F%96%E6%AC%BE.html</id>
    <published>2021-10-06T14:01:27.000Z</published>
    <updated>2021-10-06T14:08:39.649Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Java线程安全问题-模拟对同一银行账户进行取款"><a href="#Java线程安全问题-模拟对同一银行账户进行取款" class="headerlink" title="Java线程安全问题-模拟对同一银行账户进行取款"></a>Java线程安全问题-模拟对同一银行账户进行取款</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">ThreadSafe</span><span class="token punctuation">;</span><span class="token comment">/** * 银行账户 * 不适用线程同步机制,多线程对同一个账户进行取款,出现线程安全问题 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Account</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> actNo<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> balance<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token class-name">String</span> actNo<span class="token punctuation">,</span> <span class="token keyword">double</span> balance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>actNo <span class="token operator">=</span> actNo<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getActNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> actNo<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setActNo</span><span class="token punctuation">(</span><span class="token class-name">String</span> actNo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>actNo <span class="token operator">=</span> actNo<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBalance</span><span class="token punctuation">(</span><span class="token keyword">double</span> balance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//取款方法</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token keyword">double</span> money<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//取款之前的余额</span>        <span class="token keyword">double</span> before <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//取款之后的余额</span>        <span class="token keyword">double</span> after <span class="token operator">=</span> before<span class="token operator">-</span>money<span class="token punctuation">;</span>        <span class="token comment">//如果加上这段模拟网络延迟,一定会出问题</span>        <span class="token comment">//try &#123;</span>            <span class="token comment">//Thread.sleep(1000);</span>        <span class="token comment">//&#125; catch (InterruptedException e) &#123;</span>            <span class="token comment">//e.printStackTrace();</span>        <span class="token comment">//&#125;</span>        <span class="token comment">//更新余额</span>        <span class="token comment">//思考:t1执行到这里,但还没来得及执行这行代码,t2线程进来执行了withdraw方法,此时会发生问题.</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setBalance</span><span class="token punctuation">(</span>after<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">ThreadSafe</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AccountThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">&#123;</span>    <span class="token comment">//两个线程必须共享同一个账户对象</span>    <span class="token keyword">private</span> <span class="token class-name">Account</span> act<span class="token punctuation">;</span>    <span class="token comment">//通过构造方法传递过来账户对象</span>    <span class="token keyword">public</span> <span class="token class-name">AccountThread</span><span class="token punctuation">(</span><span class="token class-name">Account</span> act<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>act <span class="token operator">=</span> act<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//run方法的执行表示取款操作,假设存款有5000块</span>        <span class="token keyword">double</span> money <span class="token operator">=</span> <span class="token number">5000</span><span class="token punctuation">;</span>        <span class="token comment">//取款,多线程并发执行这个方法</span>        act<span class="token punctuation">.</span><span class="token function">withdraw</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"对"</span><span class="token operator">+</span>act<span class="token punctuation">.</span><span class="token function">getActNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"取款成功,余额"</span><span class="token operator">+</span>act<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">ThreadSafe</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//创建账户对象(只创建一个)</span>        <span class="token class-name">Account</span> act <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token string">"act-001"</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//创建两个线程</span>        <span class="token class-name">Thread</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccountThread</span><span class="token punctuation">(</span>act<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Thread</span> t2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccountThread</span><span class="token punctuation">(</span>act<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置name</span>        t1<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"t1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t2<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"t2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//自动线程取款</span>        t1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果:"></a>执行结果:</h4><p><img src="https://i.loli.net/2021/10/01/z6rf7uij52ELBgU.png" alt="image-20211001162049153"></p><h4 id="加上模拟延迟代码后执行结果"><a href="#加上模拟延迟代码后执行结果" class="headerlink" title="加上模拟延迟代码后执行结果:"></a>加上模拟延迟代码后执行结果:</h4><p><img src="https://i.loli.net/2021/10/01/dN4SpQWBmVRZ63Y.png" alt="image-20211001162140448"></p><h3 id="解决线程安全问题"><a href="#解决线程安全问题" class="headerlink" title="解决线程安全问题:"></a>解决线程安全问题:</h3><p>只需要修改Account类:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">ThreadSafe2</span><span class="token punctuation">;</span><span class="token comment">/** * 银行账户 * 不适用线程同步机制,多线程对同一个账户进行取款,出现线程安全问题 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Account</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> actNo<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> balance<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token class-name">String</span> actNo<span class="token punctuation">,</span> <span class="token keyword">double</span> balance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>actNo <span class="token operator">=</span> actNo<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getActNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> actNo<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setActNo</span><span class="token punctuation">(</span><span class="token class-name">String</span> actNo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>actNo <span class="token operator">=</span> actNo<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBalance</span><span class="token punctuation">(</span><span class="token keyword">double</span> balance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//取款方法</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token keyword">double</span> money<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//以下这几行代码必须是线程排队的,不能并发</span>        <span class="token comment">//一个线程把这里的代码全部执行结束之后,另一个线程才能进来</span>        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">double</span> before <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">double</span> after <span class="token operator">=</span> before<span class="token operator">-</span>money<span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setBalance</span><span class="token punctuation">(</span>after<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果是"><a href="#运行结果是" class="headerlink" title="运行结果是:"></a>运行结果是:</h4><p><img src="https://i.loli.net/2021/10/01/NQzUEYRLsKBcSrk.png" alt="image-20211001163823023"></p><h5 id="线程同步机制的语法是"><a href="#线程同步机制的语法是" class="headerlink" title="线程同步机制的语法是:"></a>线程同步机制的语法是:</h5><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//线程同步代码块</span><span class="token punctuation">&#125;</span><span class="token comment">/*synchronized后面小括号中传入的数据十分重要这个数据必须是多线程共享的数据.才能达到多线程排队()中写什么那要看你想让那些线程同步假设t1,t2,t3,t4,t5 有5个线程你只希望t1,t2,t3排队,t4,t5不需要排队,你一定要在()中写一个t1,t2,t3共享的对象,而这个对象对于t4,t5来说不是共享的*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Java线程安全问题-模拟对同一银行账户进行取款&quot;&gt;&lt;a href=&quot;#Java线程安全问题-模拟对同一银行账户进行取款&quot; class=&quot;headerlink&quot; title=&quot;Java线程安全问题-模拟对同一银行账户进行取款&quot;&gt;&lt;/a&gt;Java线程安全问题-模拟对</summary>
      
    
    
    
    <category term="Java" scheme="https://codeanime.cc/categories/Java/"/>
    
    
    <category term="Java" scheme="https://codeanime.cc/tags/Java/"/>
    
    <category term="多线程" scheme="https://codeanime.cc/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java多线程-死锁</title>
    <link href="https://codeanime.cc/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B-%E6%AD%BB%E9%94%81.html"/>
    <id>https://codeanime.cc/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B-%E6%AD%BB%E9%94%81.html</id>
    <published>2021-10-06T14:01:16.000Z</published>
    <updated>2021-10-06T14:10:13.652Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Java多线程-死锁"><a href="#Java多线程-死锁" class="headerlink" title="Java多线程-死锁"></a>Java多线程-死锁</h3><p>死锁是指两个或两个以上的进程在执行过程中，由于竞争资源或者由于彼此通信而造成的一种阻塞的现象，若无外力作用，它们都将无法推进下去。此时称系统处于死锁状态或系统产生了死锁，这些永远在互相等待的进程称为死锁进程。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">DealLock</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DealLock</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Object</span> o1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Object</span> o2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//t1和t2两个线程</span>        <span class="token class-name">Thread</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread1</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Thread</span> t2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread2</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span><span class="token punctuation">;</span>        t1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">MyThread1</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">&#123;</span>    <span class="token class-name">Object</span> o1<span class="token punctuation">;</span>    <span class="token class-name">Object</span> o2<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">MyThread1</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o1<span class="token punctuation">,</span><span class="token class-name">Object</span> o2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>o1 <span class="token operator">=</span> o1<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>o2 <span class="token operator">=</span> o2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>o1<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>o2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">MyThread2</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">&#123;</span>    <span class="token class-name">Object</span> o1<span class="token punctuation">;</span>    <span class="token class-name">Object</span> o2<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">MyThread2</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o1<span class="token punctuation">,</span><span class="token class-name">Object</span> o2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>o1 <span class="token operator">=</span> o1<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>o2 <span class="token operator">=</span> o2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>o2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>o1<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h3><p><img src="https://i.loli.net/2021/10/06/ozKUE79hYOpAcx2.png" alt="image-20211001190121869"></p><p>发生死锁现象,程序无法结束,也没有任何错误提示.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Java多线程-死锁&quot;&gt;&lt;a href=&quot;#Java多线程-死锁&quot; class=&quot;headerlink&quot; title=&quot;Java多线程-死锁&quot;&gt;&lt;/a&gt;Java多线程-死锁&lt;/h3&gt;&lt;p&gt;死锁是指两个或两个以上的进程在执行过程中，由于竞争资源或者由于彼此通信而造成</summary>
      
    
    
    
    <category term="Java" scheme="https://codeanime.cc/categories/Java/"/>
    
    
    <category term="Java" scheme="https://codeanime.cc/tags/Java/"/>
    
    <category term="多线程" scheme="https://codeanime.cc/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
    <category term="死锁" scheme="https://codeanime.cc/tags/%E6%AD%BB%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>bat批量修改文件夹,文件名字</title>
    <link href="https://codeanime.cc/bat%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%A4%B9-%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97.html"/>
    <id>https://codeanime.cc/bat%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%A4%B9-%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97.html</id>
    <published>2021-10-06T14:00:19.000Z</published>
    <updated>2021-10-06T14:12:34.833Z</updated>
    
    <content type="html"><![CDATA[<h2 id="bat批量修改文件夹-文件名字"><a href="#bat批量修改文件夹-文件名字" class="headerlink" title="bat批量修改文件夹,文件名字"></a>bat批量修改文件夹,文件名字</h2><h3 id="批量修改文件名字"><a href="#批量修改文件名字" class="headerlink" title="批量修改文件名字"></a>批量修改文件名字</h3><p>新建一个.txt文件,把以下代码复制进去,然后修改文件名后缀为.bat</p><p><strong>代码:</strong></p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">@echo offset a&#x3D;00setlocal EnableDelayedExpansionfor %%n in (*.txt) do (set &#x2F;A a+&#x3D;1ren &quot;%%n&quot; &quot;小说!a!.txt&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>双击运行即可批量修改文件名</p><p><img src="https://i.loli.net/2021/10/06/dODyUitV83Q7IPA.png" alt="image-20211002235847600"></p><p>如果发生乱码,修改解码方式为<strong>ANSI</strong></p><p><img src="https://i.loli.net/2021/10/06/wb8ytguvePKaZnI.png" alt="image-20211003000715147"></p><p><strong>另一种修改文件名代码</strong>,实现同样的效果:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">@echo off&amp;setlocal EnableDelayedExpansionset a&#x3D;1for &#x2F;f &quot;delims&#x3D;&quot; %%i in (&#39;dir &#x2F;b *.jpg&#39;) do (if not &quot;%%~ni&quot;&#x3D;&#x3D;&quot;%~n0&quot; (if !a! LSS 10 (ren &quot;%%i&quot; &quot;img!a!.jpg&quot;) else ren &quot;%%i&quot; &quot;list!a!.jpg&quot;set&#x2F;a a+&#x3D;1))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="批量修改文件夹名字"><a href="#批量修改文件夹名字" class="headerlink" title="批量修改文件夹名字"></a>批量修改文件夹名字</h3><p>同理:新建一个.txt文件,把以下代码复制进去,然后修改文件名后缀为.bat</p><p><strong>代码:</strong></p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">set a&#x3D;1000setlocal EnableDelayedExpansionFOR &#x2F;f &quot;tokens&#x3D;*&quot; %%i IN (&#39;dir &#x2F;a:d &#x2F;b&#39;) DO (set &#x2F;A a+&#x3D;1ren &quot;%%i&quot; &quot;电影!a!&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>双击运行:</p><p><img src="https://i.loli.net/2021/10/06/U3sGQiC9xuNe28n.png" alt="image-20211003000836627"></p><p>如果发生乱码,修改解码方式为<strong>ANSI</strong></p><p><img src="https://i.loli.net/2021/10/06/wb8ytguvePKaZnI.png" alt="image-20211003000715147"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;bat批量修改文件夹-文件名字&quot;&gt;&lt;a href=&quot;#bat批量修改文件夹-文件名字&quot; class=&quot;headerlink&quot; title=&quot;bat批量修改文件夹,文件名字&quot;&gt;&lt;/a&gt;bat批量修改文件夹,文件名字&lt;/h2&gt;&lt;h3 id=&quot;批量修改文件名字&quot;&gt;&lt;a </summary>
      
    
    
    
    <category term="bat" scheme="https://codeanime.cc/categories/bat/"/>
    
    
    <category term="bat" scheme="https://codeanime.cc/tags/bat/"/>
    
    <category term="批量修改文件夹,文件名字" scheme="https://codeanime.cc/tags/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%A4%B9-%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Store无法下载更新任何应用程序</title>
    <link href="https://codeanime.cc/Microsoft-Store%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E6%9B%B4%E6%96%B0%E4%BB%BB%E4%BD%95%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F.html"/>
    <id>https://codeanime.cc/Microsoft-Store%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E6%9B%B4%E6%96%B0%E4%BB%BB%E4%BD%95%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F.html</id>
    <published>2021-10-06T13:59:44.000Z</published>
    <updated>2021-10-06T14:14:43.005Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Microsoft-Store无法下载更新任何应用程序"><a href="#Microsoft-Store无法下载更新任何应用程序" class="headerlink" title="Microsoft Store无法下载更新任何应用程序"></a>Microsoft Store无法下载更新任何应用程序</h1><p><img src="https://i.loli.net/2021/10/06/V7Jbs4XZGYhnj2F.png"></p><p><strong>错误代码是0x80D02017</strong></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决:"></a>解决:</h3><p>1.重置应用商店Windows+R–输入<code>WSReset.exe</code></p><p>2.运行Windows应用商店应用的疑难解答进行修复<br>“设置”—“更新和安全”—“疑难解答”—选择“Windows 应用商店应用”—点击“运行疑难解答”，按照提示操作</p><p>3.以管理员身份运行命令提示符，运行命令来重新注册Windows商店应用:<br>在小娜或搜索框中搜索<code>CMD</code>， 右键”命令提示符“，选择”以管理员身份运行“<br>分别输入以下2条命令，每条后面按下“Enter”键<br><code>PowerShell -ExecutionPolicy Unrestricted</code><br><code>$manifest = (Get-AppxPackage Microsoft.WindowsStore).InstallLocation + &#39;\AppxManifest.xml&#39; ; Add-AppxPackage -DisableDevelopmentMode -Register $manifest</code>（注意标点符号之间的空格）</p><p>4、临时禁用或卸载第三方防护软件测试安装一个应用，如果问题得以解决，建议使用自带的Windows Defender。</p><p>5.修复损坏的Windows文件<br>在小娜或搜索框中搜索“CMD“， 右键”命令提示符“，选择”以管理员身份运行“输入命令：Dism /online /cleanup-image /restorehealth Sfc /scannow<br>检查这些命令的输出. 如果发现问题但是没有解决, 建议使用还原点还原到一个可以正常运行的Windows 配置。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Microsoft-Store无法下载更新任何应用程序&quot;&gt;&lt;a href=&quot;#Microsoft-Store无法下载更新任何应用程序&quot; class=&quot;headerlink&quot; title=&quot;Microsoft Store无法下载更新任何应用程序&quot;&gt;&lt;/a&gt;Micro</summary>
      
    
    
    
    <category term="踩坑" scheme="https://codeanime.cc/categories/%E8%B8%A9%E5%9D%91/"/>
    
    
    <category term="Microsoft Store" scheme="https://codeanime.cc/tags/Microsoft-Store/"/>
    
  </entry>
  
  <entry>
    <title>Qt ：libpng warning iCCP known incorrect sRGB profile警告信息之解决方法</title>
    <link href="https://codeanime.cc/Qt-%EF%BC%9Alibpng-warning-iCCP-known-incorrect-sRGB-profile%E8%AD%A6%E5%91%8A%E4%BF%A1%E6%81%AF%E4%B9%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html"/>
    <id>https://codeanime.cc/Qt-%EF%BC%9Alibpng-warning-iCCP-known-incorrect-sRGB-profile%E8%AD%A6%E5%91%8A%E4%BF%A1%E6%81%AF%E4%B9%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</id>
    <published>2021-10-06T13:59:25.000Z</published>
    <updated>2021-10-06T14:16:09.935Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Qt-：libpng-warning-iCCP-known-incorrect-sRGB-profile警告信息之解决方法"><a href="#Qt-：libpng-warning-iCCP-known-incorrect-sRGB-profile警告信息之解决方法" class="headerlink" title="Qt ：libpng warning: iCCP: known incorrect sRGB profile警告信息之解决方法"></a>Qt ：libpng warning: iCCP: known incorrect sRGB profile警告信息之解决方法</h1><p>1、从ImageMagick的官网下载压缩包，地址： <a href="http://www.imagemagick.org/script/binary-releases.php">http://www.imagemagick.org/script/binary-releases.php</a></p><p>根据平台下载相对应的压缩包，如Windows下载 ImageMagick-7.0.4-0-portable-Q16-x64.zip</p><p>2、把下载完的压缩包解压到 D:/ImageMagick/ImageMagick</p><p>3、在Qt的资源文件夹下（Qt调用资源的目录）新建 ImageMagick-Fix-PNG.bat  文件</p><p>打开后编辑内容：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">@echo offecho ImageMagick fix libpng warning: iCCP: Not recognizing known sRGB profile ......echo Search PNG in subdirs and process ...set fn&#x3D;D:\ImageMagick\ImageMagick\convert.exefor &#x2F;f &quot;tokens&#x3D;*&quot; %%i in (&#39;dir&#x2F;s&#x2F;b *.png&#39;) do &quot;%fn%&quot; &quot;%%i&quot; -strip &quot;%%i&quot;pause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>4、保存退出，单击打开bat批处理，警告就消除了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Qt-：libpng-warning-iCCP-known-incorrect-sRGB-profile警告信息之解决方法&quot;&gt;&lt;a href=&quot;#Qt-：libpng-warning-iCCP-known-incorrect-sRGB-profile警告信息之解决</summary>
      
    
    
    
    <category term="踩坑" scheme="https://codeanime.cc/categories/%E8%B8%A9%E5%9D%91/"/>
    
    
    <category term="踩坑" scheme="https://codeanime.cc/tags/%E8%B8%A9%E5%9D%91/"/>
    
    <category term="python" scheme="https://codeanime.cc/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Git踩坑----fatal unable to access &#39;httpgithub.comjpdjpdimg.git&#39; OpenSSL SSL_read Connection was reset, errno 1005</title>
    <link href="https://codeanime.cc/Git%E8%B8%A9%E5%9D%91-fatal-unable-to-access-httpgithub-comjpdjpdimg-git-OpenSSL-SSL-read-Connection-was-reset-errno-1005.html"/>
    <id>https://codeanime.cc/Git%E8%B8%A9%E5%9D%91-fatal-unable-to-access-httpgithub-comjpdjpdimg-git-OpenSSL-SSL-read-Connection-was-reset-errno-1005.html</id>
    <published>2021-10-06T13:59:03.000Z</published>
    <updated>2021-10-06T14:17:22.960Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git踩坑—-fatal-unable-to-access-‘http-github-com-jpdjpd-img-git-39-OpenSSL-SSL-read-Connection-was-reset-errno-10054"><a href="#Git踩坑—-fatal-unable-to-access-‘http-github-com-jpdjpd-img-git-39-OpenSSL-SSL-read-Connection-was-reset-errno-10054" class="headerlink" title="Git踩坑—-fatal: unable to access ‘http://github.com/jpdjpd/img.git/&#39;: OpenSSL SSL_read: Connection was reset, errno 10054"></a>Git踩坑—-fatal: unable to access ‘<a href="http://github.com/jpdjpd/img.git/&#39;">http://github.com/jpdjpd/img.git/&#39;</a>: OpenSSL SSL_read: Connection was reset, errno 10054</h2><p>今天把github一个仓库删了,然后重新上传,执行命令<code>git push -u origin master</code>出现报错<code>fatal: unable to access &#39;http://github.com/jpdjpd/img.git/&#39;: OpenSSL SSL_read: Connection was reset, errno 10054</code></p><p><img src="https://i.loli.net/2021/10/06/2NmlBpoCazc8yib.png" alt="image-20211006085035043"></p><p>找了一些教程,说是把 <code>.git/cofig</code>中的url里https改成http就OK,但试了之后没有成功,可能由于我本地有两个不同的github账号的原因吧</p><p>还有一种说法就是:<strong>解除ssl验证后</strong>，再上传就OK了<code>git config --global http.sslVerify &quot;false&quot;</code>,但是也没有成功.</p><h3 id="我这里的正解"><a href="#我这里的正解" class="headerlink" title="我这里的正解:"></a>我这里的正解:</h3><p>修改<code>.git/config</code>中的url为你github上仓库的ssh连接即可</p><p><strong>把:</strong></p><p>原来配置的<code>git remote add origin https://github.com/jpdjpd/img.git</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>remote <span class="token string">"origin"</span><span class="token punctuation">]</span>url <span class="token operator">=</span> https://github.com/jpdjpd/img.gitfetch <span class="token operator">=</span> +refs/heads/*:refs/remotes/origin/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><strong>改为:</strong></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>remote <span class="token string">"origin"</span><span class="token punctuation">]</span>url <span class="token operator">=</span> git@github.com:jpdjpd/img.gitfetch <span class="token operator">=</span> +refs/heads/*:refs/remotes/origin/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><strong>再进行</strong><code>git push -u origin master</code><strong>即可</strong></p><p><img src="https://i.loli.net/2021/10/06/EceibkCowar5Gz8.png" alt="image-20211006085759359"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Git踩坑—-fatal-unable-to-access-‘http-github-com-jpdjpd-img-git-39-OpenSSL-SSL-read-Connection-was-reset-errno-10054&quot;&gt;&lt;a href=&quot;#Git踩坑—</summary>
      
    
    
    
    <category term="git" scheme="https://codeanime.cc/categories/git/"/>
    
    
    <category term="踩坑" scheme="https://codeanime.cc/tags/%E8%B8%A9%E5%9D%91/"/>
    
    <category term="git" scheme="https://codeanime.cc/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hbuilder快捷键</title>
    <link href="https://codeanime.cc/Hbuilder%E5%BF%AB%E6%8D%B7%E9%94%AE.html"/>
    <id>https://codeanime.cc/Hbuilder%E5%BF%AB%E6%8D%B7%E9%94%AE.html</id>
    <published>2021-10-06T13:58:15.000Z</published>
    <updated>2021-10-06T14:18:40.690Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hbuilder-快捷键"><a href="#Hbuilder-快捷键" class="headerlink" title="Hbuilder 快捷键"></a>Hbuilder 快捷键</h1><p>最近在学习javaweb 在学前端的时候用到了一款国产编辑器 很棒</p><p>Hbuilder 快捷键</p><ul><li>Ctrl + d           删除整行内容</li><li>Ctrl + Shift +R     复制当前行到下一行</li><li>Ctrl + Shift +D   重新编辑</li><li>Ctrl + 方向键     当前行整行内容上移或下移</li><li>Alt + ↓           跳转到下一个可编辑区</li><li>Ctrl + Alt + j      与下一行合并</li><li>Ctrl + Alt + ←    选择助手</li><li>Shift + 回车      生成换行符</li><li>Ctrl + 回车       向下插入空行</li><li>Ctrl + Shift + 回车 向上插入空行</li><li>Ctrl + Shift +F     格式化代码</li><li>Shift + 空格       全角/半角输入</li><li>Alt + [           匹配括号</li><li>tab             选中代码整体向右缩进</li><li>tab+shift         选中代码整体向左缩进</li><li>ctrl+shift+空格    从当前行向上另起一行</li><li>ctrl+空格    从当前行向下另起一行</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hbuilder-快捷键&quot;&gt;&lt;a href=&quot;#Hbuilder-快捷键&quot; class=&quot;headerlink&quot; title=&quot;Hbuilder 快捷键&quot;&gt;&lt;/a&gt;Hbuilder 快捷键&lt;/h1&gt;&lt;p&gt;最近在学习javaweb 在学前端的时候用到了一款国产编辑器</summary>
      
    
    
    
    <category term="Hbuilder" scheme="https://codeanime.cc/categories/Hbuilder/"/>
    
    
    <category term="Hbuilder" scheme="https://codeanime.cc/tags/Hbuilder/"/>
    
    <category term="快捷键" scheme="https://codeanime.cc/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>HTML----CSS复习</title>
    <link href="https://codeanime.cc/HTML-CSS%E5%A4%8D%E4%B9%A0.html"/>
    <id>https://codeanime.cc/HTML-CSS%E5%A4%8D%E4%B9%A0.html</id>
    <published>2021-10-06T13:57:56.000Z</published>
    <updated>2021-10-10T01:41:29.572Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML—-CSS复习"><a href="#HTML—-CSS复习" class="headerlink" title="HTML—-CSS复习"></a>HTML—-CSS复习</h1><h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h3><p>HTML 标题（Heading）是通过 <h1> - <h6> 等标签进行定义的。</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>这是一个标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>这是一个标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>这是一个标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="2-段落"><a href="#2-段落" class="headerlink" title="2.段落"></a>2.段落</h3><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是另外一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="3-链接"><a href="#3-链接" class="headerlink" title="3.链接"></a>3.链接</h3><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://codeanime.cc/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这个是我的博客链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>注释：</strong>在 href 属性中指定链接的地址。</p><h3 id="4-图像"><a href="#4-图像" class="headerlink" title="4.图像"></a>4.图像</h3><p>HTML 图像是通过 <code>&lt;img&gt; </code>标签进行定义的。</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/jpdjpd/img/animation/74.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/4JxH15y36c8jDUS.png" alt="image-20211006152321751"></p><hr><p><strong>注意：</strong> 图像的名称和尺寸是以属性的形式提供的</p><h3 id="5-元素"><a href="#5-元素" class="headerlink" title="5.元素"></a>5.元素</h3><p><strong>HTML 元素</strong></p><p>HTML 元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://codeanime.cc/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是一个链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><table><thead><tr><th>开始标签</th><th>元素内容</th><th>结束标签</th></tr></thead><tbody><tr><td><p></td><td>这是一个段落</td><td></p></td></tr><tr><td><a href=""></td><td>这是一个链接</td><td></a></td></tr><tr><td><br></td><td>换行</td><td></td></tr></tbody></table><p>开始标签常被称为<strong>起始标签（opening tag）</strong>，结束标签常称为<strong>闭合标签（closing tag）</strong></p><h3 id="6-属性"><a href="#6-属性" class="headerlink" title="6.属性"></a>6.属性</h3><ul><li><p>HTML 标签可以拥有<strong>属性</strong></p></li><li><p>属性可以在元素中添加附加信息</p></li><li><p>属性一般描述于开始标签</p></li><li><p>属性总是以名称/值对的形式出现，比如：*name=”value”*。</p></li><li><p>属性总是在 HTML 元素的<em>开始标签</em>中规定</p></li></ul><p>实例:</p><p>HTML 链接由 <a> 标签定义。链接的地址在 <strong>href 属性</strong>中指定：</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://codeanime.cc/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是一个链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>属性值应该始终被包括在引号内。</p><p>双引号是最常用的，不过使用单引号也没有问题</p><p><strong>注意:</strong></p><p>属性值本身就含有双引号，那么必须使用单引号</p><p>属性和属性值对大小写不敏感。</p><p>不过，万维网联盟在其 HTML 4 推荐标准中推荐小写的属性/属性值。</p><h3 id="7-水平线"><a href="#7-水平线" class="headerlink" title="7.水平线"></a>7.水平线</h3><hr /> 标签在 HTML 页面中创建水平线。<p>hr 元素可用于分隔内容。</p><p><img src="https://i.loli.net/2021/10/06/M6wQaCoKcqtUP8l.png" alt="image-20211006153850209"></p><h3 id="8-注释"><a href="#8-注释" class="headerlink" title="8.注释"></a>8.注释</h3><p><strong>注释：</strong>开始括号之后（左边的括号）需要紧跟一个叹号，结束括号之前（右边的括号）</p><p><code>&lt;!----&gt;</code></p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 这是注释 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="9-样式"><a href="#9-样式" class="headerlink" title="9.样式"></a>9.样式</h3><p>style 属性用于改变 HTML 元素的样式</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>这是一级标签,测试style属性<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-family</span><span class="token punctuation">:</span> verdana<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这是p标签,测试style属性,颜色为红色,字体大小为50px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/6wTE71WxKhIPvDo.png" alt="image-20211006155106508"></p><hr><h3 id="10-文本格式化"><a href="#10-文本格式化" class="headerlink" title="10.文本格式化"></a>10.文本格式化</h3><table><thead><tr><th>bia</th><th></th></tr></thead><tbody><tr><td><b></td><td>定义粗体文本</td></tr><tr><td><big></td><td>定义大号字</td></tr><tr><td><em></td><td>定义着重文字</td></tr><tr><td><i></td><td>定义斜体字</td></tr><tr><td><small></td><td>定义小号字</td></tr><tr><td><strong></td><td>定义加重语气</td></tr><tr><td><sub></td><td>定义下标字</td></tr><tr><td><sub></td><td>定义上标字</td></tr><tr><td><ins></td><td>定义插入字</td></tr><tr><td><del></td><td>定义删除字</td></tr><tr><td><code></td><td>定义计算机代码</td></tr><tr><td><kbd></td><td>定义键盘码</td></tr><tr><td><samp></td><td>定义计算机代码样本</td></tr><tr><td><var></td><td>定义变量</td></tr><tr><td><div class="code-wrapper"><pre></td><td>定义预格式文本</td></tr><tr><td><abbr></td><td>定义缩写</td></tr><tr><td><address></td><td>定义地址</td></tr><tr><td><bdo></td><td>定义文字方向</td></tr><tr><td><blockquote></td><td>定义长的引用</td></tr><tr><td><q></td><td>定义短的引用语</td></tr><tr><td><cite></td><td>定义引用、引证</td></tr><tr><td><dfn></td><td>定义一个定义项目</td></tr></tbody></table><h3 id="11-头部"><a href="#11-头部" class="headerlink" title="11.头部"></a>11.头部</h3><p><code>&lt;head&gt; </code>元素包含了所有的头部标签元素。在 <code>&lt;head&gt;</code>元素中你可以插入脚本（scripts）, 样式文件（CSS），及各种meta信息。</p><p>可以添加在头部区域的元素标签为: <code>&lt;title&gt;</code>, <code>&lt;style&gt;</code>, <code>&lt;meta&gt;</code>, <code>&lt;link&gt;</code>, <code>&lt;script&gt;</code>, <code>&lt;noscript&gt;</code> 和 <code>&lt;base&gt;</code></p><h3 id="12-标题"><a href="#12-标题" class="headerlink" title="12.标题"></a>12.标题</h3><p><code>&lt;title&gt; </code>标签定义了不同文档的标题。</p><p><code>&lt;title&gt; </code>在 HTML/XHTML 文档中是必须的。</p><p><code>&lt;title&gt;</code> 元素:</p><ul><li>定义了浏览器工具栏的标题</li><li>当网页添加到收藏夹时，显示在收藏夹中的标题</li><li>显示在搜索引擎结果页面的标题</li></ul><h3 id="13-CSS"><a href="#13-CSS" class="headerlink" title="13.CSS"></a>13.CSS</h3><p>CSS (Cascading Style Sheets) 用于渲染HTML元素标签的样式</p><p>CSS 可以通过以下方式添加到HTML中:</p><ul><li>内联样式- 在HTML元素中使用”style” <strong>属性</strong></li><li>内部样式表 -在HTML文档头部 <head> 区域使用<style> <strong>元素</strong> 来包含CSS</li><li>外部引用 - 使用外部 CSS <strong>文件</strong></li></ul><p>最好的方式是通过外部引用CSS文件.</p><p>内联样式:</p><p>当特殊的样式需要应用到个别元素时，就可以使用内联样式。 使用内联样式的方法是在相关的标签中使用样式属性。样式属性可以包含任何 CSS 属性。以下实例显示出如何改变段落的颜色和左外边距</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/JyYdXfxQbSNEKIn.png" alt="image-20211006161403270"></p><p>背景颜色:</p><p>背景色属性（background-color）定义一个元素的背景颜色：</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这是一个2级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/V3Hcb4pT8gFriUM.png" alt="image-20211006161338046"></p><p>字体,字体颜色,字体大小</p><p>可以使用font-family（字体），color（颜色），和font-size（字体大小）属性来定义字体的样式:</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-family</span><span class="token punctuation">:</span>verdana<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这是一个一级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-family</span><span class="token punctuation">:</span>arial<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/BKRuYoFnAU7NbvM.png" alt="image-20211006161530563"></p><p>现在通常使用font-family（字体），color（颜色），和font-size（字体大小）属性来定义文本样式，而不是使用<font>标签</p><p>文本对齐方式:</p><p>使用 text-align（文字对齐）属性指定文本的水平与垂直对齐方式：</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>居中对齐的1级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/y3RWgcFm9dQXYDq.png" alt="image-20211006161704466"></p><hr><p>内部样式表:</p><p>当单个文件需要特别样式时，就可以使用内部样式表。你可以在<head> 部分通过 <style>标签定义内部样式表:</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">p</span> <span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>外部样式表:</p><p>当样式需要被应用到很多页面的时候，外部样式表将是理想的选择。使用外部样式表，你就可以通过更改一个文件来改变整个站点的外观</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mystyle.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="14-表格"><a href="#14-表格" class="headerlink" title="14.表格"></a>14.表格</h3><p>表格由 <table> 标签来定义。每个表格均有若干行（由 <tr> 标签定义），每行被分割为若干单元格（由 <td> 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1,1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1,2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2,1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2,2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/gyzN6SmOr13nQLs.png" alt="image-20211006162234332"></p><hr><p>表格边框属性(border):</p><p>如果不定义边框属性，表格将不显示边框</p><p>表头:</p><p>表格的表头使用 <th> 标签进行定义</p><p>大多数浏览器会把表头显示为粗体居中的文本：</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>11111111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>22222222222<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1,1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1,2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2,1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2,2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/u7FqJmO9psW8Ahv.png" alt="image-20211006162512619"></p><h3 id="15-列表"><a href="#15-列表" class="headerlink" title="15.列表:"></a>15.列表:</h3><p>HTML 支持有序、无序和定义列表:</p><p>无序列表:</p><p>无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记</p><p>无序列表使用 <ul> 标签:</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>水果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>蔬菜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/A79G5aeUXiIh3LQ.png" alt="image-20211006162925947"></p><p>有序列表:</p><p>同样，有序列表也是一列项目，列表项目使用数字进行标记。 有序列表始于 <ol> 标签。每个列表项始于 <li> 标签</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>水果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>蔬菜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/B7LEpsUAJboGPYq.png" alt="image-20211006163039753"></p><h3 id="16-区块元素"><a href="#16-区块元素" class="headerlink" title="16.区块元素:"></a>16.区块元素:</h3><p>HTML 可以通过 <div> 和 <span>将元素组合起来</p><p>大多数 HTML 元素被定义为<strong>块级元素</strong>或<strong>内联元素</strong>。</p><p>块级元素在浏览器显示时，通常会以新行来开始（和结束）。</p><p>实例: <h1>, <p>, <ul>, <table></p><p>内联元素:</p><p>在显示时通常不会以新行开始。</p><p>实例: <b>, <td>, <a>, <img></p><p>div元素:</p><p>HTML <div> 元素是块级元素，它可用于组合其他 HTML 元素的容器。</p><div> 元素没有特定的含义。除此之外，由于它属于块级元素，浏览器会在其前后显示折行。<p>如果与 CSS 一同使用，<div> 元素可用于对大的内容块设置样式属性。</p><div> 元素的另一个常见的用途是文档布局。它取代了使用表格定义布局的老式方法。使用 <table> 元素进行文档布局不是表格的正确用法。<table> 元素的作用是显示表格化的数据<p>span元素:</p><p>HTML <span> 元素是内联元素，可用作文本的容器</p><p><span> 元素也没有特定的含义。</p><p>当与 CSS 一同使用时，<span> 元素可用于为部分文本设置样式属性</p><h3 id="17-框架"><a href="#17-框架" class="headerlink" title="17.框架"></a>17.框架</h3><p>通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面。</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://codeanime.cc/<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/WH3ogfXSkEbxlsY.png" alt="image-20211006164228773"></p><hr><p>移除边框:</p><p>frameborder 属性用于定义iframe表示是否显示边框。</p><p>设置属性值为 “0” 移除iframe的边框:</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://codeanime.cc/<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>使用ifranme作为链接的目标</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>if<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/jpdjpd/img/animation/32.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://codeanime.cc<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>if<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>樱花庄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/uWylIjwPmxsAzbQ.png" alt="image-20211006165449415"></p><hr><h3 id="18-表单"><a href="#18-表单" class="headerlink" title="18.表单"></a>18.表单</h3><p>表单是一个包含表单元素的区域。</p><p>表单元素是允许用户在表单中输入内容,比如：文本域(textarea)、下拉列表、单选框(radio-buttons)、复选框(checkboxes)等等。</p><p>表单使用表单标签 <form> 来设置:</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>.input 元素.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>输入元素:</p><p>多数情况下被用到的表单标签是输入标签<code>&lt;input&gt;</code></p><p>输入类型是由类型属性（type）定义的。大多数经常被用到的输入类型如下：</p><p>文本域:</p><p>文本域通过<input type="text"> 标签来设定，当用户要在表单中键入字母、数字等内容时，就会用到文本域。</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/DalKxIymHUZF9W4.png" alt="image-20211006173034742"></p><p>**注意:**表单本身并不可见。同时，在大多数浏览器中，文本域的默认宽度是 20 个字符。</p><p>密码字段:</p><p>密码字段通过标签<input type="password"> 来定义:</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>passwoed<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/cJhDAnpmyKRt7kr.png" alt="image-20211006185703027"></p><p>**注意:**密码字段字符不会明文显示，而是以星号或圆点替代。</p><p>单选按钮:</p><p><input type="radio"> 标签定义了表单单选框选项</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>passwoed<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>male<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>男<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>female<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>checked:表示默认选择男</p><p><img src="https://i.loli.net/2021/10/06/jSkdOzvCifhJm23.png" alt="image-20211006185907107"></p><p>复选框:</p><p><input type="checkbox"> 定义了复选框. 用户需要从若干给定的选择中选取一个或若干选项。</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>passwoed<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>男<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    篮球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basketball<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    看番<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>game<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    逛街<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>guangjie<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/BKgr3uknQOFf7RN.png" alt="image-20211006190939423"></p><p>提交按钮:</p><p><input type="submit"> 定义了提交按钮.</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form_action.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>passwoed<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>男<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    篮球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basketball<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    看番<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>game<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    逛街<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>guangjie<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/sXAhp4PFmS9W1bl.png" alt="image-20211006191918801"></p><p>表单练习(俺好菜):</p><p>原版:</p><p><img src="https://i.loli.net/2021/10/06/CIYXy1RfOhHdN2G.png" alt="image-20211006205900747"></p><p>盗版:</p><p><img src="https://i.loli.net/2021/10/06/gGbvc2tHqNdYnTF.png" alt="image-20211006205932604"></p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>表单练习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">#card-primary</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 423px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.form-group</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#card-heard</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 330<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">input</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">label</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token selector">button</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 280px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #6777ef<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> #f4f6f9<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-heard<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">vertical-align</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4px<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#6777ef<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">"</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">vertical-align</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2px<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#34395E<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>邮箱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">vertical-align</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2px<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#34395E<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>密码<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>忘记密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>remeber<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2.5px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>记得我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="19-网站布局练习"><a href="#19-网站布局练习" class="headerlink" title="19.网站布局练习"></a>19.网站布局练习</h3><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>网页布局<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#primary</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #6777EF<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#head</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#left</span><span class="token punctuation">&#123;</span><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> bisque<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#right</span><span class="token punctuation">&#123;</span><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> blueviolet<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#bottom</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 62.5rem<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 36.8px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 463.2px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> cadetblue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>head<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>网站标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>菜单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第一条<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第二条<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第三条<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>网站内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>版权--copyright--codeanime.cc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/DIHCdQGJSwqa4xK.png" alt="image-20211006215148336"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTML—-CSS复习&quot;&gt;&lt;a href=&quot;#HTML—-CSS复习&quot; class=&quot;headerlink&quot; title=&quot;HTML—-CSS复习&quot;&gt;&lt;/a&gt;HTML—-CSS复习&lt;/h1&gt;&lt;h3 id=&quot;1-标题&quot;&gt;&lt;a href=&quot;#1-标题&quot; class=&quot;</summary>
      
    
    
    
    <category term="HTML" scheme="https://codeanime.cc/categories/HTML/"/>
    
    
    <category term="HTML" scheme="https://codeanime.cc/tags/HTML/"/>
    
    <category term="CSS" scheme="https://codeanime.cc/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Java io流---拷贝文件夹下的所有文件和目录</title>
    <link href="https://codeanime.cc/Java-io%E6%B5%81-%E6%8B%B7%E8%B4%9D%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95.html"/>
    <id>https://codeanime.cc/Java-io%E6%B5%81-%E6%8B%B7%E8%B4%9D%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95.html</id>
    <published>2021-09-28T08:43:19.000Z</published>
    <updated>2021-09-28T08:46:19.173Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java-io流—拷贝文件夹下的所有文件和目录"><a href="#Java-io流—拷贝文件夹下的所有文件和目录" class="headerlink" title="Java io流—拷贝文件夹下的所有文件和目录"></a>Java io流—拷贝文件夹下的所有文件和目录</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo01</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">TreeMap</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CopyAll</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//拷贝源</span>        <span class="token class-name">File</span> srcFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"E:\\学习\\a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//拷贝目标</span>        <span class="token class-name">File</span> destFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\22721\\Desktop"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//调用copyDri方法</span>        <span class="token function">copyDri</span><span class="token punctuation">(</span>srcFile<span class="token punctuation">,</span>destFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 拷贝目录     * @param srcFile 拷贝源     * @param destFile 拷贝目标     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">copyDri</span><span class="token punctuation">(</span><span class="token class-name">File</span> srcFile<span class="token punctuation">,</span> <span class="token class-name">File</span> destFile<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>srcFile<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//src.File</span>            <span class="token comment">//是文件就拷贝,且边读边写</span>            <span class="token class-name">FileInputStream</span> in <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token class-name">FileOutputStream</span> out <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token class-name">File</span> file<span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//读srcFile这个文件</span>                in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>srcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> path <span class="token operator">=</span> destFile<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> srcFile<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//一边读一边写</span>                <span class="token comment">//一次性复制1m</span>                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> readCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>readCount<span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> readCount<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>out<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                        out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>in<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                        in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">//srcFile如果是一个文件,结束递归</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//获取源下面的子目录(拿到当前文件夹srcFile下的子文件)</span>        <span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> srcFile<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//代码测试(写一点测试一点)</span>        <span class="token comment">//System.out.println(files.length);</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token operator">:</span>files<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//获取所有文件的绝对路径(包括目录和文件)</span>            <span class="token comment">//System.out.println(file.getAbsolutePath());</span>            <span class="token comment">//这个file可能是文件或者目录</span>            <span class="token comment">//</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//System.out.println(file.getAbsolutePath());</span>                <span class="token class-name">String</span> srcDri <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//获取原目标路径,去掉前两位(E:\\学习\\a)---->(\\学习\a)</span>                <span class="token comment">//System.out.println(srcDri.substring(2));</span>                <span class="token class-name">String</span> destDri <span class="token operator">=</span> destFile<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> srcDri<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">File</span> newFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>destDri<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//如果newFile不存在,则新建</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    newFile<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">//测试输出文件路径</span>                <span class="token comment">//System.out.println(destDri);</span>            <span class="token punctuation">&#125;</span>            <span class="token function">copyDri</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span>destFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h3><p><img src="https://i.loli.net/2021/09/28/VZvYoL4k8TnO7Mr.png" alt="image-20210928164028710"></p><p><strong>运行后文件被拷贝到桌面(目标文件夹):</strong></p><p><img src="https://i.loli.net/2021/09/28/BcGnxVlg8w3daIT.png" alt="image-20210928164040501"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Java-io流—拷贝文件夹下的所有文件和目录&quot;&gt;&lt;a href=&quot;#Java-io流—拷贝文件夹下的所有文件和目录&quot; class=&quot;headerlink&quot; title=&quot;Java io流—拷贝文件夹下的所有文件和目录&quot;&gt;&lt;/a&gt;Java io流—拷贝文件夹下的所</summary>
      
    
    
    
    <category term="Java" scheme="https://codeanime.cc/categories/Java/"/>
    
    
    <category term="Java" scheme="https://codeanime.cc/tags/Java/"/>
    
    <category term="练习" scheme="https://codeanime.cc/tags/%E7%BB%83%E4%B9%A0/"/>
    
    <category term="IO流" scheme="https://codeanime.cc/tags/IO%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>Java io流---拷贝目录</title>
    <link href="https://codeanime.cc/Java-io%E6%B5%81-%E6%8B%B7%E8%B4%9D%E7%9B%AE%E5%BD%95.html"/>
    <id>https://codeanime.cc/Java-io%E6%B5%81-%E6%8B%B7%E8%B4%9D%E7%9B%AE%E5%BD%95.html</id>
    <published>2021-09-28T08:42:50.000Z</published>
    <updated>2021-09-28T08:45:12.666Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java-io流—拷贝目录"><a href="#Java-io流—拷贝目录" class="headerlink" title="Java io流—拷贝目录"></a>Java io流—拷贝目录</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo01</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CopyAll</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//拷贝源</span>        <span class="token class-name">File</span> srcFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"E:\\学习\\a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//拷贝目标</span>        <span class="token class-name">File</span> destFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\22721\\Desktop"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//调用copyDri方法</span>        <span class="token function">copyDri</span><span class="token punctuation">(</span>srcFile<span class="token punctuation">,</span>destFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 拷贝目录     * @param srcFile 拷贝源     * @param destFile 拷贝目标     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">copyDri</span><span class="token punctuation">(</span><span class="token class-name">File</span> srcFile<span class="token punctuation">,</span> <span class="token class-name">File</span> destFile<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>srcFile<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//src.File</span>            <span class="token comment">//srcFile如果是一个文件,结束递归</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//获取源下面的子目录(拿到当前文件夹srcFile下的子文件)</span>        <span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> srcFile<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//代码测试(写一点测试一点)</span>        <span class="token comment">//System.out.println(files.length);</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token operator">:</span>files<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//获取所有文件的绝对路径(包括目录和文件)</span>            <span class="token comment">//System.out.println(file.getAbsolutePath());</span>            <span class="token comment">//这个file可能是文件或者目录</span>            <span class="token comment">//</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//System.out.println(file.getAbsolutePath());</span>                <span class="token class-name">String</span> srcDri <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//获取原目标路径,去掉前两位(E:\\学习\\a)---->(\\学习\a)</span>                <span class="token comment">//System.out.println(srcDri.substring(2));</span>                <span class="token class-name">String</span> destDri <span class="token operator">=</span> destFile<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> srcDri<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">File</span> newFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>destDri<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//如果newFile不存在,则新建</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    newFile<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">//测试输出文件路径</span>                <span class="token comment">//System.out.println(destDri);</span>            <span class="token punctuation">&#125;</span>            <span class="token function">copyDri</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span>destFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h3><p><img src="https://i.loli.net/2021/09/28/xoK4LNzp9tIMnPf.png" alt="image-20210928161809385"></p><p><strong>拷贝目标,即桌面上出现了:</strong></p><p><img src="https://i.loli.net/2021/09/28/tpIXWfbh3xKPowq.png" alt="image-20210928161902842"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Java-io流—拷贝目录&quot;&gt;&lt;a href=&quot;#Java-io流—拷贝目录&quot; class=&quot;headerlink&quot; title=&quot;Java io流—拷贝目录&quot;&gt;&lt;/a&gt;Java io流—拷贝目录&lt;/h2&gt;&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; cla</summary>
      
    
    
    
    <category term="Java" scheme="https://codeanime.cc/categories/Java/"/>
    
    
    <category term="Java" scheme="https://codeanime.cc/tags/Java/"/>
    
    <category term="练习" scheme="https://codeanime.cc/tags/%E7%BB%83%E4%B9%A0/"/>
    
    <category term="IO流" scheme="https://codeanime.cc/tags/IO%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>Git使用手册--超级详细,自己都看哭了</title>
    <link href="https://codeanime.cc/Git%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C-%E8%B6%85%E7%BA%A7%E8%AF%A6%E7%BB%86-%E8%87%AA%E5%B7%B1%E9%83%BD%E7%9C%8B%E5%93%AD%E4%BA%86.html"/>
    <id>https://codeanime.cc/Git%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C-%E8%B6%85%E7%BA%A7%E8%AF%A6%E7%BB%86-%E8%87%AA%E5%B7%B1%E9%83%BD%E7%9C%8B%E5%93%AD%E4%BA%86.html</id>
    <published>2021-09-24T11:12:37.000Z</published>
    <updated>2021-10-04T00:10:02.939Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="一-git简介"><a href="#一-git简介" class="headerlink" title="一.git简介"></a>一.git简介</h3><p>Git是目前世界上最先进的分布式版本控制系统（没有之一）。</p><p><strong>关于版本控制系统</strong>:</p><p>版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统.有了它你就可以将选定的文件回溯到之前的状态，甚至将整个项目都回退到过去某个时间点的状态，你可以比较文件的变化细节，查出最后是谁修改了哪个地方，从而找出导致怪异问题出现的原因，又是谁在何时报告了某个功能缺陷等等</p><h3 id="二-安装"><a href="#二-安装" class="headerlink" title="二.安装"></a>二.安装</h3><p>在使用Git前我们需要先安装 Git。Git 目前支持 Linux/Unix、Solaris、Mac和 Windows 平台上运行。</p><p>Git 各平台安装包下载地址为：<a href="http://git-scm.com/downloads">http://git-scm.com/downloads</a></p><p><strong>Linux 平台上安装</strong></p><p>Git 的工作需要调用 curl，zlib，openssl，expat，libiconv 等库的代码，所以需要先安装这些依赖工具。</p><p>在有 yum 的系统上（比如 Fedora）或者有 apt-get 的系统上（比如 Debian 体系），可以用下面的命令安装：</p><p>各 Linux 系统可以使用其安装包管理工具（apt-get、yum 等）进行安装：</p><p><strong>Debian/Ubuntu</strong></p><p>Debian/Ubuntu Git 安装命令为：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">apt-get</span> <span class="token function">install</span> libcurl4-gnutls-dev libexpat1-dev gettext <span class="token punctuation">\</span>  libz-dev libssl-dev$ <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">git</span>$ <span class="token function">git</span> --version<span class="token function">git</span> version <span class="token number">1.8</span>.1.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>Centos/RedHat</strong></p><p>如果你使用的系统是 Centos/RedHat 安装命令为：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ yum <span class="token function">install</span> curl-devel expat-devel gettext-devel <span class="token punctuation">\</span>  openssl-devel zlib-devel$ yum -y <span class="token function">install</span> git-core$ <span class="token function">git</span> --version<span class="token function">git</span> version <span class="token number">1.7</span>.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>源码安装</strong></p><p>我们也可以在官网下载源码包来安装，最新源码包下载地址：<a href="https://git-scm.com/download">https://git-scm.com/download</a></p><p>安装指定系统的依赖包：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Centos/RedHat</span>$ yum <span class="token function">install</span> curl-devel expat-devel gettext-devel <span class="token punctuation">\</span>  openssl-devel zlib-devel<span class="token comment"># Debian/Ubuntu</span>$ <span class="token function">apt-get</span> <span class="token function">install</span> libcurl4-gnutls-dev libexpat1-dev gettext <span class="token punctuation">\</span>  libz-dev libssl-dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>解压安装下载的源码包：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">tar</span> -zxf git-1.7.2.2.tar.gz$ <span class="token builtin class-name">cd</span> git-1.7.2.2$ <span class="token function">make</span> <span class="token assign-left variable">prefix</span><span class="token operator">=</span>/usr/local all$ <span class="token function">sudo</span> <span class="token function">make</span> <span class="token assign-left variable">prefix</span><span class="token operator">=</span>/usr/local <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><hr><p><strong>Windows 平台上安装</strong></p><p>在 Windows 平台上安装 Git 同样轻松，有个叫做 msysGit 的项目提供了安装包，可以到 GitHub 的页面上下载 exe 安装文件并运行：</p><p>安装包下载地址：<a href="https://gitforwindows.org/">https://gitforwindows.org/</a></p><p>官网慢，可以用国内的镜像：<a href="https://npm.taobao.org/mirrors/git-for-windows/%E3%80%82">https://npm.taobao.org/mirrors/git-for-windows/。</a></p><h3 id="三-创建版本库"><a href="#三-创建版本库" class="headerlink" title="三.创建版本库"></a>三.创建版本库</h3><p>我们先来理解下 Git 工作区、暂存区和版本库概念：</p><ul><li><strong>工作区：</strong>就是你在电脑里能看到的目录。</li><li><strong>暂存区：</strong>英文叫 stage 或 index。一般存放在 <strong><code>.git</code></strong> 目录下的 index 文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。</li><li><strong>版本库：</strong>工作区有一个隐藏目录 **<code>.git</code><strong>，这个不算工作区，而是 Git 的版本库。版本库又名仓库，英文名</strong><code>repository</code>**，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</li></ul><h4 id="1-创建一个目录作或者选择一个有内容的目录为工作区"><a href="#1-创建一个目录作或者选择一个有内容的目录为工作区" class="headerlink" title="1.创建一个目录作或者选择一个有内容的目录为工作区"></a>1.创建一个目录作或者选择一个有内容的目录为工作区</h4><h4 id="2-使用当前目录作为Git仓库，我们只需使它初始化"><a href="#2-使用当前目录作为Git仓库，我们只需使它初始化" class="headerlink" title="2.使用当前目录作为Git仓库，我们只需使它初始化"></a>2.使用当前目录作为Git仓库，我们只需使它初始化</h4><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>Git 使用 <strong><code>git init</code></strong> 命令来初始化一个 Git 仓库，Git 的很多命令都需要在 Git 的仓库中运行，所以 <strong><code>git init</code></strong> 是使用 Git 的第一个命令。</p><p>在执行完成 <strong><code>git init</code></strong> 命令后，Git 仓库会生成一个 .git 目录，该目录包含了资源的所有元数据，其他的项目目录保持不变。</p><p><strong>补充:</strong></p><p>使用指定目录作为Git仓库</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init newtest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>初始化后，会在 newtest 目录下会出现一个名为 .git 的目录，所有 Git 需要的数据和资源都存放在这个目录中。</p><p><img src="https://i.loli.net/2021/09/24/GzsMieV7OfAglxq.png" alt="image-20210924093150441"></p><h4 id="3-把文件添加到版本库"><a href="#3-把文件添加到版本库" class="headerlink" title="3.把文件添加到版本库"></a>3.把文件添加到版本库</h4><p>这里我在工作区里添加一个文本文件作为演示:</p><p><img src="https://i.loli.net/2021/09/24/d8rfViSX2K4nzHk.png" alt="image-20210924092324274"></p><p><strong>一个文件放到Git仓库只要三步( 把大象当冰箱 ):</strong></p><p><strong>(1)把文件放到工作区或者新建文件,保证文件是在工作区目录下或子目录下</strong></p><p><strong>(2)用<code>git add </code>命令把文件添加到暂存区 : <code>git add read.txt</code></strong></p><p><img src="https://i.loli.net/2021/09/24/Ezqnsul158jQWH9.png" alt="image-20210924093310094"></p><p><strong>(3)用<code>git commit</code>命令用把文件提交到仓库</strong></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit -m <span class="token string">"第一次提交"</span>  <span class="token comment"># -m后面输入的是本次提交的说明(message)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/ArI6qVKhEasSRMJ.png" alt="image-20210924094110000"></p><p>提交后发现和<code>git add</code>一样没有任何反应,<strong>在linux中没有反应是最好的反应</strong></p><h3 id="四-版本回退"><a href="#四-版本回退" class="headerlink" title="四.版本回退"></a>四.版本回退</h3><p><code>git log</code>命令:查看历史提交记录</p><p>假如说我修改read.txt文件,添加一行文字<code>测试修改</code></p><p><img src="https://i.loli.net/2021/09/24/PhC7K29MRxcvIDw.png" alt="image-20210924095910028"></p><p>使用<code>git log</code>命令查看提交记录</p><p><img src="https://i.loli.net/2021/09/24/Mgi6RuYBdLbr5Sc.png" alt="image-20210924100229414"></p><p>如果提交次数很多,可以使用<code>git log --pretty=oneline</code>查看提交记录</p><p><img src="https://i.loli.net/2021/09/24/7CTZrpx4OMNWhVk.png" alt="image-20210924100811619"></p><p><strong>说明:</strong></p><p>提交记录里面那一大串字符``(20b123….)<code>是 </code>commit id`（版本号）</p><p><strong>版本回退:</strong></p><p>使用命令<code>git reset</code>回退版本:</p><p><strong>说明:</strong></p><p>在Git中，用<code>HEAD</code>表示当前版本，也就是最新的提交<code>20b123....</code>，上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上100个版本写100个<code>^</code>比较容易数不过来，所以写成<code>HEAD~100</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reset --hard HEAD^<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/HUtdRrWx3hEiJOA.png" alt="image-20210924101641245"></p><p>打开之前添加的文字修改,发现回退到第一次提交的版本</p><p><img src="https://i.loli.net/2021/09/24/vAb8jSFtNeklhq4.png" alt="image-20210924101455734"></p><p>用命令<code>git log</code>查看版本历史,我们如果想再回到最新版本(添加文字修改过的那个版本)怎么办:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reset --hard 20b123<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>id没必要写全,前几位就可以了，Git会自动去找</p><p><img src="https://i.loli.net/2021/09/24/i5GzItWYOys3Qlp.png" alt="image-20210924102240066"></p><p>问题来了,假如说,我关机了,或者关掉git了,ID不知道怎么办.在git中,总有后悔药可以吃:</p><p>使用命令<code>git reflog</code>查看命令历史</p><p><img src="https://i.loli.net/2021/09/24/nPegjzyqcDI2ETB.png" alt="image-20210924102704700"></p><p>知道了id不是想怎么玩就怎么玩!</p><h3 id="五-查看仓库当前的状态"><a href="#五-查看仓库当前的状态" class="headerlink" title="五.查看仓库当前的状态"></a>五.查看仓库当前的状态</h3><p>命令<code>git status</code>查看仓库当前的状态，显示有变更的文件</p><p>我在工作区中再添加一个文件</p><p><img src="https://i.loli.net/2021/09/24/DgY4MRISbotpeqZ.png" alt="image-20210924103641139"></p><p>使用命令:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/paHzM5Ly4CcATuR.png" alt="image-20210924103754374"></p><p>me.txt文件没有被添加,所以它的状态是<code>Untracked</code>。</p><p>那现在来添加一下,再查看:</p><p><img src="https://i.loli.net/2021/09/24/XoifkPWjz6OZ72A.png" alt="image-20210924104244925"></p><p>提交后，如果你又没有对工作区做任何修改，那么工作区就是“干净”的(working tree clean)</p><h3 id="六-添加远程仓库–Github"><a href="#六-添加远程仓库–Github" class="headerlink" title="六.添加远程仓库–Github"></a>六.添加远程仓库–Github</h3><p>首先你需要你个Github账户,再者你要创建一个仓库,注册账户就不说了,闭上眼注册就行了,我们来说一下创建仓库吧</p><p><img src="https://i.loli.net/2021/09/24/97krfZpgDw1uKzT.png" alt="image-20210924105758719"></p><p>接着确定就行了….</p><p>创建好的效果如图:</p><p><img src="https://i.loli.net/2021/09/24/cGzkvmtJ2SPZFj3.png" alt="image-20210924105931868"></p><p>接着,我们从这里找到github仓库的地址</p><p><img src="https://i.loli.net/2021/09/24/rW9mhcCYEsjwK3y.png" alt="image-20210924110355453"></p><p>执行命令:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/code-anime/test.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>添加后，远程库的名字就是<code>origin</code>，这是Git默认的叫法，也可以改成别的</p><p>下一步，就可以把本地库的所有内容推送到远程库上：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>执行完毕后我们可以看到github上远程仓库内容和本地的内容一样.</p><p><img src="https://i.loli.net/2021/09/24/BxWEVuDTekNQ5iM.png" alt="image-20210924152157440"></p><p><strong><font color="#dd0000">注意：</font></strong> </p><p>执行途中可能遇到的问题:</p><p>(1)SSH错误</p><p>由于你的本地 Git 仓库和 GitHub 仓库之间的传输是通过SSH加密的，所以我们需要配置验证信息：</p><p>使用以下命令生成 SSH Key：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>后面的 <strong><a href="mailto:&#x79;&#111;&#117;&#x72;&#95;&#x65;&#x6d;&#x61;&#x69;&#x6c;&#x40;&#x79;&#111;&#117;&#x72;&#101;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#x6d;">&#x79;&#111;&#117;&#x72;&#95;&#x65;&#x6d;&#x61;&#x69;&#x6c;&#x40;&#x79;&#111;&#117;&#x72;&#101;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#x6d;</a></strong> 改为你在 Github 上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。</p><p>成功的话会在 <strong>~/</strong> 下生成 <strong>.ssh</strong> 文件夹，进去，打开 <strong>id_rsa.pub</strong>，复制里面的 <strong>key</strong>。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ssh-keygen -t rsa -C <span class="token string">"2272166487@qq.com"</span>Generating public/private rsa key pair.Enter <span class="token function">file</span> <span class="token keyword">in</span> <span class="token function">which</span> to save the key <span class="token punctuation">(</span>/Users/tianqixin/.ssh/id_rsa<span class="token punctuation">)</span>: Enter passphrase <span class="token punctuation">(</span>empty <span class="token keyword">for</span> no passphrase<span class="token punctuation">)</span>:    <span class="token comment"># 直接回车</span>Enter same passphrase again:                   <span class="token comment"># 直接回车</span>Your identification has been saved <span class="token keyword">in</span> /Users/tianqixin/.ssh/id_rsa.Your public key has been saved <span class="token keyword">in</span> /Users/tianqixin/.ssh/id_rsa.pub.The key fingerprint is:SHA256:MDKVidPTDXIQoJwoqUmI4LBAsg5XByBlrOEzkxrwARI <span class="token number">429240967</span>@qq.comThe key's randomart image is:+---<span class="token punctuation">[</span>RSA <span class="token number">3072</span><span class="token punctuation">]</span>----+<span class="token operator">|</span>E*+.<span class="token operator">+=</span>**oo       <span class="token operator">|</span><span class="token operator">|</span>%Oo+oo<span class="token operator">=</span>o. <span class="token builtin class-name">.</span>      <span class="token operator">|</span><span class="token operator">|</span>%**.o.o.         <span class="token operator">|</span><span class="token operator">|</span>OO.  o o         <span class="token operator">|</span><span class="token operator">|</span>+o+     S        <span class="token operator">|</span><span class="token operator">|</span><span class="token builtin class-name">.</span>                <span class="token operator">|</span><span class="token operator">|</span>                 <span class="token operator">|</span><span class="token operator">|</span>                 <span class="token operator">|</span><span class="token operator">|</span>                 <span class="token operator">|</span>+----<span class="token punctuation">[</span>SHA256<span class="token punctuation">]</span>-----+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>回到 github 上，进入 Account =&gt; Settings（账户配置）。</p><p><img src="https://i.loli.net/2021/09/24/mUKJewORHIbrXC9.jpg" alt="48840BF0-992F-4CCC-A388-15CB74819D88"></p><p>左边选择 <strong>SSH and GPG keys</strong>，然后点击 <strong>New SSH key</strong> 按钮,title 设置标题，可以随便填，粘贴在你电脑上生成的 key。</p><p><img src="https://i.loli.net/2021/09/24/QGJrjOvehsnxfXo.jpg" alt="img"></p><p><img src="https://i.loli.net/2021/09/24/K2t7mb6OxH3qpCh.jpg" alt="img"></p><p>添加成功后界面如下所示</p><p><img src="https://i.loli.net/2021/09/24/MyavhetVYEXijbP.jpg" alt="img"></p><p>为了验证是否成功，输入以下命令：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ssh</span> -T git@github.comThe authenticity of <span class="token function">host</span> <span class="token string">'github.com (52.74.223.119)'</span> can<span class="token string">'t be established.RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.Are you sure you want to continue connecting (yes/no/[fingerprint])? yes                   # 输入 yesWarning: Permanently added '</span>github.com,52.74.223.119<span class="token string">' (RSA) to the list of known hosts.Hi tianqixin! You'</span>ve successfully authenticated, but GitHub does not provide shell access. <span class="token comment"># 成功信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>以下命令说明我们已成功连上 Github。</p><p>(2)下面这个错误</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">warning: redirecting to https://github.com/code-anime/test.git/To http://github.com/code-anime/test.git <span class="token operator">!</span> <span class="token punctuation">[</span>rejected<span class="token punctuation">]</span>        master -<span class="token operator">></span> master <span class="token punctuation">(</span>non-fast-forward<span class="token punctuation">)</span>error: failed to push some refs to <span class="token string">'http://github.com/code-anime/test.git'</span>hint: Updates were rejected because the tip of your current branch is behindhint: its remote counterpart. Integrate the remote changes <span class="token punctuation">(</span>e.g.hint: <span class="token string">'git pull ...'</span><span class="token punctuation">)</span> before pushing again.hint: See the <span class="token string">'Note about fast-forwards'</span> <span class="token keyword">in</span> <span class="token string">'git push --help'</span> <span class="token keyword">for</span> details.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>解决:</p><p>执行命令:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull --rebase origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/LknDerGX4qdI2ap.png" alt="image-20210924154216282"></p><p>接着再试一下:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/code-anime/autopiccdn@9719c6eb6cfb88346882b088061cddc4974515e0/2021/09/24/ba1791bfe98c3873cb9e0bdd1e5bcaa8.png"></p><h3 id="七-移除远程仓库"><a href="#七-移除远程仓库" class="headerlink" title="七.移除远程仓库"></a>七.移除远程仓库</h3><p>如果添加的时候地址写错了，或者就是想删除远程库,可以用<code>git remote rm &lt;name&gt;</code></p><p>建议执行该命令之前执行<code>git remote -v</code>查看远程库信息</p><p><img src="https://i.loli.net/2021/09/24/dVLKNexQnTIi5f2.png" alt="image-20210924154708648"></p><p>然后根据名字删除,比如删除<code>origin</code></p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/autopiccdn@3df4227194231e11cf4200afa9670068803525c1/2021/09/24/9b913cac5dd27f88ebb15936326ee1a0.png"></p><p>此处的“删除”其实是解除了本地和远程的绑定关系，并不是物理上删除了远程库。远程库本身并没有任何改动。要真正删除远程库，需要登录到GitHub，在后台页面找到删除按钮再删除。</p><p>查看<code>.git</code>目录下的config文件,发现原来的这条没有了:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>remote <span class="token string">"origin"</span><span class="token punctuation">]</span>url <span class="token operator">=</span> https://github.com/code-anime/test.gitfetch <span class="token operator">=</span> +refs/heads/*:refs/remotes/origin/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>如果想重新建立与远程库之间的连接:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> origin <span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/code-anime/test.git<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit -m <span class="token string">"第三次提交"</span><span class="token function">git</span> push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/dLjiaK6q1wZhzfS.png"></p><p><img src="https://i.loli.net/2021/09/24/Zuxg71DWNklbrp9.png"></p><h3 id="八-从远程库克隆"><a href="#八-从远程库克隆" class="headerlink" title="八.从远程库克隆"></a>八.从远程库克隆</h3><p>上面所讲到的是先有本地库,后有远程库,如何关联远程库.</p><p>现在,我们来说先有远程库,再有本地库(从远程库克隆),这里我把本地test工作区删除,github上面的test仓库也删除了.从零开始演示.毕竟是test</p><p>接着就是创建github仓库,这里不做赘述了.</p><p><img src="https://i.loli.net/2021/09/24/r8QPfFkoRNlhZ7n.png" alt="image-20210924161133414"></p><p>我在桌面新建了一个文件夹<code>repos</code>,没别的意思就是<code>repository</code>的简写</p><p><img src="https://i.loli.net/2021/09/24/nR69k4NqUBSKLY8.png" alt="image-20210924161331081"></p><p>然后打开文件夹 , 然后<code>git bash here</code></p><p>执行命令:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone git@github.com:code-anime/test.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>上面<code>git clone</code>后跟的是仓库地址.</p><p><img src="https://i.loli.net/2021/09/24/tkf2KZvTiswxmJB.png" alt="image-20210924161716540"></p><p>执行命令后,会发现<code>repos</code>目录里面多了一个test文件夹(就是克隆github上的test仓库)</p><p><img src="https://i.loli.net/2021/09/24/spoND9ZJcQ65VKS.png" alt="image-20210924161948468"></p><p>打开test文件夹后我们会发现,和远程仓库内容是一样的</p><p>注意:</p><p>GitHub给出的地址不止一个，还可以用<code>https://github.com/code-anime/test.git</code>这样的地址。实际上，Git支持多种协议，默认的<code>git://</code>使用ssh，但也可以使用<code>https</code>等其他协议。</p><p>使用<code>https</code>除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令，但是在某些只开放http端口的公司内部就无法使用<code>ssh</code>协议而只能用<code>https</code></p><h3 id="九-分支管理"><a href="#九-分支管理" class="headerlink" title="九.分支管理"></a>九.分支管理</h3><p>首先,列出分支:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/lUL2XWNVJqO7Gju.png" alt="image-20210924163643370"></p><p>意思就是，我们有一个叫做 <strong>master</strong> 的分支，并且该分支是当前分支.当你执行 <strong>git init</strong> 的时候，默认情况下 Git 就会为你创建 <strong>master</strong> 分支。</p><p>如果我们要手动创建一个分支。执行 <strong>git branch (branchname)</strong> 即可。</p><p>创建一个<code>testing</code>分支:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch testing<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/wNebtKF1gzAHXV4.png" alt="image-20210924163759356"></p><p>现在我们可以看到，有了一个新分支 <strong>testing</strong>。</p><p>当你以此方式在上次提交更新之后创建了新分支，如果后来又有更新提交， 然后又切换到了 <strong>testing</strong> 分支，Git 将还原你的工作目录到你创建分支时候的样子。</p><p>我们切换到<code>testing</code>分支进行实验:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout testing<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/SRsQ38JOdnBPqjG.png" alt="image-20210924164433951"></p><p>接下来我们将演示如何切换分支，我们用<code>git checkout (branch) </code> 切换到我们要修改的分支。</p><p>我们在<code>testing</code>分支上正常提交，比如创建文件<code>readme.txt</code>,内容写上:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">测试testing分支<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>然后提交:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit -m <span class="token string">"添加文字测试testing分支"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/7yPbvU3qRaFI2Jk.png" alt="image-20210924165518165"></p><p>现在我们切换会<code>master</code>分支后,再查看<code>readme.txt</code>文件,文件不见了!</p><p>!<img src="https://i.loli.net/2021/09/24/tpIsqRHXUASBk6E.png" alt="image-20210924165412661"></p><p>当我们满怀怀疑的时候我们切换回来<code>testing</code>分支,发现还在</p><p><img src="https://i.loli.net/2021/09/24/VaKfgYxIbQZwj8e.png" alt="image-20210924165631400"></p><p>因为那个提交是在<code>testing</code>分支上，而<code>master</code>分支此刻的提交点并没有变：</p><p>现在，我们把<code>testing</code>分支的工作成果合并到<code>master</code>分支上：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout master<span class="token function">git</span> merge testing<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/IWJSRxPGCOpfqjE.png" alt="image-20210924165843223"></p><p>合并完成后，就可以放心地删除<code>testing</code>分支了：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch -d testing<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/XUvorehsZ6pkFQf.png" alt="image-20210924170024645"></p><h3 id="十-合并冲突"><a href="#十-合并冲突" class="headerlink" title="十.合并冲突"></a>十.合并冲突</h3><p>合并并不仅仅是简单的文件添加、移除的操作，Git 也会合并修改。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch* master<span class="token function">cat</span> readme.txt测试testing分支<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>现在我们只有一条主分支<code>master</code>且<code>readme.txt</code>文件中只有<code>测试testing分支</code>这一段文字.</p><p>首先,我们创建一个<code>test1</code>分支, 切换过去，我们将<code>readme.txt</code>文件添加<code>123</code>三个数字</p><p><img src="https://i.loli.net/2021/09/24/WYxC2al8NEcJroe.png" alt="image-20210924171453362"></p><p>将修改的内容提交到 change_site 分支中。 现在，假如切换回 master 分支我们可以看内容恢复到我们修改前的内容,没有<code>123</code></p><p><img src="https://i.loli.net/2021/09/24/EsmQdOgFalr3PIx.png" alt="image-20210924172006902"></p><p>我们再次修改<code> readme.txt</code>文件,添加数字<code>456</code></p><p><img src="https://i.loli.net/2021/09/24/tkKfzLduywbamsQ.png" alt="image-20210924172154332"></p><p>现在这些改变已经记录到我的 <code>master</code>分支了。接下来我们将 <code>test1</code>分支合并过来。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> merge test1Auto-merging readme.txtCONFLICT <span class="token punctuation">(</span>content<span class="token punctuation">)</span>: Merge conflict <span class="token keyword">in</span> readme.txtAutomatic merge failed<span class="token punctuation">;</span> fix conflicts and <span class="token keyword">then</span> commit the result.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>打开文件,看见冲突内容</p><p><img src="https://i.loli.net/2021/09/24/XQYtm57qlfAwaZM.png" alt="image-20210924172413734"></p><p>我们将前一个分支合并到 master 分支，一个合并冲突就出现了，接下来我们需要手动去修改它。</p><p>Git用<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>，<code>=======</code>，<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>标记出不同分支的内容，我们修改如下后保存：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>再提交:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit -m <span class="token string">"分支冲突解决"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/8ZKXpn4GNM925Ye.png" alt="image-20210924173037796"></p><p>用带参数的<code>git log</code>也可以看到分支的合并情况：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --graph --pretty<span class="token operator">=</span>oneline --abbrev-commit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/l5Ohxr1B4RQzyjb.png" alt="image-20210924173113409"></p><p>最后,删除分支:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch -d test1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/2uxSKVPwDOha5eW.png" alt="image-20210924173258947"></p><h3 id="十一-标签管理"><a href="#十一-标签管理" class="headerlink" title="十一.标签管理"></a>十一.标签管理</h3><p>如果你达到一个重要的阶段，并希望永远记住那个特别的提交快照，你可以使用 git tag 给它打上标签。</p><p>比如说，我们想为我们的 <code>test</code>项目发布一个<code>1.0</code>版本。 我们可以用 <code>git tag V1.0 </code>命令给最新一次提交打上（HEAD）<code>v1.0</code>的标签。</p><p>首先，切换到需要打标签的分支上：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag v1.0 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>当你执行 git tag -a 命令时，Git 会打开你的编辑器，让你写一句标签注解，就像你给提交写注解一样。</p><p>可以用命令<code>git tag</code>查看所有标签：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tagv1.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>默认标签是打在最新提交的commit上的。有时候，如果忘了打标签，比如，本该在昨天打的tag没打怎么办?</p><p>方法是找到历史提交的commit id，然后打上就可以了：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --pretty<span class="token operator">=</span>oneline --abbrev-commit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/LYaSbQeuRsirnCz.png" alt="image-20210924183517132"></p><p>比方说要对<code>添加456三个数组</code>这次提交打标签，它对应的commit id是<code>fe6c8d7</code>，敲入命令：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag v0.9 fe6c8d7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>再用命令<code>git tag</code>查看标签：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> tagv0.9v1.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>注意，标签不是按时间顺序列出，而是按字母排序的。可以用<code>git show &lt;tagname&gt;</code>查看标签信息：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> show v0.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/NCEZIDVSQynKYOJ.png" alt="image-20210924183926673"></p><p>可以看到，<code>v0.9</code>确实打在<code>add 添加456三个数字</code>这次提交上。</p><p>还可以创建带有说明的标签，用<code>-a</code>指定标签名，<code>-m</code>指定说明文字：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> tag -a v0.6 -m <span class="token string">"version 0.6 released"</span> 1094adb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>用命令<code>git show &lt;tagname&gt;</code>可以看到说明文字：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> show v0.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/GyxXfu7t9iow5gT.png" alt="image-20210924184645266"></p><p>用命令<code>git tag -d &lt;tagname&gt;</code>删除标签</p><p>因为创建的标签都只存储在本地，不会自动推送到远程。所以，打错的标签可以在本地安全删除。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag -d v0.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/RSpi8oOdavJQUBN.png" alt="image-20210924184827587"></p><p>如果要推送某个标签到远程，使用命令<code>git push origin &lt;tagname&gt;</code>：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin v1.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/mb6UOpI3hTjlGAM.png" alt="image-20210924185208955"></p><p><img src="https://i.loli.net/2021/09/24/nIaSqFB65Pw971t.png" alt="image-20210924185236112"></p><p>或者，一次性推送全部尚未推送到远程的本地标签：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> push origin --tags<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/sOih7PAWdLtrqVJ.png" alt="image-20210924185304118"></p><p><img src="https://i.loli.net/2021/09/24/KXUV4xbo8zkDuI7.png" alt="image-20210924185326118"></p><p>如果标签已经推送到远程，要删除远程标签就麻烦一点，先从本地删除：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> tag -d v1.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>然后，从远程删除。删除命令也是push，但是格式如下：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> push origin :refs/tags/v1.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>要看看是否真的从远程库删除了标签，可以登陆GitHub查看。</p><p><img src="https://i.loli.net/2021/09/24/MJ6AewT32zLoucq.png" alt="image-20210924185520588"></p><h3 id="十二-Gitee使用-hexo博客部署到gitee"><a href="#十二-Gitee使用-hexo博客部署到gitee" class="headerlink" title="十二.Gitee使用(hexo博客部署到gitee)"></a>十二.Gitee使用(hexo博客部署到gitee)</h3><p><strong>如果你-ssh密钥删除了或者不见了,新建一个ssh密钥</strong></p><p><img src="https://i.loli.net/2021/09/24/97aVKpYMPIQkvTs.png" alt="image-20210924190947679"></p><p>需要重新上传到github</p><p>打开你本地生成的ssh密钥(默认路径是C:\user\你的电脑用户名\ .ssh\id_rua_pub)</p><p><img src="https://i.loli.net/2021/09/24/3Z4CmqWVQyRUXTb.png" alt="image-20210924192156924"></p><p>放到github上:</p><p><img src="https://i.loli.net/2021/09/24/9zxkrNaKU1o6mYS.png" alt="image-20210924192007187"></p><p><img src="https://i.loli.net/2021/09/24/y4oul1Fne5iMZwO.png" alt="image-20210924192454932"></p><p>第一次要密码,输入你创建ssh密钥时候的密码即可.</p><p><img src="https://i.loli.net/2021/09/24/hkrgecJzH6bBmod.png" alt="image-20210924192603706"></p><p>使用Gitee和使用GitHub类似，我们在Gitee上注册账号并登录后，需要先上传自己的SSH公钥。选择右上角用户头像 -&gt; 菜单“修改资料”，然后选择“SSH公钥”，填写一个便于识别的标题，然后把用户主目录下的<code>.ssh/id_rsa.pub</code>文件的内容粘贴进去</p><p><img src="https://i.loli.net/2021/09/24/MSnVrQGkpTLDWm7.png" alt="image-20210924192837739"></p><p>这里我来演示一下在gitee上搭建Hexo博客吧,顺便复习一下:</p><p><strong>准备:</strong></p><p>安装git,nodejs,npm</p><h4 id="1-首先-创建一个工作目录作为我们的博客目录"><a href="#1-首先-创建一个工作目录作为我们的博客目录" class="headerlink" title="(1)首先,创建一个工作目录作为我们的博客目录"></a>(1)首先,创建一个工作目录作为我们的博客目录</h4><p><img src="https://i.loli.net/2021/09/24/o3b98kCDX6TpOB1.png" alt="image-20210924193136037"></p><p>右键<code>git bash here</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>初始化hexo</p><h4 id="2-下载主题安装-这里以butterfly主题为例"><a href="#2-下载主题安装-这里以butterfly主题为例" class="headerlink" title="(2)下载主题安装,这里以butterfly主题为例"></a>(2)下载主题安装,这里以butterfly主题为例</h4><p>在你的 Hexo 根目目录</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>修改 Hexo 根目录下的 <code>_config.yml</code>，把主題为butterfly</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">theme</span><span class="token punctuation">:</span> butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/ahzOPbjBfUSAuei.png" alt="image-20210924193754607"></p><h4 id="3-安装插件"><a href="#3-安装插件" class="headerlink" title="(3)安装插件"></a>(3)安装插件</h4><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">npm install hexo<span class="token punctuation">-</span>renderer<span class="token punctuation">-</span>pug hexo<span class="token punctuation">-</span>renderer<span class="token punctuation">-</span>stylus <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>在 hexo 的根目录创建一个文件<code> _config.butterfly.yml</code>，并把主题目录的 <code>_config.yml </code>内容复制到<code>_config.butterfly.yml</code>去。</p><p>注意： 不要把主題目录的<code> _config.yml</code> 刪掉</p><p>以后只需要在<code> _config.butterfly.yml</code>進行配置就行。</p><p>Hexo会自动合并主题中的<code>_config.yml</code>和 <em><code>config.butterfly.yml</code>里的配置，如果存在同名配置，會使用</em><code>config.butterfly.yml</code>的配置，其优先度较高</p><p><img src="https://i.loli.net/2021/09/24/5WfyGHVoibQIkqz.png" alt="image-20210924194202773"></p><p>然后执行:</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">hexo clean <span class="token important">&amp;&amp;</span> hexo g <span class="token important">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/AH1dTlU5kKmGgjF.png" alt="image-20210924194518098"></p><p>在浏览器打开<code>http://localhost:4000</code>:</p><p><img src="https://i.loli.net/2021/09/24/ewNSToGKgUhm9YH.png" alt="image-20210924194553580"></p><p>能打开说明是好的</p><p>(4)部署到gitee</p><p>安装组件:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>然后:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>最后出现下面那个图为正解.</p><p><img src="https://i.loli.net/2021/09/24/v58DQHLalVosbtg.png" alt="image-20210924200326794"></p><p>(5)开启网页服务</p><p><img src="https://i.loli.net/2021/09/24/UavdtkPAQs8cTYM.png" alt="image-20210924200432706"></p><p>直接点击生成即可，就会显示已开启 Gitee Pages 服务，网站地址： xxxxxx</p><p>至此，一个用户名.gitee.io的博客网站部署完成</p><p><img src="https://i.loli.net/2021/09/24/rxFb2oPL7eIw9Xn.png" alt="image-20210924200607307"></p><p><img src="https://i.loli.net/2021/09/24/PmjcKDyRpSnTYzX.png" alt="image-20210924200709360"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Git&quot;&gt;&lt;a href=&quot;#Git&quot; class=&quot;headerlink&quot; title=&quot;Git&quot;&gt;&lt;/a&gt;Git&lt;/h2&gt;&lt;h3 id=&quot;一-git简介&quot;&gt;&lt;a href=&quot;#一-git简介&quot; class=&quot;headerlink&quot; title=&quot;一.git简介</summary>
      
    
    
    
    <category term="Git" scheme="https://codeanime.cc/categories/Git/"/>
    
    
    <category term="Git" scheme="https://codeanime.cc/tags/Git/"/>
    
    <category term="Github" scheme="https://codeanime.cc/tags/Github/"/>
    
    <category term="博客搭建" scheme="https://codeanime.cc/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Gitee" scheme="https://codeanime.cc/tags/Gitee/"/>
    
  </entry>
  
  <entry>
    <title>JDBC小记</title>
    <link href="https://codeanime.cc/JDBC%E5%B0%8F%E8%AE%B0.html"/>
    <id>https://codeanime.cc/JDBC%E5%B0%8F%E8%AE%B0.html</id>
    <published>2021-09-21T02:43:07.000Z</published>
    <updated>2021-10-10T01:41:51.264Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JDBC小记"><a href="#JDBC小记" class="headerlink" title="JDBC小记"></a>JDBC小记</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨天刚冲完了jdbc,今天来总结一下</p><h2 id="一-JDBC介绍"><a href="#一-JDBC介绍" class="headerlink" title="一.JDBC介绍"></a>一.JDBC介绍</h2><p><strong>JDBC (百度百科)</strong>: Java数据库连接，（Java Database Connectivity，简称JDBC）是Java语言中用来规范客户端程序如何来访问数据库的应用程序接口，提供了诸如查询和更新数据库中数据的方法。JDBC也是Sun Microsystems的商标。我们通常说的JDBC是面向关系型数据库的。</p><p><strong>说白了 JDBC就是Java数据库连接，就是用Java语言来操作数据库。原来我们操作数据库是在控制台使用SQL语句来操作数据库，JDBC是用Java语言向数据库发送SQL语句.</strong></p><h2 id="二-JDBC原理图"><a href="#二-JDBC原理图" class="headerlink" title="二.JDBC原理图"></a>二.JDBC原理图</h2><p><img src="https://i.loli.net/2021/09/21/EQPnyDJdAIj8KU7.png" alt="img"></p><h2 id="三-JDBC的本质"><a href="#三-JDBC的本质" class="headerlink" title="三.JDBC的本质:"></a>三.JDBC的本质:</h2><p>JDBC本质：其实是官方（sun公司）定义的一套操作所有关系型数据库的规则，即接口。各个数据库厂商去实现这套接口，提供数据库驱动jar包。我们可以使用这套接口（JDBC）编程，真正执行的代码是驱动jar包中的实现类。</p><p><strong>JDBC到底是什么</strong></p><p>SUN公司制定的一套接口(interface)，(在java.sql.*;包下有很多接口)</p><p><strong>目的：解耦合——&gt;降低程序的耦合度，提高程序的扩展力</strong></p><hr><p>**附:**java链接MySQL驱动包最新版下载地址:<a href="https://dev.mysql.com/downloads/connector/j/,%E8%A7%A3%E5%8E%8B%E5%90%8E%E5%BE%97%E5%88%B0jar%E5%BA%93%E6%96%87%E4%BB%B6,%E7%84%B6%E5%90%8E%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%AF%BC%E5%85%A5%E8%AF%A5%E5%BA%93%E6%96%87%E4%BB%B6">https://dev.mysql.com/downloads/connector/j/,解压后得到jar库文件,然后在项目中导入该库文件</a>.</p><p>博主使用的版本是<a href="https://jiangxxx.lanzouw.com/iCRXlu66bbe">mysql-connector-java-5.1.47.jar</a></p><p><img src="https://i.loli.net/2021/09/21/Q9wi8ZrCaDgGFfq.png" alt="image-20210918094830349"></p><h2 id="四-什么是驱动"><a href="#四-什么是驱动" class="headerlink" title="四.什么是驱动"></a>四.什么是驱动</h2><p>驱动，是指驱动计算机里软件的程序。驱动程序全称设备驱动程序，是添加到操作系统中的特殊程序，其中包含有关硬件设备的信息。此信息能够使计算机与相应的设备进行通信。驱动程序是硬件厂商根据操作系统编写的配置文件，可以说没有驱动程序，计算机中的硬件就无法工作。</p><p>例如：网卡，声卡，显卡等等 必须要安装驱动程序，不然这些硬件就无法正常工作。</p><h2 id="五-为什么要面向接口编程？"><a href="#五-为什么要面向接口编程？" class="headerlink" title="五.为什么要面向接口编程？"></a>五.为什么要面向接口编程？</h2><p>解耦合:降低程序的耦合度，提高程序的扩展力<br>多态机制就是非常典型的：面向抽象编程(不要面向具体编程)</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Animal</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Animal</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//喂养的方法</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">feed</span><span class="token punctuation">(</span><span class="token class-name">Animal</span> a <span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//面向父类型编程</span><span class="token punctuation">&#125;</span>不建议：<span class="token class-name">Dog</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Cat</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>思考</strong>：为什么sun公司要制定一套JDBC接口呢？<br>因为每个数据库的实现原理不一样，oracle、mysql、ms sqlserver都有自己的原理,每个数据库产品都有自己独特的实现原理.</p><h2 id="六-JDBC核心类（接口）介绍"><a href="#六-JDBC核心类（接口）介绍" class="headerlink" title="六.JDBC核心类（接口）介绍"></a>六.JDBC核心类（接口）介绍</h2><p>JDBC中的核心类有：<code>DriverManager</code>、<code>Connection</code>、<code>Statement</code>，和<code>ResultSet</code></p><p><strong>DriverManger（驱动管理器）的作用有两个：</strong></p><ul><li><p>注册驱动：这可以让JDBC知道要使用的是哪个驱动；</p><p><code>DriverManager.registerDriver(new com.mysql.jdbc.Driver());</code></p></li><li><p>获取Connection：如果可以获取到Connection，那么说明已经与数据库连接上了。</p><p><code>DriverManager.getConnection(url,username,password)</code></p></li></ul><p><strong>Connection对象表示连接，与数据库的通讯都是通过这个对象展开的：</strong></p><ul><li><p>Connection最为重要的一个方法就是用来获取Statement对象；</p><p><code>Statement stmt = con.createStatement();</code></p></li><li><p>Statement是用来向数据库发送SQL语句的，这样数据库就会执行发送过来的SQL语句</p></li><li><p>void executeUpdate(String sql)：执行更新操作（insert、update、delete等）；</p></li><li><p>ResultSet executeQuery(String sql)：执行查询操作，数据库在执行查询后会把查询结果，查询结果就是ResultSet；</p></li></ul><p><strong>ResultSet对象表示查询结果集，只有在执行查询操作后才会有结果集的产生。结果集是一个二维的表格，有行有列。操作结果集要学习移动ResultSet内部的“行光标”，以及获取当前行上的每一列上的数据：</strong></p><ul><li><p>boolean next()：使“行光标”移动到下一行，并返回移动后的行是否存在；</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java">rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//光标移动到第一行</span>rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取第一行第一列的数据</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>XXX getXXX(int col)：获取当前行指定列上的值，参数就是列数，列数从1开始，而不是0。</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//常用的方法</span><span class="token class-name">Object</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token keyword">int</span> col<span class="token punctuation">)</span><span class="token class-name">String</span> <span class="token function">getString</span><span class="token punctuation">(</span><span class="token keyword">int</span> col<span class="token punctuation">)</span><span class="token keyword">int</span> <span class="token function">getInt</span><span class="token punctuation">(</span><span class="token keyword">int</span> col<span class="token punctuation">)</span><span class="token keyword">double</span> <span class="token function">getDouble</span><span class="token punctuation">(</span><span class="token keyword">int</span> col<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h2 id="七-JDBC编程6步（超级重要-需要背会-）"><a href="#七-JDBC编程6步（超级重要-需要背会-）" class="headerlink" title="七.JDBC编程6步（超级重要,需要背会!!!!）"></a>七.JDBC编程6步（超级重要,需要背会!!!!）</h2><p><strong>第1步：注册驱动 (只做一次)</strong></p><p><strong>第2步：获取数据库连接对象(Connection)</strong></p><p><strong>第3步：获取数据库操作对象(Statement)</strong></p><p><strong>第4步：执行sql语句(增删改查)</strong></p><p><strong>第5步：处理查询结果集(ResultSet)</strong></p><p><strong>第6步：释放资源</strong></p><hr><h3 id="第1步：注册驱动-只做一次"><a href="#第1步：注册驱动-只做一次" class="headerlink" title="第1步：注册驱动 (只做一次)"></a>第1步：注册驱动 (只做一次)</h3><p><strong>作用</strong>：告诉java程序，即将要连接的是哪个牌子的数据库.</p><p><img src="https://i.loli.net/2021/09/21/zojbJVGiYHO6D8T.png" alt="下载"></p><p><strong>注册驱动的两种方法 (例如,注册MySQL的数据库驱动) :</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 第一种:  推荐</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>“<span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span>”<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>Class.forName是把这个类加载到JVM中，加载的时候，就会执行其中的静态初始化块，完成驱动的初始化的相关工作。 </p><hr><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 第二种:  不推荐</span><span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">registerDriver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// DriverManager类的registerDriver()方法的参数是java.sql.Driver，但java.sql.Driver是一个接口，实现类由mysql驱动来提供，mysql驱动中的java.sql.Driver接口的实现类为com.mysql.jdbc.Driver</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>上面代码虽然可以注册驱动，但是出现硬编码（代码依赖mysql驱动jar包），如果将来想连接Oracle数据库，那么必须要修改代码的。并且其实这种注册驱动的方式是注册了两次驱动！</p><hr><p>通过初始化驱动类<code>com.mysql.jdbc.Driver</code>，该类就在 mysql-connector-java-5.0.8-bin.jar中。如果你使用的是oracle数据库那么该驱动类将不同。</p><p><strong>注意：</strong>Class.forName需要捕获ClassNotFoundException.</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="第2步：获取数据库连接对象-Connection"><a href="#第2步：获取数据库连接对象-Connection" class="headerlink" title="第2步：获取数据库连接对象(Connection)"></a><strong>第2步：获取数据库连接对象(Connection)</strong></h3><p>表示jvm的进程和数据库进程之间的通道打开了，这属于进程之间的通信，重量级的，使用完一定要关闭</p><p>可以使用 <code>DriverManager.getConnection()</code>方法建立连接。根据传入参数的不同，有三种重载的<code>DriverManager.getConnection()</code>方法：</p><ul><li><code>getConnection(String url)</code></li><li><code>getConnection(String url, Properties prop)</code></li><li><strong><code>getConnection(String url, String user, String password)</code></strong></li></ul><p><strong>还可以在url中提供参数</strong>：</p><p>jdbc:mysql://localhost:3306/mydb?<strong>useUnicode=true</strong>&amp;<strong>characterEncoding=UTF8</strong></p><p>useUnicode参数指定这个连接数据库的过程中，使用的字节集是Unicode字节集；</p><p>characherEncoding参数指定穿上连接数据库的过程中，使用的字节集编码为UTF-8编码。请注意，mysql中指定UTF-8编码是给出的是UTF8，而不是UTF-8。</p><p>这里每个格式都需要一个数据库URL。 数据库<strong>URL是指向数据库的地址。</strong>制定数据库URL是建立连接相关联的大多数错误问题发生的地方。各数据库对应的URL如下所示：</p><p><img src="https://i.loli.net/2021/09/21/zojbJVGiYHO6D8T.png" alt="下载"></p><p>　假设我们现在需要连接MySQL数据库，格式为：<strong>jdbc:mysql://hostname：port/datebaseName</strong>。我们需要的信息是hostname主机名和端口号，一般默认为localHost：3306；还需要datebaseName数据库名，假设为mydb；当然还有URL格式未包含的也是必须的信息：连接数据库的用户名和密码，假设为root和123456。那么就有URL：</p><ul><li><p>```<br>1 String url = “jdbc:mysql//localhost:3306/mydb”;</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">　　下面分别使用四种方法来实现：- 使用一个URL作为参数的方式：需要将username+password以参数的形式放到URL中，但是每种数据库的放置都不太相同  &#96;&#96;&#96;java  &#x2F;&#x2F;连接mysql的纯URL  String url &#x3D; &quot;jdbc:mysql&#x2F;&#x2F;localhost:3306&#x2F;mydb?username&#x3D;root&amp;password&#x3D;123456&quot;;  Connection conn  &#x3D; DriverManager.getConnection(url,p);  &#x2F;&#x2F;连接Oracle的纯URL String url &#x3D; &quot;jdbc:oracle:thin:root&#x2F;123456@192.0.0.10:1521:mydb&quot;;Connection conn  &#x3D; DriverManager.getConnection(url);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>使用URL、properties作为参数的方式：即需要将username和password以键值对形式存放在properties对象中作为参数</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//MySql</span><span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql//localhost:3306/mydb"</span><span class="token punctuation">;</span><span class="token class-name">Properties</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>p<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>p<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Connection</span> conn  <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>使用URL、username、password三个参数分开的方式（<strong>推荐</strong>）</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql//localhost:3306/mydb"</span><span class="token punctuation">;</span><span class="token class-name">String</span> username <span class="token operator">=</span>  <span class="token string">"root"</span><span class="token punctuation">;</span><span class="token class-name">String</span> password  <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token punctuation">;</span><span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>利用<code>java.sql.Drivermanager</code>类中的<code>getConnection()</code>方法与数据库建立连接。</p></li></ul><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Connection</span> c <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://127.0.0.1:3306/mydb?characterEncoding=UTF-8"</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 说明:</span><span class="token comment">// DriverManager.getConnection(“jdbc:mysql://数据库地址:端口号/数据库名”,”用户名”, “密码”);</span><span class="token comment">// 数据库服务端的IP地址:127.0.0.1 (这是本机，如果连接其他电脑上的数据库，需填写相应的IP地址)</span><span class="token comment">// 数据库的端口号： 3306 （mysql专用端口号）</span><span class="token comment">// 数据库名称 mydb（根据你自己数据库中的名称填写）</span><span class="token comment">// 编码方式 UTF-8</span><span class="token comment">// 账号 root</span><span class="token comment">// 密码 123456（如果你在创建数据库的时候没有使用默认的账号和密码，请填写自己设置的账号和密码）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>注意:</strong> Connection是与特定数据库连接回话的接口，使用的时候需要导包，而且必须在程序结束的时候将其关闭。getConnection方法也需要捕获SQLException异常。</p><p><strong>因为在进行数据库的增删改查的时候都需要与数据库建立连接，所以可以在项目中将建立连接写成一个工具方法，用的时候直接调用即可：</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/**  * 取得数据库的连接  * @return 一个数据库的连接  */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token keyword">try</span> <span class="token punctuation">&#123;</span> <span class="token comment">//初始化驱动类com.mysql.jdbc.Driver</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://127.0.0.1:3306/mydb?characterEncoding=UTF-8"</span><span class="token punctuation">,</span><span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//该类就在 mysql-connector-java-5.0.8-bin.jar中,如果忘记了第一个步骤的导包，就会抛出ClassNotFoundException</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> conn<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="第3步：获取数据库操作对象-Statement或者PreparedStatement"><a href="#第3步：获取数据库操作对象-Statement或者PreparedStatement" class="headerlink" title="第3步：获取数据库操作对象(Statement或者PreparedStatement)"></a><strong>第3步：获取数据库操作对象(Statement或者PreparedStatement)</strong></h3><p>SQL语句的执行对象按理说有Statement和PreparedStatement两个，但我们一般都不会去使用Statement，先看下两者的基本描述：</p><ul><li><strong>Statement</strong> 是 Java 执行数据库操作的一个重要接口，用于在已经建立数据库连接的基础上，向数据库发送要执行的SQL语句。Statement对象，<strong>用于执行不带参数的简单SQL语句，即静态SQL语句。</strong></li><li><strong>PreparedStatement</strong> 继承于Statement。实例包含<strong>已编译的 SQL 语句，</strong>这就是使语句“准备好”。包含于 PreparedStatement 对象中的 SQL 语句可具有一个或多个 IN <strong>参数</strong>。IN参数的值在 SQL 语句创建时未被指定。相反的，该语句为每个 IN 参数保留一个<strong>问号（“？”）作为占位符</strong>。每个问号的值必须在该语句执行之前，通过适当的<strong>setXXX（） 方法来提供</strong>。</li></ul><p>　　简言之，Statement执行静态SQL语句，而它的子类PreparedStatement执行预编译SQL，即可传入参数。两者相比之下，PreparedStatement有以下<strong>优势</strong>：</p><ul><li><strong>预编译处理，可动态执行SQL语句。</strong>很明显，SQL语句的预编译，使用占位符？去代替未知数据，因而一个句子可以执行多种不同的SQL，而Statement需要重新书写SQL语句，笨重。</li><li><strong>速度快，执行效率高</strong>。SQL语句会预编译在数据库系统中。执行计划同样会被缓存起来，它允许数据库做参数化查询。使用预处理语句比普通的查询更快，因为它做的工作更少（数据库对SQL语句的分析，编译，优化已经在第一次查询前完成了）。我们要<strong>利用预编译的特性</strong></li></ul><h4 id="1-利用java-sql-Connection创建用于执行SQL语句的Statement。"><a href="#1-利用java-sql-Connection创建用于执行SQL语句的Statement。" class="headerlink" title="(1). 利用java.sql.Connection创建用于执行SQL语句的Statement。"></a>(1). 利用<code>java.sql.Connection</code>创建用于执行SQL语句的Statement。</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Statement</span> stmt <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>注意:<strong>使用Statement会引起</strong>sql注入问题</strong>,在实际开发中很少使用,用的的更多的是它的子类PreparedStatement</p><p><strong>比如sql注入问题如下:</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"SELECT * FROM users WHERE name = '"</span> <span class="token operator">+</span> userName <span class="token operator">+</span> <span class="token string">"' and pw = '"</span><span class="token operator">+</span> passWord <span class="token operator">+</span><span class="token string">"';"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>验证需要用户输入用户名和密码，正确则执行查询语句（登录），但如果这样输入：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">userName &#x3D; &quot;1&#39; OR &#39;1&#39;&#x3D;&#39;1&quot;;passWord &#x3D; &quot;1&#39; OR &#39;1&#39;&#x3D;&#39;1&quot;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p> 那么执行语句就变成了：</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">1</span> <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"SELECT * FROM users WHERE name = '1' OR '1'='1' and pw = '1' OR '1'='1';"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p> 这样，where语句恒为真，就能实现无账号登录。此外便可能被恶意修改甚至删除数据表。然而使用PreparedStatement的参数化的查询<strong>可以阻止大部分的SQL注入</strong>。在使用参数化查询的情况下，数据库系统（eg:MySQL）不会将参数的内容视为SQL指令的一部分来处理，而是<strong>在数据库完成SQL指令的编译后，才套用参数运行</strong>，且占位符?不允许多值，只能填入一个值，因此就算参数中含有破坏性的指令，也不会被数据库所运行。</p><h4 id="2-使用Connection对象的PreparedStatement（sql）方法进行获取："><a href="#2-使用Connection对象的PreparedStatement（sql）方法进行获取：" class="headerlink" title="(2) .使用Connection对象的PreparedStatement（sql）方法进行获取："></a>(2) .使用Connection对象的PreparedStatement（sql）方法进行获取：</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> sql  <span class="token operator">=</span> <span class="token string">"select * from user where name=? and ange=?"</span><span class="token punctuation">;</span><span class="token comment">//预处理，需要我们先写好sql语句</span><span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">preparedStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//conn是连接对象，参数为sql语句</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="第4步：执行sql语句-增删改查"><a href="#第4步：执行sql语句-增删改查" class="headerlink" title="第4步：执行sql语句(增删改查)"></a><strong>第4步：执行sql语句(增删改查)</strong></h3><p>SQL语言共分为四大类：数据查询语言DQL，数据操纵语言DML，数据定义语言DDL，数据控制语言DCL</p><p>sql语句有增删查改等几种类型，所以执行方法有以下三种：</p><ul><li><code>execute()：</code><strong>执行SQL语句</strong>，可以是任何种类的 SQL 语句。返回值是boolean类型。</li><li><code>executeQuery()</code>：<strong>执行SQL语句查询</strong>，查询结果返回为**<code>ResultSet</code> 对象**。</li><li><code>executeUpdate()</code> ：<strong>执行更新语句</strong>。该语句必须是一个 SQL 数据操作语言（Data Manipulation Language，DML）语句，比如 <code>INSERT</code>、<code>UPDATE</code> 或 <code>DELETE</code> 语句；或者是无返回内容的 SQL 语句，比如 DDL 语句。返回值是int。</li></ul><p>　　例如本例中的语句是查询语句，所以执行代码为：</p><ul><li>```java<br>//执行查询语句，并把结果集返回给集合ResultSet<br>ResultSet rs = ps.executeQuery();<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">### **第5步：处理查询结果集(ResultSet)**如果返回值是boolean或者int很好处理，但如果是查询结果集ResultSet对象，一般使用while循环来处理：　&#96;　　ResultSet&#96; 对象具有指向其当前数据行的光标。最初，光标被置于第一行之前。&#96;next()&#96; 方法将光标移动到下一行；因为该方法在 &#96;ResultSet&#96; 对象没有下一行时返回 &#96;false&#96;，所以可以在 &#96;while&#96; 循环中使用它来**迭代**结果集。另外，可以使用ResultSet对象的getXXX（int columnIndex）获得游标所在行指定列的值。原理如下图所示：![下载 (1)](https:&#x2F;&#x2F;i.loli.net&#x2F;2021&#x2F;09&#x2F;21&#x2F;vhreUMbBG5En1KH.png)所以，本例的结果集处理如下：&#96;&#96;&#96;java1 while(rs.next())&#123;2        system.out.println(rs.getString(1));3        system.out.println(rs.getInt(2));    4 &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h3 id="第6步：释放资源"><a href="#第6步：释放资源" class="headerlink" title="第6步：释放资源"></a><strong>第6步：释放资源</strong></h3><p>在JDBC程序结束之后，显式地需要关闭与数据库的所有连接以结束每个数据库会话。 但是，如果在编写程序中忘记了关闭也没有关系，Java的垃圾收集器将在清除过时的对象时也会关闭这些连接。</p><p>　　依靠垃圾收集，特别是数据库编程，是一个非常差的编程实践。所以应该要使用与连接对象关联的<code>close()</code>方法关闭连接。要确保连接已关闭，可以将关闭连接的代码中编写在“<code>finally</code>”块中。 一个<code>finally</code>块总是会被执行，不管是否发生异常。</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java">conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h2 id="八-JDBCUtils工具类"><a href="#八-JDBCUtils工具类" class="headerlink" title="八.JDBCUtils工具类"></a>八.JDBCUtils工具类</h2><p>因为传统JDBC的开发，注册驱动，获得连接，<strong>释放资源这些代码都是重复编写的</strong>。所以可以将重复的代码提取到一个类中来完成</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">ResultSet</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SQLException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Statement</span><span class="token punctuation">;</span><span class="token comment">/** * JDBC的工具类 * @author CodeAnime * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCUtils</span> <span class="token punctuation">&#123;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> driverClassName<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span><span class="token keyword">static</span><span class="token punctuation">&#123;</span>driverClassName<span class="token operator">=</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">;</span>url<span class="token operator">=</span><span class="token string">"jdbc:mysql:///web_test3"</span><span class="token punctuation">;</span>username<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span>password<span class="token operator">=</span><span class="token string">"123456"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 注册驱动的方法 */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadDriver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driverClassName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 获得连接的方法 */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span><span class="token comment">// 将驱动一并注册:</span><span class="token function">loadDriver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获得连接</span>conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> conn<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 释放资源的方法 */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">Statement</span> stmt<span class="token punctuation">,</span><span class="token class-name">Connection</span> conn<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">ResultSet</span> rs<span class="token punctuation">,</span><span class="token class-name">Statement</span> stmt<span class="token punctuation">,</span><span class="token class-name">Connection</span> conn<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">// 资源释放：</span><span class="token keyword">if</span><span class="token punctuation">(</span>rs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>测试案例：导入工具类，查询用户信息</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">ResultSet</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Statement</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>xdr630<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">JDBCUtils</span><span class="token punctuation">;</span><span class="token comment">/** * JDBC工具类的测试 * @author xdr * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCDemo3</span> <span class="token punctuation">&#123;</span><span class="token annotation punctuation">@Test</span><span class="token comment">/** * 查询操作：使用工具类 */</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">demo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">Statement</span> stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span><span class="token comment">// 获得连接:</span>conn <span class="token operator">=</span> <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建执行SQL语句的对象:</span>stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 编写SQL:</span><span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select * from user"</span><span class="token punctuation">;</span><span class="token comment">// 执行查询:</span>rs <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 遍历结果集:</span><span class="token keyword">while</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">finally</span><span class="token punctuation">&#123;</span><span class="token comment">// 释放资源:</span><span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>rs<span class="token punctuation">,</span> stmt<span class="token punctuation">,</span> conn<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>另一种写法:</p><p><strong>jdbc.properties属性文件</strong></p><p><strong>注意：属性配置文件必须以properties结尾，且存储在src源目录下</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java">driver<span class="token operator">=</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span>url<span class="token operator">=</span>jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>mydbuser<span class="token operator">=</span>rootpassword<span class="token operator">=</span><span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>JDBCUtils.java工具类</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//类文件属性，可以在类文件所有的方法中使用</span>    <span class="token keyword">private</span> <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>      <span class="token keyword">private</span> <span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">/**     * 在当前类文件第一次被加载到JVM时，JVM将会自动调用当前类文件静态语句块     */</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//1. 注册数据库服务器提供的Driver接口实现类</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            <span class="token class-name">ResourceBundle</span> bundle <span class="token operator">=</span> <span class="token class-name">ResourceBundle</span><span class="token punctuation">.</span><span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token string">"jdbc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> driver <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**     * 封装Connection对象创建细节     * @return 数据库连接的对象     */</span>     <span class="token comment">//这里我们选择抛出异常，而不是自行内部处理。是让调用此方法的人知道出现异常时的控制台出现的异常信息</span>    <span class="token keyword">public</span> <span class="token class-name">Connection</span> <span class="token function">creatConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//采用资源绑定器来绑定属性配置文件</span>        <span class="token class-name">ResourceBundle</span> bundle <span class="token operator">=</span> <span class="token class-name">ResourceBundle</span><span class="token punctuation">.</span><span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token string">"jdbc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> url <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> username <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> password <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//2. 创建一个连接通道交给Connection接口的实例对象[Connection]管理</span>        conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> conn<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**     *  封装PreparedStatement对象创建细节     * @param sql sql语句     * @return       */</span>    <span class="token keyword">public</span> <span class="token class-name">PreparedStatement</span> <span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token class-name">String</span> sql<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token function">creatConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3. 创建一个交通工具交给 PreparedStatement 接口的实例对象[PreparedStatement]管理</span>        ps <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//4. 由交通工具在Java工程与数据库服务器之间进行传输，推送SQL命令并带回执行结果</span>        <span class="token keyword">return</span> ps<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**     * 封装PreparedStatement与Connection对象销毁细节     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ps <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                ps<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**     * 封装PreparedStatement与Connection与ResultSet对象销毁细节     * @param rs 查询结果集     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token class-name">ResultSet</span> rs<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>JDBCTest01.java测试</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCTest01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//创建JDBC工具类对象</span>        <span class="token class-name">JdbcUtil</span> util <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JdbcUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select * from studnet where studentid = ?"</span><span class="token punctuation">;</span>            <span class="token comment">//这里由于在工具类中是抛出异常的，那么在调用时再抛出异常给JVM虚拟机就显然不太合理了，此时我们选择try...catch...内部处理</span>            ps <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            ps<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"田七"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            rs <span class="token operator">=</span> ps<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"studentid"</span><span class="token punctuation">)</span> <span class="token operator">+</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"studnetname"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//在finally语句块中的语句必定执行</span>            util<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><hr><p>参考文章:</p><ul><li><p>作者 : Jungle_Rao</p><ul><li>链接：<a href="https://blog.csdn.net/Jungle_Rao/article/details/81274720">https://blog.csdn.net/Jungle_Rao/article/details/81274720</a></li></ul></li><li><p>作者 : Qiao_Zhi</p><ul><li><a href="https://www.cnblogs.com/qlqwjy/p/8227665.html">https://www.cnblogs.com/qlqwjy/p/8227665.html</a></li></ul></li><li><p>作者 : 叫我玉弟大人</p><ul><li><a href="https://www.cnblogs.com/jwyddr/p/11661096.html">https://www.cnblogs.com/jwyddr/p/11661096.html</a></li></ul></li><li><p>作者 : 风大</p><ul><li><a href="https://www.cnblogs.com/fzz9/p/8970210.html">https://www.cnblogs.com/fzz9/p/8970210.html</a></li></ul></li><li><p>作者 : newwaylau</p><ul><li><a href="https://zhuanlan.zhihu.com/p/114709445">https://zhuanlan.zhihu.com/p/114709445</a></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JDBC小记&quot;&gt;&lt;a href=&quot;#JDBC小记&quot; class=&quot;headerlink&quot; title=&quot;JDBC小记&quot;&gt;&lt;/a&gt;JDBC小记&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="JDBC" scheme="https://codeanime.cc/categories/JDBC/"/>
    
    
    <category term="笔记" scheme="https://codeanime.cc/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="MySQL" scheme="https://codeanime.cc/tags/MySQL/"/>
    
    <category term="数据库" scheme="https://codeanime.cc/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="JDBC" scheme="https://codeanime.cc/tags/JDBC/"/>
    
  </entry>
  
  <entry>
    <title>JDBC练习五</title>
    <link href="https://codeanime.cc/JDBC%E7%BB%83%E4%B9%A0%E4%BA%94.html"/>
    <id>https://codeanime.cc/JDBC%E7%BB%83%E4%B9%A0%E4%BA%94.html</id>
    <published>2021-09-20T11:24:19.000Z</published>
    <updated>2021-09-20T11:40:03.919Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JDBC练习五"><a href="#JDBC练习五" class="headerlink" title="JDBC练习五"></a>JDBC练习五</h2><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*执行DQL语句*/</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCTest05</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1、注册驱动</span>        <span class="token comment">// 2、建立连接</span>        <span class="token comment">// 3、获取数据库操作对象</span>        <span class="token comment">// 4、执行sql语句</span>        <span class="token comment">// 5、获取查询结果集</span>        <span class="token comment">// 6、释放资源</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            <span class="token class-name">ResourceBundle</span> rb <span class="token operator">=</span> <span class="token class-name">ResourceBundle</span><span class="token punctuation">.</span><span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token string">"jdbc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> driver <span class="token operator">=</span> rb<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> url <span class="token operator">=</span> rb<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> user <span class="token operator">=</span> rb<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> password <span class="token operator">=</span> rb<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>            conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>user<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>            stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            rs <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token string">"select * from student"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">/*String studentid = rs.getString(1);String studentname = rs.getString(2);System.out.println(studentid + "," + studentname);*/</span><span class="token comment">/*// 按下标取出，程序不健壮String studentid = rs.getString("studentid");String studentname = rs.getString("studentname");System.out.println(studentid + "," + studentname);*/</span><span class="token comment">/*// 以指定的格式取出int studentid = rs.getInt(1);String studentname = rs.getString(2);System.out.println(studentid + "," + studentname);*/</span>                <span class="token keyword">int</span> studentid <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"studentid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> studentname <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"studentname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>studentid <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> studentname<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>rs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">try</span><span class="token punctuation">&#123;</span>                    rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">try</span><span class="token punctuation">&#123;</span>                    stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">try</span><span class="token punctuation">&#123;</span>                    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h4><p><img src="https://i.loli.net/2021/09/20/TaORfKSroJmbqQW.png" alt="image-20210920191144745"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JDBC练习五&quot;&gt;&lt;a href=&quot;#JDBC练习五&quot; class=&quot;headerlink&quot; title=&quot;JDBC练习五&quot;&gt;&lt;/a&gt;JDBC练习五&lt;/h2&gt;&lt;div class=&quot;code-wrapper&quot;&gt;&lt;pre class=&quot;line-numbers la</summary>
      
    
    
    
    <category term="JDBC" scheme="https://codeanime.cc/categories/JDBC/"/>
    
    
    <category term="MySQL" scheme="https://codeanime.cc/tags/MySQL/"/>
    
    <category term="数据库" scheme="https://codeanime.cc/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="JDBC" scheme="https://codeanime.cc/tags/JDBC/"/>
    
    <category term="练习" scheme="https://codeanime.cc/tags/%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>JDBC练习四</title>
    <link href="https://codeanime.cc/JDBC%E7%BB%83%E4%B9%A0%E5%9B%9B.html"/>
    <id>https://codeanime.cc/JDBC%E7%BB%83%E4%B9%A0%E5%9B%9B.html</id>
    <published>2021-09-20T11:24:13.000Z</published>
    <updated>2021-09-20T11:36:24.146Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JDBC练习四"><a href="#JDBC练习四" class="headerlink" title="JDBC练习四"></a>JDBC练习四</h2><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token comment">/*使用资源绑定器*/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCTest04</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ResourceBundle</span> bundle <span class="token operator">=</span> <span class="token class-name">ResourceBundle</span><span class="token punctuation">.</span><span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token string">"jdbc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> driver <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> url <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> user <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> password <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>            conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>user<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>            stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> count <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token string">"insert into student values(5,'田七')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">1</span><span class="token operator">?</span> <span class="token string">"保存成功"</span><span class="token operator">:</span><span class="token string">"保存失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="资源绑定器"><a href="#资源绑定器" class="headerlink" title="资源绑定器:"></a>资源绑定器:</h4><p><img src="https://i.loli.net/2021/09/20/jr6IOex3mvdcV5U.png" alt="image-20210920184236414"></p><p>资源绑定器内容为:</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">driver<span class="token operator">=</span>com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Driverurl<span class="token operator">=</span>jdbc:mysql:<span class="token comment">//localhost:3306/mydb</span><span class="token keyword">user</span><span class="token operator">=</span>rootpassword<span class="token operator">=</span><span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h4><p><img src="https://i.loli.net/2021/09/20/lrwONW3InbvsJgP.png" alt="image-20210920190549218"></p><p><img src="https://i.loli.net/2021/09/20/rL38H54OPzisGA1.png" alt="image-20210920191031060"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JDBC练习四&quot;&gt;&lt;a href=&quot;#JDBC练习四&quot; class=&quot;headerlink&quot; title=&quot;JDBC练习四&quot;&gt;&lt;/a&gt;JDBC练习四&lt;/h2&gt;&lt;div class=&quot;code-wrapper&quot;&gt;&lt;pre class=&quot;line-numbers la</summary>
      
    
    
    
    <category term="JDBC" scheme="https://codeanime.cc/categories/JDBC/"/>
    
    
    <category term="MySQL" scheme="https://codeanime.cc/tags/MySQL/"/>
    
    <category term="数据库" scheme="https://codeanime.cc/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="JDBC" scheme="https://codeanime.cc/tags/JDBC/"/>
    
    <category term="练习" scheme="https://codeanime.cc/tags/%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>JDBC练习三</title>
    <link href="https://codeanime.cc/JDBC%E7%BB%83%E4%B9%A0%E4%B8%89.html"/>
    <id>https://codeanime.cc/JDBC%E7%BB%83%E4%B9%A0%E4%B8%89.html</id>
    <published>2021-09-20T11:24:08.000Z</published>
    <updated>2021-09-20T12:13:39.025Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JDBC练习三"><a href="#JDBC练习三" class="headerlink" title="JDBC练习三"></a>JDBC练习三</h2><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token comment">/*注册驱动的另一种方式*/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCTest03</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 注册驱动</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取连接</span>            <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://localhost:3306/mydb"</span><span class="token punctuation">,</span><span class="token string">"root"</span><span class="token punctuation">,</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h4><p><img src="https://i.loli.net/2021/09/20/txwlaOp4TQKYDrb.png" alt="image-20210920190422815"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JDBC练习三&quot;&gt;&lt;a href=&quot;#JDBC练习三&quot; class=&quot;headerlink&quot; title=&quot;JDBC练习三&quot;&gt;&lt;/a&gt;JDBC练习三&lt;/h2&gt;&lt;div class=&quot;code-wrapper&quot;&gt;&lt;pre class=&quot;line-numbers la</summary>
      
    
    
    
    <category term="JDBC" scheme="https://codeanime.cc/categories/JDBC/"/>
    
    
    <category term="MySQL" scheme="https://codeanime.cc/tags/MySQL/"/>
    
    <category term="数据库" scheme="https://codeanime.cc/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="JDBC" scheme="https://codeanime.cc/tags/JDBC/"/>
    
    <category term="练习" scheme="https://codeanime.cc/tags/%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>JDBC练习二</title>
    <link href="https://codeanime.cc/JDBC%E7%BB%83%E4%B9%A0%E4%BA%8C.html"/>
    <id>https://codeanime.cc/JDBC%E7%BB%83%E4%B9%A0%E4%BA%8C.html</id>
    <published>2021-09-20T11:24:00.000Z</published>
    <updated>2021-09-20T11:30:37.639Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JDBC练习二"><a href="#JDBC练习二" class="headerlink" title="JDBC练习二"></a>JDBC练习二</h2><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token comment">/*JDBC完成Delete*/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCTest02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1、注册驱动</span>        <span class="token comment">// 2、获取连接</span>        <span class="token comment">// 3、获取数据库操作对象</span>        <span class="token comment">// 4、执行sql语句</span>        <span class="token comment">// 5、获取查询结果集</span>        <span class="token comment">// 6、释放资源</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Driver</span> driver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">registerDriver</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql://127.0.0.1:3306/mydb"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token punctuation">;</span>            conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>user<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>            stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> count <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token string">"delete from student where studentid = 5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">1</span><span class="token operator">?</span> <span class="token string">"删除成功"</span><span class="token operator">:</span><span class="token string">"删除失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h4><p><img src="https://i.loli.net/2021/09/20/B96qA3IiQC75eG1.png" alt="image-20210920190345003"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JDBC练习二&quot;&gt;&lt;a href=&quot;#JDBC练习二&quot; class=&quot;headerlink&quot; title=&quot;JDBC练习二&quot;&gt;&lt;/a&gt;JDBC练习二&lt;/h2&gt;&lt;div class=&quot;code-wrapper&quot;&gt;&lt;pre class=&quot;line-numbers la</summary>
      
    
    
    
    <category term="JDBC" scheme="https://codeanime.cc/categories/JDBC/"/>
    
    
    <category term="MySQL" scheme="https://codeanime.cc/tags/MySQL/"/>
    
    <category term="数据库" scheme="https://codeanime.cc/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="JDBC" scheme="https://codeanime.cc/tags/JDBC/"/>
    
    <category term="练习" scheme="https://codeanime.cc/tags/%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
</feed>
