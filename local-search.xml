<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MySQL事务小记</title>
    <link href="/MySQL%E4%BA%8B%E5%8A%A1%E5%B0%8F%E8%AE%B0.html"/>
    <url>/MySQL%E4%BA%8B%E5%8A%A1%E5%B0%8F%E8%AE%B0.html</url>
    
    <content type="html"><![CDATA[<h1 id="MySQL事务小记"><a href="#MySQL事务小记" class="headerlink" title="MySQL事务小记"></a>MySQL事务小记</h1><h2 id="一-什么是事务"><a href="#一-什么是事务" class="headerlink" title="一.什么是事务"></a>一.什么是事务</h2><p>事务:一个最小的不可再分的工作单元</p><p>通常一个事务对应一个完整的业务(例如银行账户转账业务，该业务就是一个最小的工作单元), 一个完整的业务需要批量的DML(insert、update、delete)语句共同联合完成. 事务只和DML语句有关，或者说DML语句才有事务。这个和业务逻辑有关，业务逻辑不同，DML语句的个数不同</p><h2 id="二-事务的四大特征-ACID"><a href="#二-事务的四大特征-ACID" class="headerlink" title="二.事务的四大特征(ACID)"></a>二.事务的四大特征(ACID)</h2><ul><li><p><strong>原子性(Atomicity)</strong>: 事务开始后所有操作，要么全部做完，要么全部不做，不可能停滞在中间环节。事务执行过程中出错，会回滚到事务开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体，就像化学中学过的原子，是物质构成的基本单位。</p></li><li><p><strong>一致性(Consistency)</strong>: 事务开始之前、执行中、执行完毕，这些时间点，多个人去观察事务操作的数据的时候，看到的数据都是一致的。</p></li><li><p><strong>隔离性(Isolation)</strong>: 一个事务的执行不能被其他事务干扰。每个事务的执行过程是相对独立的；</p></li><li><p><strong>持久性(Durability)</strong>: 事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</p></li></ul><h2 id="三-事务中的并发问题"><a href="#三-事务中的并发问题" class="headerlink" title="三.事务中的并发问题"></a>三.事务中的并发问题</h2><ul><li><strong>脏读</strong>: 脏读又称无效数据的读出, 一个事务在执行的过程中读取到了其他事务还没有提交的数据。例如:事务A读取了事务B更新的数据，然后B回滚操作，那么A读取到的数据是脏数据</li><li><strong>读已提交</strong>: 一个事务操作过程中可以读取到其他事务已经提交的数据。事务中的每次读取操作，读取到的都是数据库中其他事务已提交的最新的数据</li><li><strong>可重复读</strong>:一个事务操作中对于一个读取操作不管多少次，读取到的结果都是一样的。</li><li><strong>不可重复读</strong>: 事务 A 多次读取同一数据，事务 B 在事务A多次读取的过程中，对数据作了更新并提交，导致事务A多次读取同一数据时，结果 不一致。</li><li><strong>幻读</strong>: 事务A在执行读取操作，需要两次统计数据的总量，前一次查询数据总量后，此时事务B执行了新增数据的操作并提交后，这个时候事务A读取的数据总量和之前统计的不一样，就像产生了幻觉一样，平白无故的多了几条数据，成为幻读。</li></ul>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>事务</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MyBatis小记</title>
    <link href="/MyBatis%E5%B0%8F%E8%AE%B0.html"/>
    <url>/MyBatis%E5%B0%8F%E8%AE%B0.html</url>
    
    <content type="html"><![CDATA[<h1 id="MyBatis小记"><a href="#MyBatis小记" class="headerlink" title="MyBatis小记"></a>MyBatis小记</h1><p>为什么要用Mybatis?</p><p>jdbc缺点:</p><p>缺点一：重复代码太多，这样会让开发效率降低。（比较繁琐，有一些代码是“没有必要的重复”）</p><p>缺点二：JDBC开发当中sql语句是编写在java程序当中的，sql语句不支持配置。sql语句<br>可能后期需要调优，sql语句被修改的概率还是很高的。在java程序中编写sql语句，后期修改<br>sql语句的时候，需要重新修改java源代码，源代码的修改会导致重新编译/重新部署等操作。<br>并且修改java源代码已经违背了开闭原则：OCP。<br>互联网分布式架构方面的项目，并发量很大，系统需要不断的优化，各方面优化，其中有一条<br>非常重要的优化就是sql优化。</p><h2 id="一-我的第一个Mybatis程序"><a href="#一-我的第一个Mybatis程序" class="headerlink" title="一. 我的第一个Mybatis程序:"></a>一. 我的第一个Mybatis程序:</h2><h3 id="1-准备数据库"><a href="#1-准备数据库" class="headerlink" title="1.准备数据库"></a>1.准备数据库</h3><p>新建一个数据库:</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> mybatis<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>新建一张表:</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>id <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>birth <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>插入数据:</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>birth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'1'</span> <span class="token punctuation">,</span> <span class="token string">'zhangsan'</span> <span class="token punctuation">,</span> <span class="token string">'20211010'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>birth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'2'</span> <span class="token punctuation">,</span> <span class="token string">'lisi'</span> <span class="token punctuation">,</span> <span class="token string">'20211011'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>birth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'3'</span> <span class="token punctuation">,</span> <span class="token string">'wangwu'</span> <span class="token punctuation">,</span> <span class="token string">'20211012'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="2-新建一个普通的java工程"><a href="#2-新建一个普通的java工程" class="headerlink" title="2.新建一个普通的java工程"></a>2.新建一个普通的java工程</h3><p>因为mybatis框架封装了JDBC。写一个main方法即可测试。</p><ul><li><p>新建工程<code>mybatis-project-laodu</code></p></li><li><p>在src同级目录下新建libs目录,把jar包引入到此目录</p></li><li><p>新建xml文件</p><ul><li>新建<code>mybatis-config.xml</code></li><li>新建<code>sqlMapper.xml</code></li></ul></li><li><p>在src目录下新建com/codeanime/main文件夹</p></li><li><p>在src目录下新建com/codeanime/test文件夹</p></li></ul><p><img src="https://i.loli.net/2021/10/10/KmfNYRukUIJniCB.png" alt="image-20211010215749996"></p><h3 id="3-引入相关的jar包"><a href="#3-引入相关的jar包" class="headerlink" title="3.引入相关的jar包"></a>3.引入相关的jar包</h3><p>mybatis-3.4.5.jar(mybatis核心jar)</p><p>mysql-connector-java-5.1.23-bin.jar(mysql数据库驱动jar)</p><p><img src="https://i.loli.net/2021/10/10/E6xNZUyB5GiWpXD.png" alt="image-20211010214929700"></p><h3 id="4-从xml中构建SqlSessionFactory"><a href="#4-从xml中构建SqlSessionFactory" class="headerlink" title="4.从xml中构建SqlSessionFactory"></a>4.从xml中构建SqlSessionFactory</h3><h4 id="4-1-编写main方法"><a href="#4-1-编写main方法" class="headerlink" title="4.1 编写main方法"></a>4.1 编写main方法</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> resource <span class="token operator">=</span> <span class="token string">"org/mybatis/example/mybatis-config.xml"</span><span class="token punctuation">;</span><span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SqlSessionFactory</span> sqlSessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>注意:</p><p>什么是类路径？</p><p>bin是类的根路径, src可以等同看做类的根路径</p><p>修改main方法代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> resource <span class="token operator">=</span> <span class="token string">"mybatis-config.xml"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>编辑mybatis-config.xml:核心配置文件主要配置连接数据库的信息，以及“sql语句配置文件”的路径。</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mysql.jdbc.Driver<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc:mysql://localhost:3306/mybatis<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>123456<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org/mybatis/example/BlogMapper.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="5-编写SqlMapper-xml"><a href="#5-编写SqlMapper-xml" class="headerlink" title="5.编写SqlMapper.xml"></a>5.编写SqlMapper.xml</h3><p>提供一个配置sql语句的配置文件，通常这种文件一般都叫做：sql映射文件（SqlMapper.xml）<br>    在类的根路径下新建一个SqlMapper.xml文件，修改mybatis-config.xml配置：</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SqlMapper.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>编辑SqlMapper.xml文件：</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 先不要管 namespace，随意编写一个。--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1111111111<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 查询语句，查询所有的学生 --></span>    <span class="token comment">&lt;!-- id具有唯一性，代表了这条sql语句，将来这个id是需要“拷贝”到java程序当中的。 --></span>    <span class="token comment">&lt;!-- 思考：我们程序员需要告诉mybatis框架什么信息，mybatis才能自动创建对象，并且自动将查询的结果集放到java对象的对应属性上。 --></span>    <span class="token comment">&lt;!-- 需要告诉mybatis，最终封装的java对象的类型。 --></span>    <span class="token comment">&lt;!-- 需要告诉mybatis，最终查询出的结果集赋值到javabean的哪个属性上面，怎么告诉mybatis呢？    查询结果集的列名要和javabean的属性名对应上，不对应的时候使用as关键字起别名。--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select        id as sid, name as sname , birth as sbirth        from        student    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="6-在main文件夹新建Student类作为javabean"><a href="#6-在main文件夹新建Student类作为javabean" class="headerlink" title="6.在main文件夹新建Student类作为javabean"></a>6.在main文件夹新建Student类作为javabean</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/*     *注意：以下的属性名和数据库表当中的字段名不一致。     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> sid<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> sname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> sbirth<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> sid<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSid</span><span class="token punctuation">(</span><span class="token class-name">String</span> sid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sid <span class="token operator">=</span> sid<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> sname<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSname</span><span class="token punctuation">(</span><span class="token class-name">String</span> sname<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sname <span class="token operator">=</span> sname<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSbirth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> sbirth<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSbirth</span><span class="token punctuation">(</span><span class="token class-name">String</span> sbirth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sbirth <span class="token operator">=</span> sbirth<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="7-在test目录下新建MybatisTest01作为测试类"><a href="#7-在test目录下新建MybatisTest01作为测试类" class="headerlink" title="7.在test目录下新建MybatisTest01作为测试类"></a>7.在test目录下新建MybatisTest01作为测试类</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisTest01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> resource <span class="token operator">=</span> <span class="token string">"mybatis-config.xml"</span><span class="token punctuation">;</span>            <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">SqlSessionFactory</span> sqlSessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 事务自动提交机制关闭，等同于:conn.setAutoCommit(false);</span>            <span class="token comment">// SqlSession对象等同看做Connection，专门用来执行sql语句的一个会话对象。</span>            <span class="token comment">// 开启事务</span>            sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// do work(执行核心业务逻辑)</span>            <span class="token comment">// 获取所有的学生，返回List集合，List集合中存储Student。</span>            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span> studentList <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token string">"getAll"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Student</span> s <span class="token operator">:</span> studentList<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getSid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">getSname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">getSbirth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// 没有出现异常，则事务结束，提交</span>            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 遇到异常之后回滚</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 关闭资源</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行test程序:</p><p><img src="https://i.loli.net/2021/10/10/8hNgpaEI5MP3wLV.png" alt="image-20211010220802753"></p><p>和数据库中一样:</p><p><img src="https://i.loli.net/2021/10/10/U5bghxtdPOnE2Co.png" alt="image-20211010220832789"></p><h2 id="二-使用mybatis完成单张表的CRUD"><a href="#二-使用mybatis完成单张表的CRUD" class="headerlink" title="二. 使用mybatis完成单张表的CRUD"></a>二. 使用mybatis完成单张表的CRUD</h2><p>CRUD:增删改查</p><h4 id="2-1-优化用户体验"><a href="#2-1-优化用户体验" class="headerlink" title="2.1 优化用户体验"></a>2.1 优化用户体验</h4><p><strong>在类的根路径下，新建一个jdbc.properties文件。配置连接数据库的信息</strong></p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">jdbc.driver&#x3D;com.mysql.jdbc.Driverjdbc.url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;mybatisjdbc.user&#x3D;rootjdbc.password&#x3D;123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>然后在核心配置文件引入该资源文件。</strong></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>使用：<property name="driver" value="${jdbc.driver}" />语法。<br>        注意：${jdbc.driver}这个不是EL表达式，是mybatis中自定制的语法机制。<br>        ${属性文件中的key}</p><p><strong>完整配置文件:</strong></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 引入外部独立的资源文件 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.driver&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.url&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.user&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.password&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SqlMapper2.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>编辑SqlMapper2配置文件:</strong></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>111111111111111111111111<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>save<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into student        (id , name , birth)        values        (#&#123;stuId&#125; , #&#123;stuName&#125; , #&#123;stuBirth&#125;)    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>插入数据:</strong></p><p>编写类<code>MyBtisCRUD</code>:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token comment">/** * 使用mybatis完成学生信息的增删改查（查一个/查所有） */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisCRUD</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/*             * String resource = "mybatis-config.xml"; InputStream inputStream =             * Resources.getResourceAsStream(resource); SqlSessionFactory             * factory = new SqlSessionFactoryBuilder().build(inputStream);             */</span>            <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"mybatis-config.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 开启事务</span>            sqlSession <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// do work</span>            <span class="token comment">// insert</span>            <span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            stu<span class="token punctuation">.</span><span class="token function">setStuId</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            stu<span class="token punctuation">.</span><span class="token function">setStuName</span><span class="token punctuation">(</span><span class="token string">"zhangsan2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            stu<span class="token punctuation">.</span><span class="token function">setStuBirth</span><span class="token punctuation">(</span><span class="token string">"20211011"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> count <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">"save"</span><span class="token punctuation">,</span> stu<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回值是影响数据库表当中的记录条数。</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 提交事务</span>            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 回滚事务</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 释放资源</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行结果:</p><p><img src="https://i.loli.net/2021/10/11/Q8TWUzekZi7Nduv.png" alt="image-20211011083533443"></p><p>运行成功返回影响行号</p><p>查看数据表:</p><p><img src="https://i.loli.net/2021/10/11/IMfkPjphuXbozrD.png" alt="image-20211011083713178"></p><p>数据表多了一条数据.表示插入成功</p><p><strong>修改数据:</strong></p><p>在类MyBtisCRUD中添加代码</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// update</span><span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stu<span class="token punctuation">.</span><span class="token function">setStuId</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stu<span class="token punctuation">.</span><span class="token function">setStuName</span><span class="token punctuation">(</span><span class="token string">"zhangsan3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stu<span class="token punctuation">.</span><span class="token function">setStuBirth</span><span class="token punctuation">(</span><span class="token string">"20211012"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> count <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"update"</span><span class="token punctuation">,</span> stu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>MyBatis完整的代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token comment">/** * 使用mybatis完成学生信息的增删改查（查一个/查所有） */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisCRUD</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/*             * String resource = "mybatis-config.xml"; InputStream inputStream =             * Resources.getResourceAsStream(resource); SqlSessionFactory             * factory = new SqlSessionFactoryBuilder().build(inputStream);             */</span>            <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"mybatis-config.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 开启事务</span>            sqlSession <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// do work</span>            <span class="token comment">// insert</span>            <span class="token comment">//Student stu = new Student();</span>            <span class="token comment">//stu.setStuId("123");</span>            <span class="token comment">//stu.setStuName("zhangsan2");</span>            <span class="token comment">//stu.setStuBirth("20211011");</span>            <span class="token comment">//int count = sqlSession.insert("save", stu); // 返回值是影响数据库表当中的记录条数。</span>            <span class="token comment">//System.out.println(count);</span>            <span class="token comment">// update</span><span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stu<span class="token punctuation">.</span><span class="token function">setStuId</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stu<span class="token punctuation">.</span><span class="token function">setStuName</span><span class="token punctuation">(</span><span class="token string">"zhangsan3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stu<span class="token punctuation">.</span><span class="token function">setStuBirth</span><span class="token punctuation">(</span><span class="token string">"20211012"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> count <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"update"</span><span class="token punctuation">,</span> stu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 提交事务</span>            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 回滚事务</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 释放资源</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>SqlMapper2.xml</code>中添加代码:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>update<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Student<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        update student set        name = #&#123;stuName&#125; , birth = #&#123;stuBirth&#125;        where        id = #&#123;stuId&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>SqlMapper2.xml</code>完整代码:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>111111111111111111111111<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>save<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into student        (id , name , birth)        values        (#&#123;stuId&#125; , #&#123;stuName&#125; , #&#123;stuBirth&#125;)    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>update<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        update student set        name = #&#123;stuName&#125; , birth = #&#123;stuBirth&#125;        where        id = #&#123;stuId&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行代码:</p><p><img src="https://i.loli.net/2021/10/11/u8Lpw9oDehjIUVy.png" alt="image-20211011090015738"></p><p>查看数据库:</p><p><img src="https://i.loli.net/2021/10/11/qrn9TzG3LtdO1sW.png" alt="image-20211011090107325"></p><p>发现数据库数据已经改变.表示修改成功</p><p><strong>查询一条数据:</strong></p><p>在MyBtisCRUD类中填加代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Student</span> stu <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token string">"getById"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getStuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getStuName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getStuBirth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>完整代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token comment">/** * 使用mybatis完成学生信息的增删改查（查一个/查所有） */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisCRUD</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/*             * String resource = "mybatis-config.xml"; InputStream inputStream =             * Resources.getResourceAsStream(resource); SqlSessionFactory             * factory = new SqlSessionFactoryBuilder().build(inputStream);             */</span>            <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"mybatis-config.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 开启事务</span>            sqlSession <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// do work</span>            <span class="token comment">// insert</span>            <span class="token comment">//Student stu = new Student();</span>            <span class="token comment">//stu.setStuId("123");</span>            <span class="token comment">//stu.setStuName("zhangsan2");</span>            <span class="token comment">//stu.setStuBirth("20211011");</span>            <span class="token comment">//int count = sqlSession.insert("save", stu); // 返回值是影响数据库表当中的记录条数。</span>            <span class="token comment">//System.out.println(count);</span>            <span class="token comment">// update</span>            <span class="token comment">/*Student stu = new Student();stu.setStuId("123");stu.setStuName("zhangsan3");stu.setStuBirth("20211012");int count = sqlSession.update("update", stu);System.out.println(count);*/</span>            <span class="token comment">// selectOne</span><span class="token class-name">Student</span> stu <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token string">"getById"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getStuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getStuName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getStuBirth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 提交事务</span>            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 回滚事务</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 释放资源</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>在<code>SqlMapper2.xml</code>添加代码:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">   <span class="token comment">&lt;!-- parameterType是参数类型,专门负责给sql语句传值 但是可以省略不写 --></span>   <span class="token comment">&lt;!-- resultType是查询结果集的类型,只有在select语句中才会有  --></span>   <span class="token comment">&lt;!--     parameterType = "简单类型",则parameter可以省略     resultType = "简单类型",不能省略.     什么是简单类型:17个     byte short int     long float double boolean char     Byte Short Integer Long Float Double Boolean Character String     --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getById<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       select       id as stuId, name as stuName, birth as stuBirth<span class="token comment">&lt;!-- 列名和javabean的属性名必须一致,不一致,使用别名       ,因为Student类的属性名和数据库中student表的属性名不一致--></span>       from       student       where       id = #&#123;11111111111&#125;   <span class="token comment">&lt;!-- 当一个sql语句的占位符只有一个,这个时候#&#123;这里的内容随意编写&#125; --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行代码:</p><p><img src="https://i.loli.net/2021/10/11/kOXJyNtu5znWKGM.png" alt="image-20211011095038657"></p><p>对比数据库:</p><p><img src="https://i.loli.net/2021/10/11/Mi7vk38jnh4KILl.png" alt="image-20211011095057221"></p><p><strong>查询所有:</strong></p><p>在MyBtisCRUD类中填加代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span> stuList <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token string">"getAll"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Student</span> s <span class="token operator">:</span> stuList<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getStuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>在<code>SqlMapper2.xml</code>添加代码:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select    id as stuId, name as stuName, birth as stuBirth    from    student<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行代码:</p><p><img src="https://i.loli.net/2021/10/11/CzD8yt6RXbhkWIm.png" alt="image-20211011095805305"></p><p>对比数据库:</p><p><img src="https://i.loli.net/2021/10/11/1h4NWDcKvA5fba2.png" alt="image-20211011095830920"></p><p><strong>删除数据:</strong></p><p>在MyBtisCRUD类中填加代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> count <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"deleteById"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>在<code>SqlMapper2.xml</code>添加代码:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteById<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    delete from student where id = #&#123;22222222222&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>运行代码:</p><p><img src="https://i.loli.net/2021/10/11/zCIaKfEhkur78F1.png" alt="image-20211011100038198"></p><p>对比数据库:</p><p><img src="https://i.loli.net/2021/10/11/IbUHGf8MVZpDvPW.png" alt="image-20211011100109682"></p><p>发现数据库中id为123的数据被删除.</p><p><strong>附上完整代码:</strong></p><p>MyBtisCRUD</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token comment">/** * 使用mybatis完成学生信息的增删改查（查一个/查所有） */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisCRUD</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/*             * String resource = "mybatis-config.xml"; InputStream inputStream =             * Resources.getResourceAsStream(resource); SqlSessionFactory             * factory = new SqlSessionFactoryBuilder().build(inputStream);             */</span>            <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"mybatis-config.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 开启事务</span>            sqlSession <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// do work</span>            <span class="token comment">// insert</span>            <span class="token comment">//Student stu = new Student();</span>            <span class="token comment">//stu.setStuId("123");</span>            <span class="token comment">//stu.setStuName("zhangsan2");</span>            <span class="token comment">//stu.setStuBirth("20211011");</span>            <span class="token comment">//int count = sqlSession.insert("save", stu); // 返回值是影响数据库表当中的记录条数。</span>            <span class="token comment">//System.out.println(count);</span>            <span class="token comment">// update</span>            <span class="token comment">/*Student stu = new Student();stu.setStuId("123");stu.setStuName("zhangsan3");stu.setStuBirth("20211012");int count = sqlSession.update("update", stu);System.out.println(count);*/</span>            <span class="token comment">// selectOne</span><span class="token comment">//Student stu = sqlSession.selectOne("getById", "123");</span><span class="token comment">//System.out.println(stu.getStuId());</span><span class="token comment">//System.out.println(stu.getStuName());</span><span class="token comment">//System.out.println(stu.getStuBirth());</span>            <span class="token comment">// selectList</span><span class="token comment">//List&lt;Student> stuList = sqlSession.selectList("getAll");</span><span class="token comment">//for(Student s : stuList)&#123;</span><span class="token comment">//System.out.println(s.getStuId());</span><span class="token comment">//&#125;</span>            <span class="token comment">// delete</span><span class="token keyword">int</span> count <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"deleteById"</span><span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 提交事务</span>            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 回滚事务</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 释放资源</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlSession <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>Student类:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>main</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> stuId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> stuName<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> stuBirth<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getStuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> stuId<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStuId</span><span class="token punctuation">(</span><span class="token class-name">String</span> stuId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>stuId <span class="token operator">=</span> stuId<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getStuName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> stuName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStuName</span><span class="token punctuation">(</span><span class="token class-name">String</span> stuName<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>stuName <span class="token operator">=</span> stuName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getStuBirth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> stuBirth<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStuBirth</span><span class="token punctuation">(</span><span class="token class-name">String</span> stuBirth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>stuBirth <span class="token operator">=</span> stuBirth<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong><code>mybatis-config.xml</code></strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span> <span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE configuration        PUBLIC <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token operator">></span><span class="token generics"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">></span></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 引入外部独立的资源文件 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>properties resource<span class="token operator">=</span><span class="token string">"jdbc.properties"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> mybatis的别名机制 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    <span class="token generics"><span class="token punctuation">&lt;</span>typeAliases<span class="token punctuation">></span></span>        <span class="token operator">&lt;</span>typeAlias type<span class="token operator">=</span><span class="token string">"com.codeanime.mybatis.main.Student"</span> alias<span class="token operator">=</span><span class="token string">"Student"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>typeAliases<span class="token operator">></span>     <span class="token operator">--</span><span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>typeAliases<span class="token punctuation">></span></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 使用<span class="token keyword">package</span>方式，那么该<span class="token keyword">package</span>包下的所有javabean会自动使用简类名作为别名。 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token keyword">package</span> <span class="token namespace">name</span><span class="token operator">=</span><span class="token string">"com.codeanime.mybatis.main"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>typeAliases<span class="token operator">></span>    <span class="token operator">&lt;</span>environments <span class="token keyword">default</span><span class="token operator">=</span><span class="token string">"development"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>environment id<span class="token operator">=</span><span class="token string">"development"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>transactionManager type<span class="token operator">=</span><span class="token string">"JDBC"</span> <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span>dataSource type<span class="token operator">=</span><span class="token string">"POOLED"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"driver"</span> value<span class="token operator">=</span><span class="token string">"$&#123;jdbc.driver&#125;"</span> <span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"url"</span> value<span class="token operator">=</span><span class="token string">"$&#123;jdbc.url&#125;"</span> <span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"username"</span> value<span class="token operator">=</span><span class="token string">"$&#123;jdbc.user&#125;"</span> <span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"password"</span> value<span class="token operator">=</span><span class="token string">"$&#123;jdbc.password&#125;"</span> <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>dataSource<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>environment<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>environments<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>mappers<span class="token punctuation">></span></span>        <span class="token operator">&lt;</span>mapper resource<span class="token operator">=</span><span class="token string">"SqlMapper2.xml"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>mappers<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong><code>SqlMapper2.xml</code></strong></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>111111111111111111111111<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>save<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into student        (id , name , birth)        values        (#&#123;stuId&#125; , #&#123;stuName&#125; , #&#123;stuBirth&#125;)    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>update<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        update student set        name = #&#123;stuName&#125; , birth = #&#123;stuBirth&#125;        where        id = #&#123;stuId&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- parameterType是参数类型,专门负责给sql语句传值 但是可以省略不写 --></span>    <span class="token comment">&lt;!-- resultType是查询结果集的类型,只有在select语句中才会有  --></span>    <span class="token comment">&lt;!--      parameterType = "简单类型",则parameter可以省略      resultType = "简单类型",不能省略.      什么是简单类型:17个      byte short int     long float double boolean char      Byte Short Integer Long Float Double Boolean Character String      --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getById<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select        id as stuId, name as stuName, birth as stuBirth<span class="token comment">&lt;!-- 列名和javabean的属性名必须一致,不一致,使用别名        ,因为Student类的属性名和数据库中student表的属性名不一致--></span>        from        student        where        id = #&#123;11111111111&#125;    <span class="token comment">&lt;!-- 当一个sql语句的占位符只有一个,这个时候#&#123;这里的内容随意编写&#125; --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select        id as stuId, name as stuName, birth as stuBirth        from        student    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteById<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        delete from student where id = #&#123;22222222222&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="三-别名机制"><a href="#三-别名机制" class="headerlink" title="三. 别名机制"></a>三. 别名机制</h2><p>在**<code>mybatis-config.xml</code>**里添加:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- mybatis的别名机制 --></span><span class="token comment">&lt;!--&lt;typeAliases>    &lt;typeAlias type="com.codeanime.mybatis.main.Student" alias="Student"/>&lt;/typeAliases> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 使用package方式，那么该package包下的所有javabean会自动使用简类名作为别名。 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.mybatis.main<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>然后**<code>SqlMapper2.xml</code>**中所有的parameterType可以写成包中的类名(默认)</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>111111111111111111111111<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>save<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into student        (id , name , birth)        values        (#&#123;stuId&#125; , #&#123;stuName&#125; , #&#123;stuBirth&#125;)    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>update<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Student<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        update student set        name = #&#123;stuName&#125; , birth = #&#123;stuBirth&#125;        where        id = #&#123;stuId&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- parameterType是参数类型,专门负责给sql语句传值 但是可以省略不写 --></span>    <span class="token comment">&lt;!-- resultType是查询结果集的类型,只有在select语句中才会有  --></span>    <span class="token comment">&lt;!--      parameterType = "简单类型",则parameter可以省略      resultType = "简单类型",不能省略.      什么是简单类型:17个      byte short int     long float double boolean char      Byte Short Integer Long Float Double Boolean Character String      --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getById<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select        id as stuId, name as stuName, birth as stuBirth<span class="token comment">&lt;!-- 列名和javabean的属性名必须一致,不一致,使用别名        ,因为Student类的属性名和数据库中student表的属性名不一致--></span>        from        student        where        id = #&#123;11111111111&#125;    <span class="token comment">&lt;!-- 当一个sql语句的占位符只有一个,这个时候#&#123;这里的内容随意编写&#125; --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select        id as stuId, name as stuName, birth as stuBirth        from        student    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteById<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        delete from student where id = #&#123;22222222222&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="四-使用maven模块创建mybatis项目"><a href="#四-使用maven模块创建mybatis项目" class="headerlink" title="四.使用maven模块创建mybatis项目"></a>四.使用maven模块创建mybatis项目</h2><ol start="0"><li><p>创建student表(id,name,email,age)</p> <div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 创建student表</span><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">,</span>email <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">,</span>age <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 插入一条数据</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>email<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span><span class="token string">"zhangsan"</span><span class="token punctuation">,</span><span class="token string">"zhangsan@163.com"</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>新建一个空项目</p></li><li><p>新建maven模块</p></li></ol><p><img src="https://i.loli.net/2021/10/11/Cu8VFhlUZTKHNmo.png" alt="image-20211011114825349"></p><p>创建完成之后是这样子的:</p><p><img src="https://i.loli.net/2021/10/11/5Wfsx4ibAgqR7Mm.png" alt="image-20211011115025524"></p><p>然后, 在main目录下新建文件夹resources, 删除默认创建的App类和App测试类AppTest</p><p>处理之后结构是这样的:</p><p><img src="https://i.loli.net/2021/10/11/UL8r3QG4HfWomdP.png" alt="image-20211011115453043"></p><p>整理<code>pom.xml</code>文件:</p><p>整理后的文件内容:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--坐标--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.codeanime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>project01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--依赖列表--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--单元测试--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ol start="3"><li><p>修改pom.xml文件</p><p>(1)加入mybatis依赖, mysql驱动,junit</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--依赖列表--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--单元测试--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- mybatis依赖 --></span>  <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- mysql驱动 --></span>  <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.46<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>(2)在<build>中加入资源插件</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--资源插件 处理src/main/java目录下的xml--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--所在的目录--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--包括目录下的.properties,.xml 文件都会扫描到--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  指定jdk版本的插件,可加可不加,因为在上面已经指定过jdk的版本   --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>完整pom.xml配置:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--坐标--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.codeanime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>project01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--依赖列表--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--单元测试--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- mybatis依赖 --></span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- mysql驱动 --></span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.46<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--资源插件 处理src/main/java目录下的xml--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--所在的目录--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--包括目录下的.properties,.xml 文件都会扫描到--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!--  指定jdk版本的插件,可加可不加,因为在上面已经指定过jdk的版本   --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>出国年间实体类Student, 定义属性,属性名和列名保持一致</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>domain</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> email<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token class-name">String</span> email<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> email<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"学生实体信息&#123;"</span> <span class="token operator">+</span>                <span class="token string">"id="</span> <span class="token operator">+</span> id <span class="token operator">+</span>                <span class="token string">", name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", email='"</span> <span class="token operator">+</span> email <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>创建Dao接口, 定义操作数据库方法</p><div class="code-wrapper"><pre class="line-numbers language-JAVA" data-language="JAVA"><code class="language-JAVA">package com.codeanime.dao;import com.codeanime.domain.Student;public interface StudentDao &#123;    &#x2F;&#x2F;查询一个学生    Student selectStudentById(Integer id);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>创建xml文件(mapper文件),写sql语句</p><p> mybatis框架是把sql语句和java代码分开</p><p> mapper文件:定义和dao接口在同一目录,一个表一个mapper文件</p></li></ol><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.dao.StudentDao<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!--    &lt;select id="selectBlog" resultType="Blog">--></span><span class="token comment">&lt;!--        select * from Blog where id = #&#123;id&#125;--></span><span class="token comment">&lt;!--    &lt;/select>--></span>    <span class="token comment">&lt;!--查询一个学生Student            &lt;select>: 表示查询操作,里面是select语句            id: 要执行的sql语句的唯一标识,是一个自定义的字符串                推荐使用dao接口中的方法名称            resultType: 告诉mybatis,执行sql语句,把数据赋值给那个类型的java对象                resultType的值现在使用的是java对象的全限定名称        --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectStudentById<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.domain.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select id,name,email,age from student where id=1001    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--    1.约束文件    http://mybatis.org/dtd/mybatis-3-mapper.dtd    约束文件的作用:    定义和限制当前文件中可以出现的标签和属性,以及标签出现的顺序    2.mapper是根标签        namespace: 命名空间,必须有值,不能为空,唯一值.                    推荐使用Dao接口的全限定名称.        作用: 参与识别sql语句的作用.     3.在mapper里面可以写&lt;insert>,&lt;update>,&lt;delete>,&lt;select>        &lt;insert>里面是insert语句,表示执行的insert操作        ...--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ol start="7"><li><p>创建mybatis的主配置文件(xml文件):有一个, 放在resources目录下</p><p>(1)定义创建连接实例的数据源(DataSource)对象</p><p>(2)指定其他mapper文件的位置</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token comment">&lt;!--配置数据源: 创建Connection对象--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!--driver:驱动的内容--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mysql.jdbc.Driver<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--                &lt;property name="driver" value="$&#123;driver&#125;"/>--></span>                <span class="token comment">&lt;!--连接数据库url--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc:mysql://localhost:3306/mybatis?useSSL=false<span class="token entity named-entity" title="&amp;">&amp;amp;</span>useUnicode=true<span class="token entity named-entity" title="&amp;">&amp;amp;</span>characterEncoding=utf-8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--                &lt;property name="url" value="$&#123;url&#125;"/>--></span>                <span class="token comment">&lt;!--用户名--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--                &lt;property name="username" value="$&#123;username&#125;"/>--></span>                <span class="token comment">&lt;!--密码--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>123456<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--                &lt;property name="password" value="$&#123;password&#125;"/>--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--指定其他mapper文件的位置:        指定其他的mapper文件目的是找到其他文件的sql语句    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--使用mapper的resource属性指定mapper文件的路径            这个路径是从target/classed路径开启的            使用注意:                resource="mapper文件的路径,只用 / 分割路径"                一个mapper resource指定一个mapper文件        --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com/codeanime/dao/StudentDao.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>创建测试的内容</p><p>使用main方法,测试mybatis访问数据库</p><p>也可以使用junit访问数据库</p><p>创建MyTest类测试:</p></li></ol><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//测试mybatis执行sql语句</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectStudentById</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//调用mybatis讴歌对象的方法,执行mapper文件中的sql语句</span>        <span class="token comment">//mybatis核心类:SqlSessionFactory</span>        <span class="token comment">//1.定义mybatis主配置文件的位置,从类路径开始相对路径</span>        <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>        <span class="token comment">//2.读取主配置文件,使用mybatis框架中的Resources类</span>        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>        <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//4.获取SqlSession对象</span>        <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//5.指定要执行的sql语句的id</span>        <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>        <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"selectStudentById"</span><span class="token punctuation">;</span>        <span class="token comment">//6.通过SqlSession的方法,执行sql语句</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis查询一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//7.关闭SqlSession对象</span>        session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行测试程序:</p><p><img src="https://i.loli.net/2021/10/11/QMHAf2mhTrbq5V3.png" alt="image-20211011185802779"></p><h2 id="五-mybatis概念"><a href="#五-mybatis概念" class="headerlink" title="五.mybatis概念"></a>五.mybatis概念</h2><h3 id="1-占位符"><a href="#1-占位符" class="headerlink" title="1.占位符"></a>1.占位符</h3><p>用一个占位符替换这个id</p><p><img src="https://i.loli.net/2021/10/11/nJYfLPbQDgWUSFm.png" alt="image-20211011192017960"></p><p>修改:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"> #&#123;studentId&#125;:占位符,表示从java程序中传入过来的数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectStudentById<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.domain.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select id,name,email,age from student where id = #&#123;studentId&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/11/Pui1xGdtZWJnOQ3.png" alt="image-20211011192643973"></p><div class="code-wrapper"><pre><code>在测试类里面添加一个方法2:</code></pre></div><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectStudentById2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//调用mybatis讴歌对象的方法,执行mapper文件中的sql语句</span>    <span class="token comment">//mybatis核心类:SqlSessionFactory</span>    <span class="token comment">//1.定义mybatis主配置文件的位置,从类路径开始相对路径</span>    <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>    <span class="token comment">//2.读取主配置文件,使用mybatis框架中的Resources类</span>    <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>    <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//4.获取SqlSession对象</span>    <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//5.指定要执行的sql语句的id</span>    <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>    <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"selectStudentById"</span><span class="token punctuation">;</span>    <span class="token comment">//6.通过SqlSession的方法,执行sql语句</span>    <span class="token class-name">Student</span> student <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//&lt;--------------修改,传入id的值为1001</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis查询一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//7.关闭SqlSession对象</span>    session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre><code>运行测试方法2:</code></pre></div><p><img src="https://i.loli.net/2021/10/11/xanqKyoAMPw8d9D.png" alt="image-20211011192827656"></p><h3 id="2-日志"><a href="#2-日志" class="headerlink" title="2.日志"></a>2.日志</h3><p>在配置文件mybatis.xml中添加日志配置:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logImpl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>STDOUT_LOGGING<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre><code>再运行测试方法2:</code></pre></div><p><img src="https://i.loli.net/2021/10/11/81OdSaHxpDY5VFT.png" alt="image-20211011193647664"></p><h3 id="3-事务"><a href="#3-事务" class="headerlink" title="3.事务"></a>3.事务</h3><p>(1)自动提交:当你的sql语句执行完毕后,提交事务,数据库更新操作直接保存数据</p><p>(2)</p><h4 id="3-1-在接口StudentDao中添加代码实现插入操作"><a href="#3-1-在接口StudentDao中添加代码实现插入操作" class="headerlink" title="3.1 在接口StudentDao中添加代码实现插入操作"></a>3.1 在接口StudentDao中添加代码实现插入操作</h4><p>接口中每一个方法对应一条sql语句</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//添加一个学生(返回值int表示本次操作影响的数据库行数)</span><span class="token keyword">int</span> <span class="token function">insertStudent</span><span class="token punctuation">(</span><span class="token class-name">Student</span> student<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h4 id="3-2-在mapper-StudentDao-xml-配置中添加代码"><a href="#3-2-在mapper-StudentDao-xml-配置中添加代码" class="headerlink" title="3.2 在mapper(StudentDao.xml)配置中添加代码"></a>3.2 在mapper(StudentDao.xml)配置中添加代码</h4><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--  添加insert  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insertStudent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    insert into student values(1002,"lisi","lisi@163.com",18)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="3-3-在MyTest类中添加测试方法insertStudent"><a href="#3-3-在MyTest类中添加测试方法insertStudent" class="headerlink" title="3.3 在MyTest类中添加测试方法insertStudent"></a>3.3 在MyTest类中添加测试方法insertStudent</h4><p>因为绝大多数代码都是重复的,所以可以直接复制上一个测试方法</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>    <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"insertStudent"</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rows <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis添加一个学生,rows = "</span><span class="token operator">+</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>    session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>执行测试方法:</p><p><img src="https://i.loli.net/2021/10/11/xrIvgqMZdHy194B.png" alt="image-20211011200645059"></p><p>测试方法执行成功,而且影响行数为:1</p><p>问题来了:</p><p>当检查数据库到底插入进去了没有时,</p><p><img src="https://i.loli.net/2021/10/11/AQhOSqae4KoIUrX.png" alt="image-20211011200844781"></p><p>发现没有,那么问题出在哪里,我们仔细观察刚才的日志,发现自动提交事务关闭了!</p><p><img src="https://i.loli.net/2021/10/11/RAosZIdT6BhMG28.png" alt="image-20211011200931167"></p><p>解决:</p><p>在测试方法中添加提交事务代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//mybatis默认执行sql语句是,手动提交事务模式,在左insert,delete,update时需要提交事务</span>session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>再次执行代码,并检查数据库:</p><p><img src="https://i.loli.net/2021/10/11/Ub3Nr2nz6HSOYVe.png" alt="image-20211011201347066"></p><p><img src="https://i.loli.net/2021/10/11/nraOceS8jMiIBVd.png" alt="image-20211011201415435"></p><p>成功!</p><p>insert语句使用占位符:</p><p>在测试分类MyTest中添加测试方法testInsertStudent2</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertStudent2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>    <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>    <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//4.获取SqlSession对象</span>    <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//5.指定要执行的sql语句的id</span>    <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>    <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"insertStudent2"</span><span class="token punctuation">;</span>    <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1003</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"wangwu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">"wangwu@163.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis插入一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rows <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">,</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//mybatis默认执行sql语句是,手动提交事务模式,在左insert,delete,update时需要提交事务</span>    session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//7.关闭SqlSession对象</span>    session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>在mapper配置文件(StudentDao.xml)中添加一条insert语句</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--  insert占位符    如果传入给mybatis是一个java对象,使用#&#123;属性名&#125; 获取属性的值    属性值放到 #&#123;&#125;占位符的位置,mybatis执行此属性对应的getxxx()    例如,#&#123;id&#125;,执行getId();  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insertStudent2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    insert into student values(#&#123;id&#125;,#&#123;name&#125;,#&#123;email&#125;,#&#123;age&#125;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>执行测试方法testInsertStudent2:</p><p><img src="https://i.loli.net/2021/10/11/pyOfcsZFI2WnMv1.png" alt="image-20211011203311335"></p><p>对比一下数据库:</p><p><img src="https://i.loli.net/2021/10/11/TdguKCDWMwkibpm.png" alt="image-20211011203549810"></p><h2 id="六-mybatis重要对象"><a href="#六-mybatis重要对象" class="headerlink" title="六.mybatis重要对象"></a>六.mybatis重要对象</h2><ol><li><p>Resources</p><p>mybatis框架中的对象,作用就是:读取主配置信息</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"mybatis.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>SqlSessionFactoryBuild</p><p>负责创建SqlSessionFactory对象</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>SqlSessionFactory</p><p><strong>重要对象!!!!!</strong></p><p>创建此对象需要更多的资源和时间.</p><p>在项目中有一个就可以了.</p><p>SqlSessionFactory是一个接口:作用是SqlSession的工厂,就是创建SqlSession对象.</p><p>DefaultSqlSessionFactory实现类</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultSqlSessionFactory</span> <span class="token keyword">implements</span> <span class="token class-name">SqlSessionFactory</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>SqlSessionFactory接口中的方法:</p><p>openSession():获取以恶搞默认的SqlSession对象,默认是手动提交事务的.</p><p>openSession(boolean): boolean参数表示是否提交事务</p><div class="code-wrapper"><pre><code>true: 创建一个自动提交事务的SqlSessionfalse: 等同于没有参数的openSession</code></pre></div><p>自动提交事务,例如:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertStudent2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>    <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>    <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//4.获取SqlSession对象</span>    <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//5.指定要执行的sql语句的id</span>    <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>    <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"insertStudent2"</span><span class="token punctuation">;</span>       <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1004</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"zhaoliu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">"zhaoliu@163.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis插入一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rows <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">,</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//mybatis默认执行sql语句是,手动提交事务模式,在左insert,delete,update时需要提交事务</span>    <span class="token comment">//session.commit();</span>          <span class="token comment">//7.关闭SqlSession对象</span>    session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>SqlSession对象</p><p>SqlSession是通过SqlSessionFactory获取的,SqlSession本事就是接口</p><p>DefaultSqlSession实现类</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultSqlSession</span> <span class="token keyword">implements</span> <span class="token class-name">SqlSession</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>SqlSession作用就是提供了大量的执行sql语句的方法</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">SelectOne</span><span class="token operator">:</span>执行sql语句<span class="token punctuation">,</span>最多得到一行记录<span class="token punctuation">,</span>多余<span class="token number">1</span>行是错误<span class="token class-name">SelectList</span><span class="token operator">:</span>执行sql语句<span class="token punctuation">,</span>可以返回多行数据<span class="token class-name">SelectMap</span><span class="token operator">:</span>执行sql语句<span class="token punctuation">,</span>得到一个<span class="token class-name">Map</span><span class="token class-name">Insert</span><span class="token operator">:</span>执行insert语句update<span class="token operator">:</span>执行update语句delete<span class="token operator">:</span>执行delete语句commit<span class="token operator">:</span>提交事务rollback<span class="token operator">:</span>回滚事务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>注意:</p><p>SqlSession对象不是线程安全的,使用的步骤:</p><p>①:在方法的内部,执行sql语句之前,先获取SqlSession对象</p><p>②:调用SqlSession的方法,执行sql语句</p><p>③:关闭SqlSession对象,执行SqlSession.close()</p><h2 id="七-属性配置文件"><a href="#七-属性配置文件" class="headerlink" title="七.属性配置文件"></a>七.属性配置文件</h2><p>在resources目录下新建<code>jdbc.properties</code>文件</p><p>内容:</p><div class="code-wrapper"><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">jdbc.driver</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span class="token attr-name">jdbc.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/mybatis?useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8"</span><span class="token attr-name">jdbc.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">jdbc.password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>修改mybatis配置文件<code>mybatis.xml</code></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  外部的属性配置文件          resource:指定类路径下的某个属性配置文件          因为:resources目录下的文件最中编译到target/classes根目录下的          classes是类目录的根          resource="jdbc.properties"指定的是classes目录下的某个文件      --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc.properties<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logImpl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>STDOUT_LOGGING<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token comment">&lt;!--配置数据源: 创建Connection对象--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!--driver:驱动的内容--></span><span class="token comment">&lt;!--                &lt;property name="driver" value="com.mysql.jdbc.Driver"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.driver&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!--连接数据库url--></span><span class="token comment">&lt;!--                &lt;property name="url" value="jdbc:mysql://localhost:3306/mybatis?useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.url&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!--用户名--></span><span class="token comment">&lt;!--                &lt;property name="username" value="root"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.username&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!--密码--></span><span class="token comment">&lt;!--                &lt;property name="password" value="123456"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.password&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--指定其他mapper文件的位置:        指定其他的mapper文件目的是找到其他文件的sql语句    --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行代码测试无误即可.</p><h2 id="八-完整的代码文件"><a href="#八-完整的代码文件" class="headerlink" title="八.完整的代码文件"></a>八.完整的代码文件</h2><p>结构:</p><p><img src="https://i.loli.net/2021/10/11/evCY2diwMlS63k5.png" alt="image-20211011220607863"></p></li></ol><p><code>pom.xml</code>:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--坐标--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.codeanime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>project01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--依赖列表--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--单元测试--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- mybatis依赖 --></span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- mysql驱动 --></span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.46<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--资源插件 处理src/main/java目录下的xml--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--所在的目录--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--包括目录下的.properties,.xml 文件都会扫描到--></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!--  指定jdk版本的插件,可加可不加,因为在上面已经指定过jdk的版本   --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>mybatis.xml</code>:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  外部的属性配置文件          resource:指定类路径下的某个属性配置文件          因为:resources目录下的文件最中编译到target/classes根目录下的          classes是类目录的根          resource="jdbc.properties"指定的是classes目录下的某个文件      --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc.properties<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logImpl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>STDOUT_LOGGING<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token comment">&lt;!--配置数据源: 创建Connection对象--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!--driver:驱动的内容--></span><span class="token comment">&lt;!--                &lt;property name="driver" value="com.mysql.jdbc.Driver"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.driver&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!--连接数据库url--></span><span class="token comment">&lt;!--                &lt;property name="url" value="jdbc:mysql://localhost:3306/mybatis?useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.url&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!--用户名--></span><span class="token comment">&lt;!--                &lt;property name="username" value="root"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.username&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!--密码--></span><span class="token comment">&lt;!--                &lt;property name="password" value="123456"/>--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;jdbc.password&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--指定其他mapper文件的位置:        指定其他的mapper文件目的是找到其他文件的sql语句    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--使用mapper的resource属性指定mapper文件的路径            这个路径是从target/classed路径开启的            使用注意:                resource="mapper文件的路径,只用 / 分割路径"                一个mapper resource指定一个mapper文件        --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com/codeanime/dao/StudentDao.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>StudentDao.xml(mapper)</code>:</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Mapper 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.dao.StudentDao<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!--    &lt;select id="selectBlog" resultType="Blog">--></span><span class="token comment">&lt;!--        select * from Blog where id = #&#123;id&#125;--></span><span class="token comment">&lt;!--    &lt;/select>--></span>    <span class="token comment">&lt;!--查询一个学生Student            &lt;select>: 表示查询操作,里面是select语句            id: 要执行的sql语句的唯一标识,是一个自定义的字符串                推荐使用dao接口中的方法名称            resultType: 告诉mybatis,执行sql语句,把数据赋值给那个类型的java对象                resultType的值现在使用的是java对象的全限定名称            #&#123;studentId&#125;:占位符,表示从java程序中传入过来的数据        --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectStudentById<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.codeanime.domain.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select id,name,email,age from student where id = #&#123;studentId&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  添加insert  --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insertStudent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into student values(1002,"lisi","lisi@163.com",18)    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  insert占位符        如果传入给mybatis是一个java对象,使用#&#123;属性名&#125; 获取属性的值        属性值放到 #&#123;&#125;占位符的位置,mybatis执行此属性对应的getxxx()        例如,#&#123;id&#125;,执行getId();      --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>insertStudent2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into student values(#&#123;id&#125;,#&#123;name&#125;,#&#123;email&#125;,#&#123;age&#125;)    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--    1.约束文件    http://mybatis.org/dtd/mybatis-3-mapper.dtd    约束文件的作用:    定义和限制当前文件中可以出现的标签和属性,以及标签出现的顺序    2.mapper是根标签        namespace: 命名空间,必须有值,不能为空,唯一值.                    推荐使用Dao接口的全限定名称.        作用: 参与识别sql语句的作用.     3.在mapper里面可以写&lt;insert>,&lt;update>,&lt;delete>,&lt;select>        &lt;insert>里面是insert语句,表示执行的insert操作        ...--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>jdbc.properties</code>:</p><div class="code-wrapper"><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">jdbc.driver</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span class="token attr-name">jdbc.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/mybatis?useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8"</span><span class="token attr-name">jdbc.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">jdbc.password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>StudentDao接口:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>dao</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">StudentDao</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//查询一个学生</span>    <span class="token class-name">Student</span> <span class="token function">selectStudentById</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//添加一个学生(返回值int表示本次操作影响的数据库行数)</span>    <span class="token keyword">int</span> <span class="token function">insertStudent</span><span class="token punctuation">(</span><span class="token class-name">Student</span> student<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>Student类:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>domain</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> email<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token class-name">String</span> email<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> email<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"学生实体信息&#123;"</span> <span class="token operator">+</span>                <span class="token string">"id="</span> <span class="token operator">+</span> id <span class="token operator">+</span>                <span class="token string">", name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", email='"</span> <span class="token operator">+</span> email <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>MyTest测试类:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Resources</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//测试mybatis执行sql语句</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectStudentById</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//调用mybatis讴歌对象的方法,执行mapper文件中的sql语句</span>        <span class="token comment">//mybatis核心类:SqlSessionFactory</span>        <span class="token comment">//1.定义mybatis主配置文件的位置,从类路径开始相对路径</span>        <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>        <span class="token comment">//2.读取主配置文件,使用mybatis框架中的Resources类</span>        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>        <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//4.获取SqlSession对象</span>        <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//5.指定要执行的sql语句的id</span>        <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>        <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"selectStudentById"</span><span class="token punctuation">;</span>        <span class="token comment">//6.通过SqlSession的方法,执行sql语句</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis查询一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//7.关闭SqlSession对象</span>        session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectStudentById2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//调用mybatis讴歌对象的方法,执行mapper文件中的sql语句</span>        <span class="token comment">//mybatis核心类:SqlSessionFactory</span>        <span class="token comment">//1.定义mybatis主配置文件的位置,从类路径开始相对路径</span>        <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>        <span class="token comment">//2.读取主配置文件,使用mybatis框架中的Resources类</span>        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>        <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//4.获取SqlSession对象</span>        <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//5.指定要执行的sql语句的id</span>        <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>        <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"selectStudentById"</span><span class="token punctuation">;</span>        <span class="token comment">//6.通过SqlSession的方法,执行sql语句</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis查询一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//7.关闭SqlSession对象</span>        session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"insertStudent"</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rows <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis添加一个学生,rows = "</span><span class="token operator">+</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//mybatis默认执行sql语句是,手动提交事务模式,在左insert,delete,update时需要提交事务</span>        session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertStudent2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"mybatis.xml"</span><span class="token punctuation">;</span>        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.创建SqlSessionFactory对象,使用SqlSessionFactoryBuild类</span>        <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//4.获取SqlSession对象</span>        <span class="token class-name">SqlSession</span> session <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//5.指定要执行的sql语句的id</span>        <span class="token comment">//   sql的id = nameSpace+"."+select|update|insert|delete标签的id属性值</span>        <span class="token class-name">String</span> sqlId <span class="token operator">=</span> <span class="token string">"com.codeanime.dao.StudentDao"</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token string">"insertStudent2"</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        student<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1003</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        student<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"wangwu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        student<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">"wangwu@163.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用mybatis插入一个学生:"</span><span class="token operator">+</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rows <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>sqlId<span class="token punctuation">,</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//mybatis默认执行sql语句是,手动提交事务模式,在左insert,delete,update时需要提交事务</span>        session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//7.关闭SqlSession对象</span>        session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>MyBatis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>MyBatis</tag>
      
      <tag>mybatis</tag>
      
      <tag>maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Maven小记</title>
    <link href="/Maven%E5%B0%8F%E8%AE%B0.html"/>
    <url>/Maven%E5%B0%8F%E8%AE%B0.html</url>
    
    <content type="html"><![CDATA[<h1 id="Maven小记"><a href="#Maven小记" class="headerlink" title="Maven小记"></a>Maven小记</h1><h2 id="一-Maven简介"><a href="#一-Maven简介" class="headerlink" title="一.Maven简介"></a>一.Maven简介</h2><p><strong>Maven</strong>是由Apache开发的一个工具<strong>软件</strong>。用来<strong>管理java项目</strong>，<strong>依赖管理</strong>(jar包的管理)，<strong>项目构建</strong>.</p><h2 id="二-Maven的作用"><a href="#二-Maven的作用" class="headerlink" title="二.Maven的作用"></a>二.Maven的作用</h2><p>Maven的作用可以分成三类:</p><ul><li><p>项目构建</p></li><li><p>依赖管理</p></li><li><p>统一开发结构</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">HelloMaven</span><span class="token punctuation">(</span><span class="token class-name">Maven</span>工程的根目录，目录名可以自定义<span class="token punctuation">)</span><span class="token operator">|</span><span class="token operator">--</span> pom<span class="token punctuation">.</span><span class="token function">xml</span><span class="token punctuation">(</span><span class="token class-name">Maven</span>工程的核心配置文件<span class="token punctuation">)</span><span class="token operator">|</span><span class="token operator">--</span> <span class="token function">src</span><span class="token punctuation">(</span>存放源码的目录<span class="token punctuation">)</span>    <span class="token operator">|</span><span class="token operator">--</span> <span class="token function">main</span><span class="token punctuation">(</span>主程序，简单来说就是我们写的非测试代码<span class="token punctuation">)</span>    <span class="token operator">|</span>   <span class="token operator">|</span><span class="token operator">--</span> <span class="token function">java</span><span class="token punctuation">(</span>主程序的<span class="token class-name">Java</span>代码<span class="token punctuation">)</span>    <span class="token operator">|</span>   <span class="token operator">|</span><span class="token operator">--</span> <span class="token function">resources</span><span class="token punctuation">(</span>主程序的配置文件，xml文件，properties文件等<span class="token punctuation">)</span>    <span class="token operator">|</span><span class="token operator">--</span> <span class="token function">test</span><span class="token punctuation">(</span>测试程序<span class="token punctuation">)</span>        <span class="token operator">|</span><span class="token operator">--</span> <span class="token function">java</span><span class="token punctuation">(</span>测试程序的<span class="token class-name">Java</span>代码<span class="token punctuation">)</span>        <span class="token operator">|</span><span class="token operator">--</span> <span class="token function">resources</span><span class="token punctuation">(</span>测试程序的配置文件，xml文件，properties文件等<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h2 id="三-Maven环境搭建"><a href="#三-Maven环境搭建" class="headerlink" title="三.Maven环境搭建"></a>三.Maven环境搭建</h2><h3 id="3-1-下载maven压缩包"><a href="#3-1-下载maven压缩包" class="headerlink" title="3.1,下载maven压缩包"></a>3.1,下载maven压缩包</h3><p>maven官网:<a href="https://maven.apache.org/">https://maven.apache.org/</a></p><p>maven下载地址:<a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a></p><p>我下的<code>.zip</code>的</p><p><img src="https://i.loli.net/2021/10/10/eBqnSxKiQNX9rlv.png" alt="image-20211009091852503"></p><p>下载下来解压即可.</p><p>各目录的作用:</p><p>bin：可执行程序目录，</p><p>boot：maven自身的启动加载器</p><p>conf：maven配置文件的存放目录</p><p>lib：maven运行所需库的存放目录</p><h2 id="3-2-配置环境变量"><a href="#3-2-配置环境变量" class="headerlink" title="3.2,配置环境变量"></a>3.2,配置环境变量</h2><p>配置<code>JAVA_HOME</code>—你的java安装目录</p><p><img src="https://i.loli.net/2021/10/10/zMGaXPB8xKEFsCU.png" alt="image-20211009092614772"></p><p>配置maven环境变量:在系统变量—Path—配置你的maven的<strong>bin目录</strong></p><p><img src="https://i.loli.net/2021/10/10/fY5qGVQEid1HSrW.png" alt="image-20211009092507066"></p><p>测试配置后的结果:—cmd–<code>mvn -v</code></p><p><img src="https://i.loli.net/2021/10/10/SwDi5K89WMBXNRT.png" alt="image-20211009092936716"></p><p>出现一堆信息表示配置成功.</p><h2 id="四-Maven核心概念"><a href="#四-Maven核心概念" class="headerlink" title="四.Maven核心概念"></a>四.Maven核心概念</h2><h3 id="4-1-仓库"><a href="#4-1-仓库" class="headerlink" title="4.1 仓库"></a>4.1 仓库</h3><p>仓库:用于存储资源，主要是各种jar包</p><p>maven仓库可以分为两种:本地仓库和远程仓库.</p><p>**本地仓库:**开发者自己电脑上存储资源的仓库，也可从远程仓库获取资源</p><p>**远程仓库:**可以分为中央仓库和私服</p><ul><li>中央仓库:maven团队维护的仓库, <a href="https://mvnrepository.com/">仓库地址</a></li><li>私服:各公司/部门等小范围内存储资源的仓库，私服也可以从中央仓库获取资源</li></ul><h3 id="4-2-坐标"><a href="#4-2-坐标" class="headerlink" title="4.2 坐标"></a>4.2 坐标</h3><p><strong>坐标元素:</strong></p><ul><li><p>groupId : 定义当前Maven项目组织名称（通常是域名反写，如：org.mybatis；）</p></li><li><p>artifactId : 定义实际项目名称</p></li><li><p>version : 定义当前项目的当前版本或者是所依赖的jar包的版本</p></li></ul><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.codeanime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>HelloMaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><strong>坐标的作用:</strong></p><p>使用唯一标识，唯一性定义资源位置，通过该标识可以将资源的识别与下载工作交由机器完成</p><h3 id="4-3-生命周期"><a href="#4-3-生命周期" class="headerlink" title="4.3 生命周期"></a>4.3 生命周期</h3><p>Maven生命周期就是为了对所有的构建过程进行抽象和统一。包括项目清理、初始化、编译、打包、测 试、部署等几乎所有构建步骤。生命周期可以理解为构建工程的步骤。</p><p><strong>maven生命周期（项目构建的过程）：</strong></p><p>对项目进行清理、编译、测试、报告、打包、安装、部署上传到私服的过程。</p><p><strong>清理</strong>（mvn clean）：它删除在构建编译和测试时在项目目录中生成target目录的文件。但是已经install到仓库里的包不会删除。<br><strong>编译</strong>（mvn compile）：maven可以批量的把程序源代码编译为执行代码（.java编译成.class），maven可以同时把成千上百的文件编译为class，javac不一样，javac一次编译一个文件。在pom.xml同级目录下生成target目录存放主程序编译之后的.class字节码文件。<br><strong>测试编译</strong>（mvn test-compile）：maven可以批量的同时执行测试程序代码以及测试功能，验证功能正确性，在pom.xml目录下生成target目录存放主程序编译之后的.class字节码文件。<br><strong>测试</strong>（mvn test）：maven可以批量的同时测试很多功能，在pom.xml同级目录下生成surefire-reports目录，保存测试结果。<br><strong>报告</strong>：生成测试结果的文件存放在surefire-reports目录，测试通过没有。<br><strong>打包</strong>（mvn package）：把你的项目中src/main/java目录下所有的.class文件，src/main/resources目录下配置文件等所有资源放到一个压缩文件中。这个压缩文件就是项目的结果文件，通常java程序，压缩文件是.jar扩展名的。对于web应用，压缩文件扩展名是.war。总而言之，会把编译、编译测试、测试、并且按照pom.xml配置把主程序打包生成jar包或者war包。<br><strong>安装</strong>（mvn install）：把打包（mvn package）中生成的文件jar、war安装到本地仓库。会把本工程打包，并且按照本工程的项目坐标（三个参数）保存到本地仓库中。<br><strong>部署</strong>（mvn deploy）：程序安装后可以执行，把本工程打包，按照本项目工程的项目坐标（三个参数）保存到本地仓库中，并且还会保存到私服仓库中以及自动把项目部署到web容器中。<br><strong>注意:执行以上命令必须在命令行进入pom.xml所在目录！</strong></p><p>常用命令:         </p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mvn -version         查看maven的版本及配置信息mvn compile          编译项目代码mvn package          打包项目mvn test             运行单元测试mvn clean            清除编译产生的target文件夹内容，可以配合相应命令一起使用，如mvn clean package， mvn clean testmvn install          打包后将其安装在本地仓库mvn deploy           打包后将其安装到pom文件中配置的远程仓库mvn site             生成站点目录  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="4-4-pom文件"><a href="#4-4-pom文件" class="headerlink" title="4.4 pom文件"></a>4.4 pom文件</h3><p><strong><code> pom.xml</code>是maven的核心文件，是maven的灵魂。</strong></p><p><code>pom.xml</code>结构说明:</p><h4 id="4-41-modelVersion"><a href="#4-41-modelVersion" class="headerlink" title="4.41 modelVersion"></a>4.41 modelVersion</h4><p>Maven模型的版本，对于Maven2和Maven3来说，它只能是4.0.0</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="4-42-groupid"><a href="#4-42-groupid" class="headerlink" title="4.42 groupid"></a>4.42 groupid</h4><p>组织id,一般是公司域名的倒写:</p><p>例如:<code>com.baidu</code>或者<code>com.baidu.project</code></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baidu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baidu.project<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h4 id="4-43-artifactId"><a href="#4-43-artifactId" class="headerlink" title="4.43 artifactId"></a>4.43 artifactId</h4><p>项目名称，也是模块名称，对应groupId中项目中的子项目</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>projectname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="4-44-version"><a href="#4-44-version" class="headerlink" title="4.44 version"></a>4.44 version</h4><p>项目版本号。如果项目还在开发中，是不稳定版本,通常在版本后带-SNAPSHOT，version使用三位数字标识，例如1.0.1</p><h4 id="4-45-gav"><a href="#4-45-gav" class="headerlink" title="4.45 gav"></a>4.45 gav</h4><p>groupId、artifactId、version三个元素合并在一起统称为项目坐标，项目坐标具有唯一性，称之为唯一值，在互联网中唯一标识一个项目的，在中央仓库中就是根据项目坐标的唯一值，在资源库中搜索下载相应的jar包</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>公司域名的倒序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>项目名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>版本号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>假如,获取<code>mysql5.0.8</code>连接驱动，必须在pom.xml中声明mysql连接驱动在仓库中唯一性项目坐标搜索下载jar包。打开地址：<a href="https://mvnrepository.com/%EF%BC%8C%E9%94%AE%E5%85%A5mysql%E5%85%B3%E9%94%AE%E5%AD%97%E6%89%BE%E5%88%B0%E5%AF%B9%E5%BA%94%E7%89%88%E6%9C%AC%E3%80%82">https://mvnrepository.com/，键入mysql关键字找到对应版本。</a></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.0.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/10/WBlxRAivmhJgMt6.png" alt="image-20211009104129229"></p><h4 id="4-46-packaging"><a href="#4-46-packaging" class="headerlink" title="4.46 packaging"></a>4.46 packaging</h4><p>项目打包的类型，可以是jar、rar、ear、pom，web应用是war， packaging可以不写，默认是jar</p><h4 id="4-47-依赖（dependencies和dependency）"><a href="#4-47-依赖（dependencies和dependency）" class="headerlink" title="4.47 依赖（dependencies和dependency）"></a>4.47 依赖（dependencies和dependency）</h4><p>项目中要使用的各种资源说明，比我的项目要使用mysql驱动，Maven的一个重要作用就是管理jar包，为了一个项目可以构建或运行，项目中不可避免的，会依赖很多其他的jar包，在 Maven中，这些jar就被称为依赖，使用标签dependency来配置。而这种依赖的配置正是通过坐标来定位的，由此我们也不难看出，maven把所有的jar包也都视为项目存在了</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--  依赖 相当于java代码中的 import --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.0.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>          <span class="token comment">&lt;!--单元测试程序的依赖 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="4-48-properties"><a href="#4-48-properties" class="headerlink" title="4.48 properties"></a>4.48 properties</h4><p>properties是用来定义一些配置属性的，例如project.build.sourceEncoding(项目构建源码编码方式)，可以设置为UTF-8，防止中文乱码，也可定义相关构建版本号，便于日后统一升级</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--配置属性 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--构建源码编码方式 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--jdk版本 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--maven构建版本号 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="4-49-bulid"><a href="#4-49-bulid" class="headerlink" title="4.49 bulid"></a>4.49 bulid</h4><p>表示与构建相关的配置，例如设置编译插件的jdk版本、插件配置等。</p><p>例如，使用maven项目骨架快速创建java项目时，会自动生成一堆的maven生命周期的插件，都放在build中：</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginManagement</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-clean-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-resources-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.22.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-jar-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-install-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.5.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-deploy-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.8.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-site-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.7.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-project-info-reports-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginManagement</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="4-5-Maven命令和插件"><a href="#4-5-Maven命令和插件" class="headerlink" title="4.5 Maven命令和插件"></a>4.5 Maven命令和插件</h3><p>maven命令：maven独立使用，通过命令，完成maven的生命周期的执行。maven可以使用命令，完成项目的清理，编译，测试等等</p><p>maven的插件：maven命令执行时，真正完成功能的是插件，插件是一些jar文件，一些类</p><h3 id="4-6-单元测试junit"><a href="#4-6-单元测试junit" class="headerlink" title="4.6 单元测试junit"></a>4.6 单元测试junit</h3><p>单元测试：用的是junit，是一个专门测试的框架（工具)</p><p>junit测试内容：测试的是类中的方法，每一个方法都是独立测试的。方法是测试的基本单位(单元)</p><p>maven借助单元测试，批量测试类中的大量方法是否符合预期的</p><p><strong>使用:</strong></p><p>(1)在pom.xml中加入依赖</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--单元测试程序的依赖 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="五-Maven项目搭建"><a href="#五-Maven项目搭建" class="headerlink" title="五.Maven项目搭建"></a>五.Maven项目搭建</h2><h3 id="5-1-仓库配置"><a href="#5-1-仓库配置" class="headerlink" title="5.1 仓库配置"></a>5.1 仓库配置</h3><p>我们要在自己的电脑上开发,那么首先就是要配置本地仓库</p><p>在maven的配置文件<code>conf/settings.xml</code>中可以找到它的说明</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- localRepository  | The path to the local repository maven will use to store artifacts.  |  | Default: $&#123;user.home&#125;/.m2/repository &lt;localRepository>/path/to/local/repo&lt;/localRepository> --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>修改为:</p><p><img src="https://i.loli.net/2021/10/10/fuRnTwCq7xlYUcX.png" alt="image-20211009100327288"></p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- localRepository   | The path to the local repository maven will use to store artifacts.   |   | Default: $&#123;user.home&#125;/.m2/repository  &lt;localRepository>/path/to/local/repo&lt;/localRepository>  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">></span></span>E:\maven-repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="5-2-Maven项目搭建"><a href="#5-2-Maven项目搭建" class="headerlink" title="5.2 Maven项目搭建"></a>5.2 Maven项目搭建</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">HelloMaven</span>                <span class="token comment">//项目文件夹</span>\src\main            <span class="token comment">//主程序目录(完成项目功能的代码和配置文件)</span>    \java        <span class="token comment">//源代码(包和相关的类定义)</span>    \resources    <span class="token comment">//配置文件</span>    \test            <span class="token comment">//放置测试程序代码的</span>    \java        <span class="token comment">//测试代码(junit)</span>    \resources      <span class="token comment">//测试程序需要的配置文件</span>    \pom<span class="token punctuation">.</span>xml                <span class="token comment">//maven的配置文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="5-2-1-手动搭建maven项目"><a href="#5-2-1-手动搭建maven项目" class="headerlink" title="5.2.1 手动搭建maven项目"></a>5.2.1 手动搭建maven项目</h3><p>（1）在E盘下创建目录MavenProject并进入该目录，作为我们的操作目录</p><p>（2）创建我们的maven项目，创建一个目录project-java作为我们的项目文件夹，并进入到该目录</p><p>（3）创建java代码（源代码）所在目录，即创建src/main/java</p><p>（4）创建配置文件所在目录，即创建src/main/resources</p><p>（5）创建测试源代码所在目录，即创建src/test/java</p><p>（6）创建测试存放配置文件存放目录，即src/test/resources</p><p>（7）在src/main/java中创建一个包（注意在windos文件夹下就是创建目录）com/codeanime，在该目录下创建<code>HelloMaven.java</code>文件，作为演示所需java程序，内容如下:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloMaven</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">HelloMaven</span> hm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloMaven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> hm<span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"在main方法中执行addNumber方法"</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span> n1<span class="token punctuation">,</span><span class="token keyword">int</span> n2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloMaven--addNumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> n1<span class="token operator">+</span>n2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>（8）在src/test/java中创建一个测试包（目录）com/codeanime，在该包下创建测试程序<code>TestHelloMaven.java</code></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Assert</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestHelloMaven</span><span class="token punctuation">&#123;</span>    <span class="token comment">//定义多个独立的测试方法,每个方法都是独立的</span>    <span class="token annotation punctuation">@test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAddNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行测试方法testAddNumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HelloMaven</span> hm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloMaven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> hm<span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//把计算结果result交给junit判断</span>        <span class="token comment">//期望值,实际值</span>        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>(9）在project-java/src下创建pom.xml文件，编辑如下</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span>    <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>     <span class="token comment">&lt;!--父工程--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.codeanime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>project-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--    导入依赖--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--    junit--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>通过前面的操作，我们已经搭建好了maven的项目结构，下面要通过maven来构建我们的项目</p><p>maven的构建命令以mvn开头，后面添加功能参数，可以一次性执行多个命令，用空格分离</p><p>mvn compile：编译</p><p>mvn clean：清理</p><p>mvn test：测试</p><p>mvn package：打包</p><p>mvn install：安装到本地仓库</p><p>下面我们来进行操作：</p><p>（1）进入priject-java目录(目录中有src和pom.xml)运行cmd,执行命令<code>mvn compile</code>:</p><p>第一次运行maven会下载很多东西</p><p><img src="https://i.loli.net/2021/10/10/wlmDds1x8H4Fkzn.png" alt="image-20211009170152974"></p><p>出现<code>BUILD SUCESS</code>说明成功:</p><p><img src="https://i.loli.net/2021/10/10/ZPRnOG5urwpTy7i.png" alt="image-20211009170231412"></p><p>编译完成后在项目<code>project-java</code>下多了一个目录<code>target</code>，在这个目录下就存放的是maven编译好的一些东西</p><p><img src="https://i.loli.net/2021/10/10/W1HUgv8yckieflO.png" alt="image-20211009171144174"></p><p>我们可以进入到target目录查看</p><p>其中生成的classes目录就是编译好的字节码文件</p><p>（2）当然如果我们想清理掉这些东西，我们只需执行mvn clean命令即可，清理掉后target目录也就消失了</p><p><img src="https://i.loli.net/2021/10/10/tVGzFveUdPnHf4E.png" alt="image-20211009171849570"></p><p><img src="https://i.loli.net/2021/10/10/VsDouiAyJ6XwWde.png" alt="image-20211009171907473"></p><p>（3）如果我们要执行测试包中的测试程序，我们只需执行mvn test命令即可</p><p><img src="https://i.loli.net/2021/10/10/xauSQX3EryhAMzW.png" alt="image-20211009171957253"></p><p>期望值和实际值一致,则正常编译执行</p><p><img src="https://i.loli.net/2021/10/10/OlQ4StqVc3kYfuH.png" alt="image-20211009172035674"></p><p>如果把程序中期望值改为其他的:</p><p>例如:</p><p><img src="https://i.loli.net/2021/10/10/OnhJYuCvQ6VxL7E.png" alt="image-20211009172136801"></p><p>则会抛出异常.</p><p>(4）使用<code>mvn package</code>命令进行打包，如下</p><p><img src="https://i.loli.net/2021/10/10/leRmpWiLhDvOaIF.png" alt="image-20211009172651504"></p><p>在生成的<code>target</code>目录中可以看到打包的结果<img src="https://i.loli.net/2021/10/10/Xol5QD6C47AHt1i.png" alt="image-20211009172704400"></p><p>当然，如果仔细看DOS窗口输出的我们会发现，<code>mvn package</code>命令的时候maven会把前面两个命令<code>mvn compile,mvn test</code>都执行一遍</p><p>(5）使用<code>mvn install</code>命令进行安装，将项目打好的包存入本地仓库</p><p><img src="https://i.loli.net/2021/10/10/P4xFAyLepaYDcGE.png" alt="image-20211009172809262"></p><p>仔细查看输出会发现mvn install命令执行的时候也会将前面的命令都执行一遍</p><p>此时我们可以去本地仓库中查找</p><p>maven是按照<code>groupId/artifactId/version</code>的结构在本地仓库进行存储</p><p><img src="https://i.loli.net/2021/10/10/Ki7MX6ysnabW5kB.png" alt="image-20211009172916138"></p><h3 id="5-2-2-IDEA工具搭建maven项目"><a href="#5-2-2-IDEA工具搭建maven项目" class="headerlink" title="5.2.2 IDEA工具搭建maven项目"></a>5.2.2 IDEA工具搭建maven项目</h3><p>前面学习的基本都是通过命令来构建和管理项目，但是这在实际开发过程中基本不常用，常用的是通过相关IDE工具来进行项目的构建和管理，因此我们使用IDEA工具进行maven项目的搭建</p><p>需要注意的是：Maven和IDEA在版本上存在一些兼容性问题，因为要合理的选择Maven和IDEA的版本，本课程中提供安装maven-3.6.1版本是可用的</p><p><img src="https://i.loli.net/2021/10/10/6KFOuI1GfcVS7RJ.png" alt="image-20211010083634827"></p><p><img src="https://i.loli.net/2021/10/10/VbahGu6JmOsSgZ9.png" alt="image-20211010083953518"></p><p><code>-DarchetypeCatalog=internal</code></p><p>maven 创建项目时,会从网络中下载一个archetype-catelog.xml作为项目模版文件,加上<code>-DarchetypeCatalog=internal</code>告诉maven创建项目时不要下载这个文件,加快创建maven项目的速度.</p><p>然后在设置这个,作用是对新建的或者导入的项目也使用同样的maven设置</p><p><img src="https://i.loli.net/2021/10/10/2Aw4HQcC8gebTfi.png" alt="image-20211010084612788"></p><p>设置跟刚才一样</p><p><img src="https://i.loli.net/2021/10/10/vMcd5g1amjIx9LF.png" alt="image-20211010085108710"></p><p><img src="https://i.loli.net/2021/10/10/Guf6i5WVIkRF7dN.png" alt="image-20211010085241690"></p><p>创建maven模块</p><p><img src="https://i.loli.net/2021/10/10/iPw9QbpUxtdaOTv.png" alt="image-20211010085548600"></p><p><img src="https://i.loli.net/2021/10/10/udf3nQUZiy4hwDA.png" alt="image-20211010085741252"></p><p><img src="https://i.loli.net/2021/10/10/bABV2gkQ9qc7He6.png" alt="image-20211010090038446"></p><p>加载完毕即可</p><p><img src="https://i.loli.net/2021/10/10/cs7CKqZrym4FDih.png" alt="image-20211010090310932"></p><p>创建好的maven目录</p><p><img src="https://i.loli.net/2021/10/10/6qfwBalQyiSkDoF.png" alt="image-20211010090451143"></p><p>那么如何使用maven呢</p><p>首先,编写java程序:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloMaven</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span> n1<span class="token punctuation">,</span><span class="token keyword">int</span> n2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> n1<span class="token operator">+</span>n2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HelloMaven</span> helloMaven <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloMaven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> helloMaven<span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"result = "</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>执行测试一下:</p><p><img src="https://i.loli.net/2021/10/10/hn9rvZqVUG2HFmI.png" alt="image-20211010091400326"></p><p>编写测试代码:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>codeanime</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Assert</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestHelloMaven</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAddNumber1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testAddNumber1正在运行中-----------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HelloMaven</span> helloMaven <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloMaven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> helloMaven<span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAddNumber2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"testAddNumber2正在运行中============="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HelloMaven</span> helloMaven <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloMaven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> helloMaven<span class="token punctuation">.</span><span class="token function">addNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/10/6d41Bhv2VO8n7Kz.png" alt="image-20211010091958024"></p><p>如果期望值和实际值不一样,则会抛出异常:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/10/12sTmMfX7vAWhtk.png" alt="image-20211010092216676"></p><p>maven使用技巧:</p><p>点击最右侧maven窗口:</p><p><img src="https://i.loli.net/2021/10/10/gCP1DUKS4RO3Vfh.png" alt="image-20211010092650290"></p><p>可以使用和命令行一样的功能,至此,maven先学到这里了!</p>]]></content>
    
    
    <categories>
      
      <category>Maven</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java多线程--sleep()方法小记</title>
    <link href="/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B-sleep-%E6%96%B9%E6%B3%95%E5%B0%8F%E8%AE%B0.html"/>
    <url>/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B-sleep-%E6%96%B9%E6%B3%95%E5%B0%8F%E8%AE%B0.html</url>
    
    <content type="html"><![CDATA[<h3 id="Java多线程–sleep-方法小记"><a href="#Java多线程–sleep-方法小记" class="headerlink" title="Java多线程–sleep()方法小记"></a>Java多线程–sleep()方法小记</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">Thread01</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestThread01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//这段代码会让线程t进入休眠吗?</span>            t<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//在执行的时候回转换成Thread.sleep(1000 * 5)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//作用:让当前线程进入休眠,也就是main线程</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//sleep()方法为静态方法</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello Thread!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"----->"</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h4><p>五秒后打印<code>Hello Thread!</code></p><p><img src="https://i.loli.net/2021/10/06/Bc18GZdQfw5sELN.png" alt="image-20210930173558089"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>多线程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java线程安全问题-模拟对同一银行账户进行取款</title>
    <link href="/Java%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98-%E6%A8%A1%E6%8B%9F%E5%AF%B9%E5%90%8C%E4%B8%80%E9%93%B6%E8%A1%8C%E8%B4%A6%E6%88%B7%E8%BF%9B%E8%A1%8C%E5%8F%96%E6%AC%BE.html"/>
    <url>/Java%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98-%E6%A8%A1%E6%8B%9F%E5%AF%B9%E5%90%8C%E4%B8%80%E9%93%B6%E8%A1%8C%E8%B4%A6%E6%88%B7%E8%BF%9B%E8%A1%8C%E5%8F%96%E6%AC%BE.html</url>
    
    <content type="html"><![CDATA[<h3 id="Java线程安全问题-模拟对同一银行账户进行取款"><a href="#Java线程安全问题-模拟对同一银行账户进行取款" class="headerlink" title="Java线程安全问题-模拟对同一银行账户进行取款"></a>Java线程安全问题-模拟对同一银行账户进行取款</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">ThreadSafe</span><span class="token punctuation">;</span><span class="token comment">/** * 银行账户 * 不适用线程同步机制,多线程对同一个账户进行取款,出现线程安全问题 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Account</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> actNo<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> balance<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token class-name">String</span> actNo<span class="token punctuation">,</span> <span class="token keyword">double</span> balance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>actNo <span class="token operator">=</span> actNo<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getActNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> actNo<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setActNo</span><span class="token punctuation">(</span><span class="token class-name">String</span> actNo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>actNo <span class="token operator">=</span> actNo<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBalance</span><span class="token punctuation">(</span><span class="token keyword">double</span> balance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//取款方法</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token keyword">double</span> money<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//取款之前的余额</span>        <span class="token keyword">double</span> before <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//取款之后的余额</span>        <span class="token keyword">double</span> after <span class="token operator">=</span> before<span class="token operator">-</span>money<span class="token punctuation">;</span>        <span class="token comment">//如果加上这段模拟网络延迟,一定会出问题</span>        <span class="token comment">//try &#123;</span>            <span class="token comment">//Thread.sleep(1000);</span>        <span class="token comment">//&#125; catch (InterruptedException e) &#123;</span>            <span class="token comment">//e.printStackTrace();</span>        <span class="token comment">//&#125;</span>        <span class="token comment">//更新余额</span>        <span class="token comment">//思考:t1执行到这里,但还没来得及执行这行代码,t2线程进来执行了withdraw方法,此时会发生问题.</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setBalance</span><span class="token punctuation">(</span>after<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">ThreadSafe</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AccountThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">&#123;</span>    <span class="token comment">//两个线程必须共享同一个账户对象</span>    <span class="token keyword">private</span> <span class="token class-name">Account</span> act<span class="token punctuation">;</span>    <span class="token comment">//通过构造方法传递过来账户对象</span>    <span class="token keyword">public</span> <span class="token class-name">AccountThread</span><span class="token punctuation">(</span><span class="token class-name">Account</span> act<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>act <span class="token operator">=</span> act<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//run方法的执行表示取款操作,假设存款有5000块</span>        <span class="token keyword">double</span> money <span class="token operator">=</span> <span class="token number">5000</span><span class="token punctuation">;</span>        <span class="token comment">//取款,多线程并发执行这个方法</span>        act<span class="token punctuation">.</span><span class="token function">withdraw</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"对"</span><span class="token operator">+</span>act<span class="token punctuation">.</span><span class="token function">getActNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"取款成功,余额"</span><span class="token operator">+</span>act<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">ThreadSafe</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//创建账户对象(只创建一个)</span>        <span class="token class-name">Account</span> act <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token string">"act-001"</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//创建两个线程</span>        <span class="token class-name">Thread</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccountThread</span><span class="token punctuation">(</span>act<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Thread</span> t2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccountThread</span><span class="token punctuation">(</span>act<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置name</span>        t1<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"t1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t2<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"t2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//自动线程取款</span>        t1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果:"></a>执行结果:</h4><p><img src="https://i.loli.net/2021/10/01/z6rf7uij52ELBgU.png" alt="image-20211001162049153"></p><h4 id="加上模拟延迟代码后执行结果"><a href="#加上模拟延迟代码后执行结果" class="headerlink" title="加上模拟延迟代码后执行结果:"></a>加上模拟延迟代码后执行结果:</h4><p><img src="https://i.loli.net/2021/10/01/dN4SpQWBmVRZ63Y.png" alt="image-20211001162140448"></p><h3 id="解决线程安全问题"><a href="#解决线程安全问题" class="headerlink" title="解决线程安全问题:"></a>解决线程安全问题:</h3><p>只需要修改Account类:</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">ThreadSafe2</span><span class="token punctuation">;</span><span class="token comment">/** * 银行账户 * 不适用线程同步机制,多线程对同一个账户进行取款,出现线程安全问题 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Account</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> actNo<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> balance<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token class-name">String</span> actNo<span class="token punctuation">,</span> <span class="token keyword">double</span> balance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>actNo <span class="token operator">=</span> actNo<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getActNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> actNo<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setActNo</span><span class="token punctuation">(</span><span class="token class-name">String</span> actNo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>actNo <span class="token operator">=</span> actNo<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBalance</span><span class="token punctuation">(</span><span class="token keyword">double</span> balance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//取款方法</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token keyword">double</span> money<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//以下这几行代码必须是线程排队的,不能并发</span>        <span class="token comment">//一个线程把这里的代码全部执行结束之后,另一个线程才能进来</span>        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">double</span> before <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">double</span> after <span class="token operator">=</span> before<span class="token operator">-</span>money<span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setBalance</span><span class="token punctuation">(</span>after<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果是"><a href="#运行结果是" class="headerlink" title="运行结果是:"></a>运行结果是:</h4><p><img src="https://i.loli.net/2021/10/01/NQzUEYRLsKBcSrk.png" alt="image-20211001163823023"></p><h5 id="线程同步机制的语法是"><a href="#线程同步机制的语法是" class="headerlink" title="线程同步机制的语法是:"></a>线程同步机制的语法是:</h5><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//线程同步代码块</span><span class="token punctuation">&#125;</span><span class="token comment">/*synchronized后面小括号中传入的数据十分重要这个数据必须是多线程共享的数据.才能达到多线程排队()中写什么那要看你想让那些线程同步假设t1,t2,t3,t4,t5 有5个线程你只希望t1,t2,t3排队,t4,t5不需要排队,你一定要在()中写一个t1,t2,t3共享的对象,而这个对象对于t4,t5来说不是共享的*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>多线程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java多线程-死锁</title>
    <link href="/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B-%E6%AD%BB%E9%94%81.html"/>
    <url>/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B-%E6%AD%BB%E9%94%81.html</url>
    
    <content type="html"><![CDATA[<h3 id="Java多线程-死锁"><a href="#Java多线程-死锁" class="headerlink" title="Java多线程-死锁"></a>Java多线程-死锁</h3><p>死锁是指两个或两个以上的进程在执行过程中，由于竞争资源或者由于彼此通信而造成的一种阻塞的现象，若无外力作用，它们都将无法推进下去。此时称系统处于死锁状态或系统产生了死锁，这些永远在互相等待的进程称为死锁进程。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">DealLock</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DealLock</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Object</span> o1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Object</span> o2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//t1和t2两个线程</span>        <span class="token class-name">Thread</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread1</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Thread</span> t2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread2</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span><span class="token punctuation">;</span>        t1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">MyThread1</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">&#123;</span>    <span class="token class-name">Object</span> o1<span class="token punctuation">;</span>    <span class="token class-name">Object</span> o2<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">MyThread1</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o1<span class="token punctuation">,</span><span class="token class-name">Object</span> o2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>o1 <span class="token operator">=</span> o1<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>o2 <span class="token operator">=</span> o2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>o1<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>o2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">MyThread2</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">&#123;</span>    <span class="token class-name">Object</span> o1<span class="token punctuation">;</span>    <span class="token class-name">Object</span> o2<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">MyThread2</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o1<span class="token punctuation">,</span><span class="token class-name">Object</span> o2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>o1 <span class="token operator">=</span> o1<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>o2 <span class="token operator">=</span> o2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>o2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>o1<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h3><p><img src="https://i.loli.net/2021/10/06/ozKUE79hYOpAcx2.png" alt="image-20211001190121869"></p><p>发生死锁现象,程序无法结束,也没有任何错误提示.</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>多线程</tag>
      
      <tag>死锁</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bat批量修改文件夹,文件名字</title>
    <link href="/bat%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%A4%B9-%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97.html"/>
    <url>/bat%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%A4%B9-%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97.html</url>
    
    <content type="html"><![CDATA[<h2 id="bat批量修改文件夹-文件名字"><a href="#bat批量修改文件夹-文件名字" class="headerlink" title="bat批量修改文件夹,文件名字"></a>bat批量修改文件夹,文件名字</h2><h3 id="批量修改文件名字"><a href="#批量修改文件名字" class="headerlink" title="批量修改文件名字"></a>批量修改文件名字</h3><p>新建一个.txt文件,把以下代码复制进去,然后修改文件名后缀为.bat</p><p><strong>代码:</strong></p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">@echo offset a&#x3D;00setlocal EnableDelayedExpansionfor %%n in (*.txt) do (set &#x2F;A a+&#x3D;1ren &quot;%%n&quot; &quot;小说!a!.txt&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>双击运行即可批量修改文件名</p><p><img src="https://i.loli.net/2021/10/06/dODyUitV83Q7IPA.png" alt="image-20211002235847600"></p><p>如果发生乱码,修改解码方式为<strong>ANSI</strong></p><p><img src="https://i.loli.net/2021/10/06/wb8ytguvePKaZnI.png" alt="image-20211003000715147"></p><p><strong>另一种修改文件名代码</strong>,实现同样的效果:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">@echo off&amp;setlocal EnableDelayedExpansionset a&#x3D;1for &#x2F;f &quot;delims&#x3D;&quot; %%i in (&#39;dir &#x2F;b *.jpg&#39;) do (if not &quot;%%~ni&quot;&#x3D;&#x3D;&quot;%~n0&quot; (if !a! LSS 10 (ren &quot;%%i&quot; &quot;img!a!.jpg&quot;) else ren &quot;%%i&quot; &quot;list!a!.jpg&quot;set&#x2F;a a+&#x3D;1))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="批量修改文件夹名字"><a href="#批量修改文件夹名字" class="headerlink" title="批量修改文件夹名字"></a>批量修改文件夹名字</h3><p>同理:新建一个.txt文件,把以下代码复制进去,然后修改文件名后缀为.bat</p><p><strong>代码:</strong></p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">set a&#x3D;1000setlocal EnableDelayedExpansionFOR &#x2F;f &quot;tokens&#x3D;*&quot; %%i IN (&#39;dir &#x2F;a:d &#x2F;b&#39;) DO (set &#x2F;A a+&#x3D;1ren &quot;%%i&quot; &quot;电影!a!&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>双击运行:</p><p><img src="https://i.loli.net/2021/10/06/U3sGQiC9xuNe28n.png" alt="image-20211003000836627"></p><p>如果发生乱码,修改解码方式为<strong>ANSI</strong></p><p><img src="https://i.loli.net/2021/10/06/wb8ytguvePKaZnI.png" alt="image-20211003000715147"></p>]]></content>
    
    
    <categories>
      
      <category>bat</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bat</tag>
      
      <tag>批量修改文件夹,文件名字</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Microsoft Store无法下载更新任何应用程序</title>
    <link href="/Microsoft-Store%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E6%9B%B4%E6%96%B0%E4%BB%BB%E4%BD%95%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F.html"/>
    <url>/Microsoft-Store%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E6%9B%B4%E6%96%B0%E4%BB%BB%E4%BD%95%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F.html</url>
    
    <content type="html"><![CDATA[<h1 id="Microsoft-Store无法下载更新任何应用程序"><a href="#Microsoft-Store无法下载更新任何应用程序" class="headerlink" title="Microsoft Store无法下载更新任何应用程序"></a>Microsoft Store无法下载更新任何应用程序</h1><p><img src="https://i.loli.net/2021/10/06/V7Jbs4XZGYhnj2F.png"></p><p><strong>错误代码是0x80D02017</strong></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决:"></a>解决:</h3><p>1.重置应用商店Windows+R–输入<code>WSReset.exe</code></p><p>2.运行Windows应用商店应用的疑难解答进行修复<br>“设置”—“更新和安全”—“疑难解答”—选择“Windows 应用商店应用”—点击“运行疑难解答”，按照提示操作</p><p>3.以管理员身份运行命令提示符，运行命令来重新注册Windows商店应用:<br>在小娜或搜索框中搜索<code>CMD</code>， 右键”命令提示符“，选择”以管理员身份运行“<br>分别输入以下2条命令，每条后面按下“Enter”键<br><code>PowerShell -ExecutionPolicy Unrestricted</code><br><code>$manifest = (Get-AppxPackage Microsoft.WindowsStore).InstallLocation + &#39;\AppxManifest.xml&#39; ; Add-AppxPackage -DisableDevelopmentMode -Register $manifest</code>（注意标点符号之间的空格）</p><p>4、临时禁用或卸载第三方防护软件测试安装一个应用，如果问题得以解决，建议使用自带的Windows Defender。</p><p>5.修复损坏的Windows文件<br>在小娜或搜索框中搜索“CMD“， 右键”命令提示符“，选择”以管理员身份运行“输入命令：Dism /online /cleanup-image /restorehealth Sfc /scannow<br>检查这些命令的输出. 如果发现问题但是没有解决, 建议使用还原点还原到一个可以正常运行的Windows 配置。</p>]]></content>
    
    
    <categories>
      
      <category>踩坑</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Microsoft Store</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Qt ：libpng warning iCCP known incorrect sRGB profile警告信息之解决方法</title>
    <link href="/Qt-%EF%BC%9Alibpng-warning-iCCP-known-incorrect-sRGB-profile%E8%AD%A6%E5%91%8A%E4%BF%A1%E6%81%AF%E4%B9%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html"/>
    <url>/Qt-%EF%BC%9Alibpng-warning-iCCP-known-incorrect-sRGB-profile%E8%AD%A6%E5%91%8A%E4%BF%A1%E6%81%AF%E4%B9%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</url>
    
    <content type="html"><![CDATA[<h1 id="Qt-：libpng-warning-iCCP-known-incorrect-sRGB-profile警告信息之解决方法"><a href="#Qt-：libpng-warning-iCCP-known-incorrect-sRGB-profile警告信息之解决方法" class="headerlink" title="Qt ：libpng warning: iCCP: known incorrect sRGB profile警告信息之解决方法"></a>Qt ：libpng warning: iCCP: known incorrect sRGB profile警告信息之解决方法</h1><p>1、从ImageMagick的官网下载压缩包，地址： <a href="http://www.imagemagick.org/script/binary-releases.php">http://www.imagemagick.org/script/binary-releases.php</a></p><p>根据平台下载相对应的压缩包，如Windows下载 ImageMagick-7.0.4-0-portable-Q16-x64.zip</p><p>2、把下载完的压缩包解压到 D:/ImageMagick/ImageMagick</p><p>3、在Qt的资源文件夹下（Qt调用资源的目录）新建 ImageMagick-Fix-PNG.bat  文件</p><p>打开后编辑内容：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">@echo offecho ImageMagick fix libpng warning: iCCP: Not recognizing known sRGB profile ......echo Search PNG in subdirs and process ...set fn&#x3D;D:\ImageMagick\ImageMagick\convert.exefor &#x2F;f &quot;tokens&#x3D;*&quot; %%i in (&#39;dir&#x2F;s&#x2F;b *.png&#39;) do &quot;%fn%&quot; &quot;%%i&quot; -strip &quot;%%i&quot;pause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>4、保存退出，单击打开bat批处理，警告就消除了！</p>]]></content>
    
    
    <categories>
      
      <category>踩坑</category>
      
    </categories>
    
    
    <tags>
      
      <tag>踩坑</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git踩坑----fatal unable to access &#39;httpgithub.comjpdjpdimg.git&#39; OpenSSL SSL_read Connection was reset, errno 1005</title>
    <link href="/Git%E8%B8%A9%E5%9D%91-fatal-unable-to-access-httpgithub-comjpdjpdimg-git-OpenSSL-SSL-read-Connection-was-reset-errno-1005.html"/>
    <url>/Git%E8%B8%A9%E5%9D%91-fatal-unable-to-access-httpgithub-comjpdjpdimg-git-OpenSSL-SSL-read-Connection-was-reset-errno-1005.html</url>
    
    <content type="html"><![CDATA[<h2 id="Git踩坑—-fatal-unable-to-access-‘http-github-com-jpdjpd-img-git-39-OpenSSL-SSL-read-Connection-was-reset-errno-10054"><a href="#Git踩坑—-fatal-unable-to-access-‘http-github-com-jpdjpd-img-git-39-OpenSSL-SSL-read-Connection-was-reset-errno-10054" class="headerlink" title="Git踩坑—-fatal: unable to access ‘http://github.com/jpdjpd/img.git/&#39;: OpenSSL SSL_read: Connection was reset, errno 10054"></a>Git踩坑—-fatal: unable to access ‘<a href="http://github.com/jpdjpd/img.git/&#39;">http://github.com/jpdjpd/img.git/&#39;</a>: OpenSSL SSL_read: Connection was reset, errno 10054</h2><p>今天把github一个仓库删了,然后重新上传,执行命令<code>git push -u origin master</code>出现报错<code>fatal: unable to access &#39;http://github.com/jpdjpd/img.git/&#39;: OpenSSL SSL_read: Connection was reset, errno 10054</code></p><p><img src="https://i.loli.net/2021/10/06/2NmlBpoCazc8yib.png" alt="image-20211006085035043"></p><p>找了一些教程,说是把 <code>.git/cofig</code>中的url里https改成http就OK,但试了之后没有成功,可能由于我本地有两个不同的github账号的原因吧</p><p>还有一种说法就是:<strong>解除ssl验证后</strong>，再上传就OK了<code>git config --global http.sslVerify &quot;false&quot;</code>,但是也没有成功.</p><h3 id="我这里的正解"><a href="#我这里的正解" class="headerlink" title="我这里的正解:"></a>我这里的正解:</h3><p>修改<code>.git/config</code>中的url为你github上仓库的ssh连接即可</p><p><strong>把:</strong></p><p>原来配置的<code>git remote add origin https://github.com/jpdjpd/img.git</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>remote <span class="token string">"origin"</span><span class="token punctuation">]</span>url <span class="token operator">=</span> https://github.com/jpdjpd/img.gitfetch <span class="token operator">=</span> +refs/heads/*:refs/remotes/origin/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><strong>改为:</strong></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>remote <span class="token string">"origin"</span><span class="token punctuation">]</span>url <span class="token operator">=</span> git@github.com:jpdjpd/img.gitfetch <span class="token operator">=</span> +refs/heads/*:refs/remotes/origin/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><strong>再进行</strong><code>git push -u origin master</code><strong>即可</strong></p><p><img src="https://i.loli.net/2021/10/06/EceibkCowar5Gz8.png" alt="image-20211006085759359"></p>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>踩坑</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hbuilder快捷键</title>
    <link href="/Hbuilder%E5%BF%AB%E6%8D%B7%E9%94%AE.html"/>
    <url>/Hbuilder%E5%BF%AB%E6%8D%B7%E9%94%AE.html</url>
    
    <content type="html"><![CDATA[<h1 id="Hbuilder-快捷键"><a href="#Hbuilder-快捷键" class="headerlink" title="Hbuilder 快捷键"></a>Hbuilder 快捷键</h1><p>最近在学习javaweb 在学前端的时候用到了一款国产编辑器 很棒</p><p>Hbuilder 快捷键</p><ul><li>Ctrl + d           删除整行内容</li><li>Ctrl + Shift +R     复制当前行到下一行</li><li>Ctrl + Shift +D   重新编辑</li><li>Ctrl + 方向键     当前行整行内容上移或下移</li><li>Alt + ↓           跳转到下一个可编辑区</li><li>Ctrl + Alt + j      与下一行合并</li><li>Ctrl + Alt + ←    选择助手</li><li>Shift + 回车      生成换行符</li><li>Ctrl + 回车       向下插入空行</li><li>Ctrl + Shift + 回车 向上插入空行</li><li>Ctrl + Shift +F     格式化代码</li><li>Shift + 空格       全角/半角输入</li><li>Alt + [           匹配括号</li><li>tab             选中代码整体向右缩进</li><li>tab+shift         选中代码整体向左缩进</li><li>ctrl+shift+空格    从当前行向上另起一行</li><li>ctrl+空格    从当前行向下另起一行</li></ul>]]></content>
    
    
    <categories>
      
      <category>Hbuilder</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hbuilder</tag>
      
      <tag>快捷键</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML----CSS复习</title>
    <link href="/HTML-CSS%E5%A4%8D%E4%B9%A0.html"/>
    <url>/HTML-CSS%E5%A4%8D%E4%B9%A0.html</url>
    
    <content type="html"><![CDATA[<h1 id="HTML—-CSS复习"><a href="#HTML—-CSS复习" class="headerlink" title="HTML—-CSS复习"></a>HTML—-CSS复习</h1><h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h3><p>HTML 标题（Heading）是通过 <h1> - <h6> 等标签进行定义的。</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>这是一个标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>这是一个标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>这是一个标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="2-段落"><a href="#2-段落" class="headerlink" title="2.段落"></a>2.段落</h3><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是另外一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="3-链接"><a href="#3-链接" class="headerlink" title="3.链接"></a>3.链接</h3><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://codeanime.cc/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这个是我的博客链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>注释：</strong>在 href 属性中指定链接的地址。</p><h3 id="4-图像"><a href="#4-图像" class="headerlink" title="4.图像"></a>4.图像</h3><p>HTML 图像是通过 <code>&lt;img&gt; </code>标签进行定义的。</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/jpdjpd/img/animation/74.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/4JxH15y36c8jDUS.png" alt="image-20211006152321751"></p><hr><p><strong>注意：</strong> 图像的名称和尺寸是以属性的形式提供的</p><h3 id="5-元素"><a href="#5-元素" class="headerlink" title="5.元素"></a>5.元素</h3><p><strong>HTML 元素</strong></p><p>HTML 元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://codeanime.cc/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是一个链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><table><thead><tr><th>开始标签</th><th>元素内容</th><th>结束标签</th></tr></thead><tbody><tr><td><p></td><td>这是一个段落</td><td></p></td></tr><tr><td><a href=""></td><td>这是一个链接</td><td></a></td></tr><tr><td><br></td><td>换行</td><td></td></tr></tbody></table><p>开始标签常被称为<strong>起始标签（opening tag）</strong>，结束标签常称为<strong>闭合标签（closing tag）</strong></p><h3 id="6-属性"><a href="#6-属性" class="headerlink" title="6.属性"></a>6.属性</h3><ul><li><p>HTML 标签可以拥有<strong>属性</strong></p></li><li><p>属性可以在元素中添加附加信息</p></li><li><p>属性一般描述于开始标签</p></li><li><p>属性总是以名称/值对的形式出现，比如：*name=”value”*。</p></li><li><p>属性总是在 HTML 元素的<em>开始标签</em>中规定</p></li></ul><p>实例:</p><p>HTML 链接由 <a> 标签定义。链接的地址在 <strong>href 属性</strong>中指定：</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://codeanime.cc/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是一个链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>属性值应该始终被包括在引号内。</p><p>双引号是最常用的，不过使用单引号也没有问题</p><p><strong>注意:</strong></p><p>属性值本身就含有双引号，那么必须使用单引号</p><p>属性和属性值对大小写不敏感。</p><p>不过，万维网联盟在其 HTML 4 推荐标准中推荐小写的属性/属性值。</p><h3 id="7-水平线"><a href="#7-水平线" class="headerlink" title="7.水平线"></a>7.水平线</h3><hr /> 标签在 HTML 页面中创建水平线。<p>hr 元素可用于分隔内容。</p><p><img src="https://i.loli.net/2021/10/06/M6wQaCoKcqtUP8l.png" alt="image-20211006153850209"></p><h3 id="8-注释"><a href="#8-注释" class="headerlink" title="8.注释"></a>8.注释</h3><p><strong>注释：</strong>开始括号之后（左边的括号）需要紧跟一个叹号，结束括号之前（右边的括号）</p><p><code>&lt;!----&gt;</code></p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 这是注释 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="9-样式"><a href="#9-样式" class="headerlink" title="9.样式"></a>9.样式</h3><p>style 属性用于改变 HTML 元素的样式</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>这是一级标签,测试style属性<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-family</span><span class="token punctuation">:</span> verdana<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这是p标签,测试style属性,颜色为红色,字体大小为50px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/6wTE71WxKhIPvDo.png" alt="image-20211006155106508"></p><hr><h3 id="10-文本格式化"><a href="#10-文本格式化" class="headerlink" title="10.文本格式化"></a>10.文本格式化</h3><table><thead><tr><th>bia</th><th></th></tr></thead><tbody><tr><td><b></td><td>定义粗体文本</td></tr><tr><td><big></td><td>定义大号字</td></tr><tr><td><em></td><td>定义着重文字</td></tr><tr><td><i></td><td>定义斜体字</td></tr><tr><td><small></td><td>定义小号字</td></tr><tr><td><strong></td><td>定义加重语气</td></tr><tr><td><sub></td><td>定义下标字</td></tr><tr><td><sub></td><td>定义上标字</td></tr><tr><td><ins></td><td>定义插入字</td></tr><tr><td><del></td><td>定义删除字</td></tr><tr><td><code></td><td>定义计算机代码</td></tr><tr><td><kbd></td><td>定义键盘码</td></tr><tr><td><samp></td><td>定义计算机代码样本</td></tr><tr><td><var></td><td>定义变量</td></tr><tr><td><div class="code-wrapper"><pre></td><td>定义预格式文本</td></tr><tr><td><abbr></td><td>定义缩写</td></tr><tr><td><address></td><td>定义地址</td></tr><tr><td><bdo></td><td>定义文字方向</td></tr><tr><td><blockquote></td><td>定义长的引用</td></tr><tr><td><q></td><td>定义短的引用语</td></tr><tr><td><cite></td><td>定义引用、引证</td></tr><tr><td><dfn></td><td>定义一个定义项目</td></tr></tbody></table><h3 id="11-头部"><a href="#11-头部" class="headerlink" title="11.头部"></a>11.头部</h3><p><code>&lt;head&gt; </code>元素包含了所有的头部标签元素。在 <code>&lt;head&gt;</code>元素中你可以插入脚本（scripts）, 样式文件（CSS），及各种meta信息。</p><p>可以添加在头部区域的元素标签为: <code>&lt;title&gt;</code>, <code>&lt;style&gt;</code>, <code>&lt;meta&gt;</code>, <code>&lt;link&gt;</code>, <code>&lt;script&gt;</code>, <code>&lt;noscript&gt;</code> 和 <code>&lt;base&gt;</code></p><h3 id="12-标题"><a href="#12-标题" class="headerlink" title="12.标题"></a>12.标题</h3><p><code>&lt;title&gt; </code>标签定义了不同文档的标题。</p><p><code>&lt;title&gt; </code>在 HTML/XHTML 文档中是必须的。</p><p><code>&lt;title&gt;</code> 元素:</p><ul><li>定义了浏览器工具栏的标题</li><li>当网页添加到收藏夹时，显示在收藏夹中的标题</li><li>显示在搜索引擎结果页面的标题</li></ul><h3 id="13-CSS"><a href="#13-CSS" class="headerlink" title="13.CSS"></a>13.CSS</h3><p>CSS (Cascading Style Sheets) 用于渲染HTML元素标签的样式</p><p>CSS 可以通过以下方式添加到HTML中:</p><ul><li>内联样式- 在HTML元素中使用”style” <strong>属性</strong></li><li>内部样式表 -在HTML文档头部 <head> 区域使用<style> <strong>元素</strong> 来包含CSS</li><li>外部引用 - 使用外部 CSS <strong>文件</strong></li></ul><p>最好的方式是通过外部引用CSS文件.</p><p>内联样式:</p><p>当特殊的样式需要应用到个别元素时，就可以使用内联样式。 使用内联样式的方法是在相关的标签中使用样式属性。样式属性可以包含任何 CSS 属性。以下实例显示出如何改变段落的颜色和左外边距</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/JyYdXfxQbSNEKIn.png" alt="image-20211006161403270"></p><p>背景颜色:</p><p>背景色属性（background-color）定义一个元素的背景颜色：</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这是一个2级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/V3Hcb4pT8gFriUM.png" alt="image-20211006161338046"></p><p>字体,字体颜色,字体大小</p><p>可以使用font-family（字体），color（颜色），和font-size（字体大小）属性来定义字体的样式:</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-family</span><span class="token punctuation">:</span>verdana<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这是一个一级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-family</span><span class="token punctuation">:</span>arial<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/BKRuYoFnAU7NbvM.png" alt="image-20211006161530563"></p><p>现在通常使用font-family（字体），color（颜色），和font-size（字体大小）属性来定义文本样式，而不是使用<font>标签</p><p>文本对齐方式:</p><p>使用 text-align（文字对齐）属性指定文本的水平与垂直对齐方式：</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>居中对齐的1级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/y3RWgcFm9dQXYDq.png" alt="image-20211006161704466"></p><hr><p>内部样式表:</p><p>当单个文件需要特别样式时，就可以使用内部样式表。你可以在<head> 部分通过 <style>标签定义内部样式表:</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">p</span> <span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>外部样式表:</p><p>当样式需要被应用到很多页面的时候，外部样式表将是理想的选择。使用外部样式表，你就可以通过更改一个文件来改变整个站点的外观</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mystyle.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="14-表格"><a href="#14-表格" class="headerlink" title="14.表格"></a>14.表格</h3><p>表格由 <table> 标签来定义。每个表格均有若干行（由 <tr> 标签定义），每行被分割为若干单元格（由 <td> 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1,1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1,2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2,1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2,2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/gyzN6SmOr13nQLs.png" alt="image-20211006162234332"></p><hr><p>表格边框属性(border):</p><p>如果不定义边框属性，表格将不显示边框</p><p>表头:</p><p>表格的表头使用 <th> 标签进行定义</p><p>大多数浏览器会把表头显示为粗体居中的文本：</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>11111111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>22222222222<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1,1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1,2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2,1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2,2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/u7FqJmO9psW8Ahv.png" alt="image-20211006162512619"></p><h3 id="15-列表"><a href="#15-列表" class="headerlink" title="15.列表:"></a>15.列表:</h3><p>HTML 支持有序、无序和定义列表:</p><p>无序列表:</p><p>无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记</p><p>无序列表使用 <ul> 标签:</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>水果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>蔬菜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/A79G5aeUXiIh3LQ.png" alt="image-20211006162925947"></p><p>有序列表:</p><p>同样，有序列表也是一列项目，列表项目使用数字进行标记。 有序列表始于 <ol> 标签。每个列表项始于 <li> 标签</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>水果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>蔬菜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/B7LEpsUAJboGPYq.png" alt="image-20211006163039753"></p><h3 id="16-区块元素"><a href="#16-区块元素" class="headerlink" title="16.区块元素:"></a>16.区块元素:</h3><p>HTML 可以通过 <div> 和 <span>将元素组合起来</p><p>大多数 HTML 元素被定义为<strong>块级元素</strong>或<strong>内联元素</strong>。</p><p>块级元素在浏览器显示时，通常会以新行来开始（和结束）。</p><p>实例: <h1>, <p>, <ul>, <table></p><p>内联元素:</p><p>在显示时通常不会以新行开始。</p><p>实例: <b>, <td>, <a>, <img></p><p>div元素:</p><p>HTML <div> 元素是块级元素，它可用于组合其他 HTML 元素的容器。</p><div> 元素没有特定的含义。除此之外，由于它属于块级元素，浏览器会在其前后显示折行。<p>如果与 CSS 一同使用，<div> 元素可用于对大的内容块设置样式属性。</p><div> 元素的另一个常见的用途是文档布局。它取代了使用表格定义布局的老式方法。使用 <table> 元素进行文档布局不是表格的正确用法。<table> 元素的作用是显示表格化的数据<p>span元素:</p><p>HTML <span> 元素是内联元素，可用作文本的容器</p><p><span> 元素也没有特定的含义。</p><p>当与 CSS 一同使用时，<span> 元素可用于为部分文本设置样式属性</p><h3 id="17-框架"><a href="#17-框架" class="headerlink" title="17.框架"></a>17.框架</h3><p>通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面。</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://codeanime.cc/<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/WH3ogfXSkEbxlsY.png" alt="image-20211006164228773"></p><hr><p>移除边框:</p><p>frameborder 属性用于定义iframe表示是否显示边框。</p><p>设置属性值为 “0” 移除iframe的边框:</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://codeanime.cc/<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>使用ifranme作为链接的目标</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>if<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/jpdjpd/img/animation/32.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://codeanime.cc<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>if<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>樱花庄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/uWylIjwPmxsAzbQ.png" alt="image-20211006165449415"></p><hr><h3 id="18-表单"><a href="#18-表单" class="headerlink" title="18.表单"></a>18.表单</h3><p>表单是一个包含表单元素的区域。</p><p>表单元素是允许用户在表单中输入内容,比如：文本域(textarea)、下拉列表、单选框(radio-buttons)、复选框(checkboxes)等等。</p><p>表单使用表单标签 <form> 来设置:</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>.input 元素.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>输入元素:</p><p>多数情况下被用到的表单标签是输入标签<code>&lt;input&gt;</code></p><p>输入类型是由类型属性（type）定义的。大多数经常被用到的输入类型如下：</p><p>文本域:</p><p>文本域通过<input type="text"> 标签来设定，当用户要在表单中键入字母、数字等内容时，就会用到文本域。</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/DalKxIymHUZF9W4.png" alt="image-20211006173034742"></p><p>**注意:**表单本身并不可见。同时，在大多数浏览器中，文本域的默认宽度是 20 个字符。</p><p>密码字段:</p><p>密码字段通过标签<input type="password"> 来定义:</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>passwoed<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/cJhDAnpmyKRt7kr.png" alt="image-20211006185703027"></p><p>**注意:**密码字段字符不会明文显示，而是以星号或圆点替代。</p><p>单选按钮:</p><p><input type="radio"> 标签定义了表单单选框选项</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>passwoed<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>male<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>男<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>female<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>checked:表示默认选择男</p><p><img src="https://i.loli.net/2021/10/06/jSkdOzvCifhJm23.png" alt="image-20211006185907107"></p><p>复选框:</p><p><input type="checkbox"> 定义了复选框. 用户需要从若干给定的选择中选取一个或若干选项。</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>passwoed<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>男<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    篮球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basketball<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    看番<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>game<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    逛街<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>guangjie<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/BKgr3uknQOFf7RN.png" alt="image-20211006190939423"></p><p>提交按钮:</p><p><input type="submit"> 定义了提交按钮.</p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form_action.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>passwoed<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>男<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    篮球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basketball<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    看番<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>game<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    逛街<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>guangjie<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/sXAhp4PFmS9W1bl.png" alt="image-20211006191918801"></p><p>表单练习(俺好菜):</p><p>原版:</p><p><img src="https://i.loli.net/2021/10/06/CIYXy1RfOhHdN2G.png" alt="image-20211006205900747"></p><p>盗版:</p><p><img src="https://i.loli.net/2021/10/06/gGbvc2tHqNdYnTF.png" alt="image-20211006205932604"></p><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>表单练习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">#card-primary</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 423px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.form-group</span><span class="token punctuation">&#123;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#card-heard</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 330<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">input</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">label</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token selector">button</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 280px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #6777ef<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> #f4f6f9<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-heard<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">vertical-align</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4px<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#6777ef<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">"</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">vertical-align</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2px<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#34395E<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>邮箱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">vertical-align</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2px<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#34395E<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>密码<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>忘记密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>remeber<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2.5px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>记得我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="19-网站布局练习"><a href="#19-网站布局练习" class="headerlink" title="19.网站布局练习"></a>19.网站布局练习</h3><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>网页布局<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#primary</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #6777EF<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#head</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#left</span><span class="token punctuation">&#123;</span><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> bisque<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#right</span><span class="token punctuation">&#123;</span><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> blueviolet<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#bottom</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 62.5rem<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 36.8px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 463.2px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> cadetblue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>head<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>网站标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>菜单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第一条<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第二条<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第三条<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>网站内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>版权--copyright--codeanime.cc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/10/06/DIHCdQGJSwqa4xK.png" alt="image-20211006215148336"></p>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java io流---拷贝文件夹下的所有文件和目录</title>
    <link href="/Java-io%E6%B5%81-%E6%8B%B7%E8%B4%9D%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95.html"/>
    <url>/Java-io%E6%B5%81-%E6%8B%B7%E8%B4%9D%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95.html</url>
    
    <content type="html"><![CDATA[<h2 id="Java-io流—拷贝文件夹下的所有文件和目录"><a href="#Java-io流—拷贝文件夹下的所有文件和目录" class="headerlink" title="Java io流—拷贝文件夹下的所有文件和目录"></a>Java io流—拷贝文件夹下的所有文件和目录</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo01</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">TreeMap</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CopyAll</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//拷贝源</span>        <span class="token class-name">File</span> srcFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"E:\\学习\\a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//拷贝目标</span>        <span class="token class-name">File</span> destFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\22721\\Desktop"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//调用copyDri方法</span>        <span class="token function">copyDri</span><span class="token punctuation">(</span>srcFile<span class="token punctuation">,</span>destFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 拷贝目录     * @param srcFile 拷贝源     * @param destFile 拷贝目标     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">copyDri</span><span class="token punctuation">(</span><span class="token class-name">File</span> srcFile<span class="token punctuation">,</span> <span class="token class-name">File</span> destFile<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>srcFile<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//src.File</span>            <span class="token comment">//是文件就拷贝,且边读边写</span>            <span class="token class-name">FileInputStream</span> in <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token class-name">FileOutputStream</span> out <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token class-name">File</span> file<span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//读srcFile这个文件</span>                in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>srcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> path <span class="token operator">=</span> destFile<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> srcFile<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//一边读一边写</span>                <span class="token comment">//一次性复制1m</span>                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> readCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>readCount<span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> readCount<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>out<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                        out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>in<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                        in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">//srcFile如果是一个文件,结束递归</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//获取源下面的子目录(拿到当前文件夹srcFile下的子文件)</span>        <span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> srcFile<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//代码测试(写一点测试一点)</span>        <span class="token comment">//System.out.println(files.length);</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token operator">:</span>files<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//获取所有文件的绝对路径(包括目录和文件)</span>            <span class="token comment">//System.out.println(file.getAbsolutePath());</span>            <span class="token comment">//这个file可能是文件或者目录</span>            <span class="token comment">//</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//System.out.println(file.getAbsolutePath());</span>                <span class="token class-name">String</span> srcDri <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//获取原目标路径,去掉前两位(E:\\学习\\a)---->(\\学习\a)</span>                <span class="token comment">//System.out.println(srcDri.substring(2));</span>                <span class="token class-name">String</span> destDri <span class="token operator">=</span> destFile<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> srcDri<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">File</span> newFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>destDri<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//如果newFile不存在,则新建</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    newFile<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">//测试输出文件路径</span>                <span class="token comment">//System.out.println(destDri);</span>            <span class="token punctuation">&#125;</span>            <span class="token function">copyDri</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span>destFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h3><p><img src="https://i.loli.net/2021/09/28/VZvYoL4k8TnO7Mr.png" alt="image-20210928164028710"></p><p><strong>运行后文件被拷贝到桌面(目标文件夹):</strong></p><p><img src="https://i.loli.net/2021/09/28/BcGnxVlg8w3daIT.png" alt="image-20210928164040501"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>练习</tag>
      
      <tag>IO流</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java io流---拷贝目录</title>
    <link href="/Java-io%E6%B5%81-%E6%8B%B7%E8%B4%9D%E7%9B%AE%E5%BD%95.html"/>
    <url>/Java-io%E6%B5%81-%E6%8B%B7%E8%B4%9D%E7%9B%AE%E5%BD%95.html</url>
    
    <content type="html"><![CDATA[<h2 id="Java-io流—拷贝目录"><a href="#Java-io流—拷贝目录" class="headerlink" title="Java io流—拷贝目录"></a>Java io流—拷贝目录</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo01</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CopyAll</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//拷贝源</span>        <span class="token class-name">File</span> srcFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"E:\\学习\\a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//拷贝目标</span>        <span class="token class-name">File</span> destFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\22721\\Desktop"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//调用copyDri方法</span>        <span class="token function">copyDri</span><span class="token punctuation">(</span>srcFile<span class="token punctuation">,</span>destFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 拷贝目录     * @param srcFile 拷贝源     * @param destFile 拷贝目标     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">copyDri</span><span class="token punctuation">(</span><span class="token class-name">File</span> srcFile<span class="token punctuation">,</span> <span class="token class-name">File</span> destFile<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>srcFile<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//src.File</span>            <span class="token comment">//srcFile如果是一个文件,结束递归</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//获取源下面的子目录(拿到当前文件夹srcFile下的子文件)</span>        <span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> srcFile<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//代码测试(写一点测试一点)</span>        <span class="token comment">//System.out.println(files.length);</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token operator">:</span>files<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//获取所有文件的绝对路径(包括目录和文件)</span>            <span class="token comment">//System.out.println(file.getAbsolutePath());</span>            <span class="token comment">//这个file可能是文件或者目录</span>            <span class="token comment">//</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//System.out.println(file.getAbsolutePath());</span>                <span class="token class-name">String</span> srcDri <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//获取原目标路径,去掉前两位(E:\\学习\\a)---->(\\学习\a)</span>                <span class="token comment">//System.out.println(srcDri.substring(2));</span>                <span class="token class-name">String</span> destDri <span class="token operator">=</span> destFile<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> srcDri<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">File</span> newFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>destDri<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//如果newFile不存在,则新建</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    newFile<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">//测试输出文件路径</span>                <span class="token comment">//System.out.println(destDri);</span>            <span class="token punctuation">&#125;</span>            <span class="token function">copyDri</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span>destFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h3><p><img src="https://i.loli.net/2021/09/28/xoK4LNzp9tIMnPf.png" alt="image-20210928161809385"></p><p><strong>拷贝目标,即桌面上出现了:</strong></p><p><img src="https://i.loli.net/2021/09/28/tpIXWfbh3xKPowq.png" alt="image-20210928161902842"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>练习</tag>
      
      <tag>IO流</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git使用手册--超级详细,自己都看哭了</title>
    <link href="/Git%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C-%E8%B6%85%E7%BA%A7%E8%AF%A6%E7%BB%86-%E8%87%AA%E5%B7%B1%E9%83%BD%E7%9C%8B%E5%93%AD%E4%BA%86.html"/>
    <url>/Git%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C-%E8%B6%85%E7%BA%A7%E8%AF%A6%E7%BB%86-%E8%87%AA%E5%B7%B1%E9%83%BD%E7%9C%8B%E5%93%AD%E4%BA%86.html</url>
    
    <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="一-git简介"><a href="#一-git简介" class="headerlink" title="一.git简介"></a>一.git简介</h3><p>Git是目前世界上最先进的分布式版本控制系统（没有之一）。</p><p><strong>关于版本控制系统</strong>:</p><p>版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统.有了它你就可以将选定的文件回溯到之前的状态，甚至将整个项目都回退到过去某个时间点的状态，你可以比较文件的变化细节，查出最后是谁修改了哪个地方，从而找出导致怪异问题出现的原因，又是谁在何时报告了某个功能缺陷等等</p><h3 id="二-安装"><a href="#二-安装" class="headerlink" title="二.安装"></a>二.安装</h3><p>在使用Git前我们需要先安装 Git。Git 目前支持 Linux/Unix、Solaris、Mac和 Windows 平台上运行。</p><p>Git 各平台安装包下载地址为：<a href="http://git-scm.com/downloads">http://git-scm.com/downloads</a></p><p><strong>Linux 平台上安装</strong></p><p>Git 的工作需要调用 curl，zlib，openssl，expat，libiconv 等库的代码，所以需要先安装这些依赖工具。</p><p>在有 yum 的系统上（比如 Fedora）或者有 apt-get 的系统上（比如 Debian 体系），可以用下面的命令安装：</p><p>各 Linux 系统可以使用其安装包管理工具（apt-get、yum 等）进行安装：</p><p><strong>Debian/Ubuntu</strong></p><p>Debian/Ubuntu Git 安装命令为：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">apt-get</span> <span class="token function">install</span> libcurl4-gnutls-dev libexpat1-dev gettext <span class="token punctuation">\</span>  libz-dev libssl-dev$ <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">git</span>$ <span class="token function">git</span> --version<span class="token function">git</span> version <span class="token number">1.8</span>.1.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>Centos/RedHat</strong></p><p>如果你使用的系统是 Centos/RedHat 安装命令为：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ yum <span class="token function">install</span> curl-devel expat-devel gettext-devel <span class="token punctuation">\</span>  openssl-devel zlib-devel$ yum -y <span class="token function">install</span> git-core$ <span class="token function">git</span> --version<span class="token function">git</span> version <span class="token number">1.7</span>.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>源码安装</strong></p><p>我们也可以在官网下载源码包来安装，最新源码包下载地址：<a href="https://git-scm.com/download">https://git-scm.com/download</a></p><p>安装指定系统的依赖包：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Centos/RedHat</span>$ yum <span class="token function">install</span> curl-devel expat-devel gettext-devel <span class="token punctuation">\</span>  openssl-devel zlib-devel<span class="token comment"># Debian/Ubuntu</span>$ <span class="token function">apt-get</span> <span class="token function">install</span> libcurl4-gnutls-dev libexpat1-dev gettext <span class="token punctuation">\</span>  libz-dev libssl-dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>解压安装下载的源码包：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">tar</span> -zxf git-1.7.2.2.tar.gz$ <span class="token builtin class-name">cd</span> git-1.7.2.2$ <span class="token function">make</span> <span class="token assign-left variable">prefix</span><span class="token operator">=</span>/usr/local all$ <span class="token function">sudo</span> <span class="token function">make</span> <span class="token assign-left variable">prefix</span><span class="token operator">=</span>/usr/local <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><hr><p><strong>Windows 平台上安装</strong></p><p>在 Windows 平台上安装 Git 同样轻松，有个叫做 msysGit 的项目提供了安装包，可以到 GitHub 的页面上下载 exe 安装文件并运行：</p><p>安装包下载地址：<a href="https://gitforwindows.org/">https://gitforwindows.org/</a></p><p>官网慢，可以用国内的镜像：<a href="https://npm.taobao.org/mirrors/git-for-windows/%E3%80%82">https://npm.taobao.org/mirrors/git-for-windows/。</a></p><h3 id="三-创建版本库"><a href="#三-创建版本库" class="headerlink" title="三.创建版本库"></a>三.创建版本库</h3><p>我们先来理解下 Git 工作区、暂存区和版本库概念：</p><ul><li><strong>工作区：</strong>就是你在电脑里能看到的目录。</li><li><strong>暂存区：</strong>英文叫 stage 或 index。一般存放在 <strong><code>.git</code></strong> 目录下的 index 文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。</li><li><strong>版本库：</strong>工作区有一个隐藏目录 **<code>.git</code><strong>，这个不算工作区，而是 Git 的版本库。版本库又名仓库，英文名</strong><code>repository</code>**，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</li></ul><h4 id="1-创建一个目录作或者选择一个有内容的目录为工作区"><a href="#1-创建一个目录作或者选择一个有内容的目录为工作区" class="headerlink" title="1.创建一个目录作或者选择一个有内容的目录为工作区"></a>1.创建一个目录作或者选择一个有内容的目录为工作区</h4><h4 id="2-使用当前目录作为Git仓库，我们只需使它初始化"><a href="#2-使用当前目录作为Git仓库，我们只需使它初始化" class="headerlink" title="2.使用当前目录作为Git仓库，我们只需使它初始化"></a>2.使用当前目录作为Git仓库，我们只需使它初始化</h4><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>Git 使用 <strong><code>git init</code></strong> 命令来初始化一个 Git 仓库，Git 的很多命令都需要在 Git 的仓库中运行，所以 <strong><code>git init</code></strong> 是使用 Git 的第一个命令。</p><p>在执行完成 <strong><code>git init</code></strong> 命令后，Git 仓库会生成一个 .git 目录，该目录包含了资源的所有元数据，其他的项目目录保持不变。</p><p><strong>补充:</strong></p><p>使用指定目录作为Git仓库</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init newtest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>初始化后，会在 newtest 目录下会出现一个名为 .git 的目录，所有 Git 需要的数据和资源都存放在这个目录中。</p><p><img src="https://i.loli.net/2021/09/24/GzsMieV7OfAglxq.png" alt="image-20210924093150441"></p><h4 id="3-把文件添加到版本库"><a href="#3-把文件添加到版本库" class="headerlink" title="3.把文件添加到版本库"></a>3.把文件添加到版本库</h4><p>这里我在工作区里添加一个文本文件作为演示:</p><p><img src="https://i.loli.net/2021/09/24/d8rfViSX2K4nzHk.png" alt="image-20210924092324274"></p><p><strong>一个文件放到Git仓库只要三步( 把大象当冰箱 ):</strong></p><p><strong>(1)把文件放到工作区或者新建文件,保证文件是在工作区目录下或子目录下</strong></p><p><strong>(2)用<code>git add </code>命令把文件添加到暂存区 : <code>git add read.txt</code></strong></p><p><img src="https://i.loli.net/2021/09/24/Ezqnsul158jQWH9.png" alt="image-20210924093310094"></p><p><strong>(3)用<code>git commit</code>命令用把文件提交到仓库</strong></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit -m <span class="token string">"第一次提交"</span>  <span class="token comment"># -m后面输入的是本次提交的说明(message)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/ArI6qVKhEasSRMJ.png" alt="image-20210924094110000"></p><p>提交后发现和<code>git add</code>一样没有任何反应,<strong>在linux中没有反应是最好的反应</strong></p><h3 id="四-版本回退"><a href="#四-版本回退" class="headerlink" title="四.版本回退"></a>四.版本回退</h3><p><code>git log</code>命令:查看历史提交记录</p><p>假如说我修改read.txt文件,添加一行文字<code>测试修改</code></p><p><img src="https://i.loli.net/2021/09/24/PhC7K29MRxcvIDw.png" alt="image-20210924095910028"></p><p>使用<code>git log</code>命令查看提交记录</p><p><img src="https://i.loli.net/2021/09/24/Mgi6RuYBdLbr5Sc.png" alt="image-20210924100229414"></p><p>如果提交次数很多,可以使用<code>git log --pretty=oneline</code>查看提交记录</p><p><img src="https://i.loli.net/2021/09/24/7CTZrpx4OMNWhVk.png" alt="image-20210924100811619"></p><p><strong>说明:</strong></p><p>提交记录里面那一大串字符``(20b123….)<code>是 </code>commit id`（版本号）</p><p><strong>版本回退:</strong></p><p>使用命令<code>git reset</code>回退版本:</p><p><strong>说明:</strong></p><p>在Git中，用<code>HEAD</code>表示当前版本，也就是最新的提交<code>20b123....</code>，上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上100个版本写100个<code>^</code>比较容易数不过来，所以写成<code>HEAD~100</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reset --hard HEAD^<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/HUtdRrWx3hEiJOA.png" alt="image-20210924101641245"></p><p>打开之前添加的文字修改,发现回退到第一次提交的版本</p><p><img src="https://i.loli.net/2021/09/24/vAb8jSFtNeklhq4.png" alt="image-20210924101455734"></p><p>用命令<code>git log</code>查看版本历史,我们如果想再回到最新版本(添加文字修改过的那个版本)怎么办:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reset --hard 20b123<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>id没必要写全,前几位就可以了，Git会自动去找</p><p><img src="https://i.loli.net/2021/09/24/i5GzItWYOys3Qlp.png" alt="image-20210924102240066"></p><p>问题来了,假如说,我关机了,或者关掉git了,ID不知道怎么办.在git中,总有后悔药可以吃:</p><p>使用命令<code>git reflog</code>查看命令历史</p><p><img src="https://i.loli.net/2021/09/24/nPegjzyqcDI2ETB.png" alt="image-20210924102704700"></p><p>知道了id不是想怎么玩就怎么玩!</p><h3 id="五-查看仓库当前的状态"><a href="#五-查看仓库当前的状态" class="headerlink" title="五.查看仓库当前的状态"></a>五.查看仓库当前的状态</h3><p>命令<code>git status</code>查看仓库当前的状态，显示有变更的文件</p><p>我在工作区中再添加一个文件</p><p><img src="https://i.loli.net/2021/09/24/DgY4MRISbotpeqZ.png" alt="image-20210924103641139"></p><p>使用命令:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/paHzM5Ly4CcATuR.png" alt="image-20210924103754374"></p><p>me.txt文件没有被添加,所以它的状态是<code>Untracked</code>。</p><p>那现在来添加一下,再查看:</p><p><img src="https://i.loli.net/2021/09/24/XoifkPWjz6OZ72A.png" alt="image-20210924104244925"></p><p>提交后，如果你又没有对工作区做任何修改，那么工作区就是“干净”的(working tree clean)</p><h3 id="六-添加远程仓库–Github"><a href="#六-添加远程仓库–Github" class="headerlink" title="六.添加远程仓库–Github"></a>六.添加远程仓库–Github</h3><p>首先你需要你个Github账户,再者你要创建一个仓库,注册账户就不说了,闭上眼注册就行了,我们来说一下创建仓库吧</p><p><img src="https://i.loli.net/2021/09/24/97krfZpgDw1uKzT.png" alt="image-20210924105758719"></p><p>接着确定就行了….</p><p>创建好的效果如图:</p><p><img src="https://i.loli.net/2021/09/24/cGzkvmtJ2SPZFj3.png" alt="image-20210924105931868"></p><p>接着,我们从这里找到github仓库的地址</p><p><img src="https://i.loli.net/2021/09/24/rW9mhcCYEsjwK3y.png" alt="image-20210924110355453"></p><p>执行命令:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/code-anime/test.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>添加后，远程库的名字就是<code>origin</code>，这是Git默认的叫法，也可以改成别的</p><p>下一步，就可以把本地库的所有内容推送到远程库上：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>执行完毕后我们可以看到github上远程仓库内容和本地的内容一样.</p><p><img src="https://i.loli.net/2021/09/24/BxWEVuDTekNQ5iM.png" alt="image-20210924152157440"></p><p><strong><font color="#dd0000">注意：</font></strong> </p><p>执行途中可能遇到的问题:</p><p>(1)SSH错误</p><p>由于你的本地 Git 仓库和 GitHub 仓库之间的传输是通过SSH加密的，所以我们需要配置验证信息：</p><p>使用以下命令生成 SSH Key：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>后面的 <strong><a href="mailto:&#x79;&#111;&#117;&#x72;&#95;&#x65;&#x6d;&#x61;&#x69;&#x6c;&#x40;&#x79;&#111;&#117;&#x72;&#101;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#x6d;">&#x79;&#111;&#117;&#x72;&#95;&#x65;&#x6d;&#x61;&#x69;&#x6c;&#x40;&#x79;&#111;&#117;&#x72;&#101;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#x6d;</a></strong> 改为你在 Github 上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。</p><p>成功的话会在 <strong>~/</strong> 下生成 <strong>.ssh</strong> 文件夹，进去，打开 <strong>id_rsa.pub</strong>，复制里面的 <strong>key</strong>。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ssh-keygen -t rsa -C <span class="token string">"2272166487@qq.com"</span>Generating public/private rsa key pair.Enter <span class="token function">file</span> <span class="token keyword">in</span> <span class="token function">which</span> to save the key <span class="token punctuation">(</span>/Users/tianqixin/.ssh/id_rsa<span class="token punctuation">)</span>: Enter passphrase <span class="token punctuation">(</span>empty <span class="token keyword">for</span> no passphrase<span class="token punctuation">)</span>:    <span class="token comment"># 直接回车</span>Enter same passphrase again:                   <span class="token comment"># 直接回车</span>Your identification has been saved <span class="token keyword">in</span> /Users/tianqixin/.ssh/id_rsa.Your public key has been saved <span class="token keyword">in</span> /Users/tianqixin/.ssh/id_rsa.pub.The key fingerprint is:SHA256:MDKVidPTDXIQoJwoqUmI4LBAsg5XByBlrOEzkxrwARI <span class="token number">429240967</span>@qq.comThe key's randomart image is:+---<span class="token punctuation">[</span>RSA <span class="token number">3072</span><span class="token punctuation">]</span>----+<span class="token operator">|</span>E*+.<span class="token operator">+=</span>**oo       <span class="token operator">|</span><span class="token operator">|</span>%Oo+oo<span class="token operator">=</span>o. <span class="token builtin class-name">.</span>      <span class="token operator">|</span><span class="token operator">|</span>%**.o.o.         <span class="token operator">|</span><span class="token operator">|</span>OO.  o o         <span class="token operator">|</span><span class="token operator">|</span>+o+     S        <span class="token operator">|</span><span class="token operator">|</span><span class="token builtin class-name">.</span>                <span class="token operator">|</span><span class="token operator">|</span>                 <span class="token operator">|</span><span class="token operator">|</span>                 <span class="token operator">|</span><span class="token operator">|</span>                 <span class="token operator">|</span>+----<span class="token punctuation">[</span>SHA256<span class="token punctuation">]</span>-----+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>回到 github 上，进入 Account =&gt; Settings（账户配置）。</p><p><img src="https://i.loli.net/2021/09/24/mUKJewORHIbrXC9.jpg" alt="48840BF0-992F-4CCC-A388-15CB74819D88"></p><p>左边选择 <strong>SSH and GPG keys</strong>，然后点击 <strong>New SSH key</strong> 按钮,title 设置标题，可以随便填，粘贴在你电脑上生成的 key。</p><p><img src="https://i.loli.net/2021/09/24/QGJrjOvehsnxfXo.jpg" alt="img"></p><p><img src="https://i.loli.net/2021/09/24/K2t7mb6OxH3qpCh.jpg" alt="img"></p><p>添加成功后界面如下所示</p><p><img src="https://i.loli.net/2021/09/24/MyavhetVYEXijbP.jpg" alt="img"></p><p>为了验证是否成功，输入以下命令：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ssh</span> -T git@github.comThe authenticity of <span class="token function">host</span> <span class="token string">'github.com (52.74.223.119)'</span> can<span class="token string">'t be established.RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.Are you sure you want to continue connecting (yes/no/[fingerprint])? yes                   # 输入 yesWarning: Permanently added '</span>github.com,52.74.223.119<span class="token string">' (RSA) to the list of known hosts.Hi tianqixin! You'</span>ve successfully authenticated, but GitHub does not provide shell access. <span class="token comment"># 成功信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>以下命令说明我们已成功连上 Github。</p><p>(2)下面这个错误</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">warning: redirecting to https://github.com/code-anime/test.git/To http://github.com/code-anime/test.git <span class="token operator">!</span> <span class="token punctuation">[</span>rejected<span class="token punctuation">]</span>        master -<span class="token operator">></span> master <span class="token punctuation">(</span>non-fast-forward<span class="token punctuation">)</span>error: failed to push some refs to <span class="token string">'http://github.com/code-anime/test.git'</span>hint: Updates were rejected because the tip of your current branch is behindhint: its remote counterpart. Integrate the remote changes <span class="token punctuation">(</span>e.g.hint: <span class="token string">'git pull ...'</span><span class="token punctuation">)</span> before pushing again.hint: See the <span class="token string">'Note about fast-forwards'</span> <span class="token keyword">in</span> <span class="token string">'git push --help'</span> <span class="token keyword">for</span> details.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>解决:</p><p>执行命令:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull --rebase origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/LknDerGX4qdI2ap.png" alt="image-20210924154216282"></p><p>接着再试一下:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/code-anime/autopiccdn@9719c6eb6cfb88346882b088061cddc4974515e0/2021/09/24/ba1791bfe98c3873cb9e0bdd1e5bcaa8.png"></p><h3 id="七-移除远程仓库"><a href="#七-移除远程仓库" class="headerlink" title="七.移除远程仓库"></a>七.移除远程仓库</h3><p>如果添加的时候地址写错了，或者就是想删除远程库,可以用<code>git remote rm &lt;name&gt;</code></p><p>建议执行该命令之前执行<code>git remote -v</code>查看远程库信息</p><p><img src="https://i.loli.net/2021/09/24/dVLKNexQnTIi5f2.png" alt="image-20210924154708648"></p><p>然后根据名字删除,比如删除<code>origin</code></p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/autopiccdn@3df4227194231e11cf4200afa9670068803525c1/2021/09/24/9b913cac5dd27f88ebb15936326ee1a0.png"></p><p>此处的“删除”其实是解除了本地和远程的绑定关系，并不是物理上删除了远程库。远程库本身并没有任何改动。要真正删除远程库，需要登录到GitHub，在后台页面找到删除按钮再删除。</p><p>查看<code>.git</code>目录下的config文件,发现原来的这条没有了:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>remote <span class="token string">"origin"</span><span class="token punctuation">]</span>url <span class="token operator">=</span> https://github.com/code-anime/test.gitfetch <span class="token operator">=</span> +refs/heads/*:refs/remotes/origin/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>如果想重新建立与远程库之间的连接:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> origin <span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/code-anime/test.git<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit -m <span class="token string">"第三次提交"</span><span class="token function">git</span> push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/dLjiaK6q1wZhzfS.png"></p><p><img src="https://i.loli.net/2021/09/24/Zuxg71DWNklbrp9.png"></p><h3 id="八-从远程库克隆"><a href="#八-从远程库克隆" class="headerlink" title="八.从远程库克隆"></a>八.从远程库克隆</h3><p>上面所讲到的是先有本地库,后有远程库,如何关联远程库.</p><p>现在,我们来说先有远程库,再有本地库(从远程库克隆),这里我把本地test工作区删除,github上面的test仓库也删除了.从零开始演示.毕竟是test</p><p>接着就是创建github仓库,这里不做赘述了.</p><p><img src="https://i.loli.net/2021/09/24/r8QPfFkoRNlhZ7n.png" alt="image-20210924161133414"></p><p>我在桌面新建了一个文件夹<code>repos</code>,没别的意思就是<code>repository</code>的简写</p><p><img src="https://i.loli.net/2021/09/24/nR69k4NqUBSKLY8.png" alt="image-20210924161331081"></p><p>然后打开文件夹 , 然后<code>git bash here</code></p><p>执行命令:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone git@github.com:code-anime/test.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>上面<code>git clone</code>后跟的是仓库地址.</p><p><img src="https://i.loli.net/2021/09/24/tkf2KZvTiswxmJB.png" alt="image-20210924161716540"></p><p>执行命令后,会发现<code>repos</code>目录里面多了一个test文件夹(就是克隆github上的test仓库)</p><p><img src="https://i.loli.net/2021/09/24/spoND9ZJcQ65VKS.png" alt="image-20210924161948468"></p><p>打开test文件夹后我们会发现,和远程仓库内容是一样的</p><p>注意:</p><p>GitHub给出的地址不止一个，还可以用<code>https://github.com/code-anime/test.git</code>这样的地址。实际上，Git支持多种协议，默认的<code>git://</code>使用ssh，但也可以使用<code>https</code>等其他协议。</p><p>使用<code>https</code>除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令，但是在某些只开放http端口的公司内部就无法使用<code>ssh</code>协议而只能用<code>https</code></p><h3 id="九-分支管理"><a href="#九-分支管理" class="headerlink" title="九.分支管理"></a>九.分支管理</h3><p>首先,列出分支:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/lUL2XWNVJqO7Gju.png" alt="image-20210924163643370"></p><p>意思就是，我们有一个叫做 <strong>master</strong> 的分支，并且该分支是当前分支.当你执行 <strong>git init</strong> 的时候，默认情况下 Git 就会为你创建 <strong>master</strong> 分支。</p><p>如果我们要手动创建一个分支。执行 <strong>git branch (branchname)</strong> 即可。</p><p>创建一个<code>testing</code>分支:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch testing<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/wNebtKF1gzAHXV4.png" alt="image-20210924163759356"></p><p>现在我们可以看到，有了一个新分支 <strong>testing</strong>。</p><p>当你以此方式在上次提交更新之后创建了新分支，如果后来又有更新提交， 然后又切换到了 <strong>testing</strong> 分支，Git 将还原你的工作目录到你创建分支时候的样子。</p><p>我们切换到<code>testing</code>分支进行实验:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout testing<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/SRsQ38JOdnBPqjG.png" alt="image-20210924164433951"></p><p>接下来我们将演示如何切换分支，我们用<code>git checkout (branch) </code> 切换到我们要修改的分支。</p><p>我们在<code>testing</code>分支上正常提交，比如创建文件<code>readme.txt</code>,内容写上:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">测试testing分支<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>然后提交:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit -m <span class="token string">"添加文字测试testing分支"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/7yPbvU3qRaFI2Jk.png" alt="image-20210924165518165"></p><p>现在我们切换会<code>master</code>分支后,再查看<code>readme.txt</code>文件,文件不见了!</p><p>!<img src="https://i.loli.net/2021/09/24/tpIsqRHXUASBk6E.png" alt="image-20210924165412661"></p><p>当我们满怀怀疑的时候我们切换回来<code>testing</code>分支,发现还在</p><p><img src="https://i.loli.net/2021/09/24/VaKfgYxIbQZwj8e.png" alt="image-20210924165631400"></p><p>因为那个提交是在<code>testing</code>分支上，而<code>master</code>分支此刻的提交点并没有变：</p><p>现在，我们把<code>testing</code>分支的工作成果合并到<code>master</code>分支上：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout master<span class="token function">git</span> merge testing<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/IWJSRxPGCOpfqjE.png" alt="image-20210924165843223"></p><p>合并完成后，就可以放心地删除<code>testing</code>分支了：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch -d testing<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/XUvorehsZ6pkFQf.png" alt="image-20210924170024645"></p><h3 id="十-合并冲突"><a href="#十-合并冲突" class="headerlink" title="十.合并冲突"></a>十.合并冲突</h3><p>合并并不仅仅是简单的文件添加、移除的操作，Git 也会合并修改。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch* master<span class="token function">cat</span> readme.txt测试testing分支<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>现在我们只有一条主分支<code>master</code>且<code>readme.txt</code>文件中只有<code>测试testing分支</code>这一段文字.</p><p>首先,我们创建一个<code>test1</code>分支, 切换过去，我们将<code>readme.txt</code>文件添加<code>123</code>三个数字</p><p><img src="https://i.loli.net/2021/09/24/WYxC2al8NEcJroe.png" alt="image-20210924171453362"></p><p>将修改的内容提交到 change_site 分支中。 现在，假如切换回 master 分支我们可以看内容恢复到我们修改前的内容,没有<code>123</code></p><p><img src="https://i.loli.net/2021/09/24/EsmQdOgFalr3PIx.png" alt="image-20210924172006902"></p><p>我们再次修改<code> readme.txt</code>文件,添加数字<code>456</code></p><p><img src="https://i.loli.net/2021/09/24/tkKfzLduywbamsQ.png" alt="image-20210924172154332"></p><p>现在这些改变已经记录到我的 <code>master</code>分支了。接下来我们将 <code>test1</code>分支合并过来。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> merge test1Auto-merging readme.txtCONFLICT <span class="token punctuation">(</span>content<span class="token punctuation">)</span>: Merge conflict <span class="token keyword">in</span> readme.txtAutomatic merge failed<span class="token punctuation">;</span> fix conflicts and <span class="token keyword">then</span> commit the result.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>打开文件,看见冲突内容</p><p><img src="https://i.loli.net/2021/09/24/XQYtm57qlfAwaZM.png" alt="image-20210924172413734"></p><p>我们将前一个分支合并到 master 分支，一个合并冲突就出现了，接下来我们需要手动去修改它。</p><p>Git用<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>，<code>=======</code>，<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>标记出不同分支的内容，我们修改如下后保存：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>再提交:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit -m <span class="token string">"分支冲突解决"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/8ZKXpn4GNM925Ye.png" alt="image-20210924173037796"></p><p>用带参数的<code>git log</code>也可以看到分支的合并情况：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --graph --pretty<span class="token operator">=</span>oneline --abbrev-commit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/l5Ohxr1B4RQzyjb.png" alt="image-20210924173113409"></p><p>最后,删除分支:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch -d test1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/2uxSKVPwDOha5eW.png" alt="image-20210924173258947"></p><h3 id="十一-标签管理"><a href="#十一-标签管理" class="headerlink" title="十一.标签管理"></a>十一.标签管理</h3><p>如果你达到一个重要的阶段，并希望永远记住那个特别的提交快照，你可以使用 git tag 给它打上标签。</p><p>比如说，我们想为我们的 <code>test</code>项目发布一个<code>1.0</code>版本。 我们可以用 <code>git tag V1.0 </code>命令给最新一次提交打上（HEAD）<code>v1.0</code>的标签。</p><p>首先，切换到需要打标签的分支上：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag v1.0 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>当你执行 git tag -a 命令时，Git 会打开你的编辑器，让你写一句标签注解，就像你给提交写注解一样。</p><p>可以用命令<code>git tag</code>查看所有标签：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tagv1.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>默认标签是打在最新提交的commit上的。有时候，如果忘了打标签，比如，本该在昨天打的tag没打怎么办?</p><p>方法是找到历史提交的commit id，然后打上就可以了：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --pretty<span class="token operator">=</span>oneline --abbrev-commit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/LYaSbQeuRsirnCz.png" alt="image-20210924183517132"></p><p>比方说要对<code>添加456三个数组</code>这次提交打标签，它对应的commit id是<code>fe6c8d7</code>，敲入命令：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag v0.9 fe6c8d7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>再用命令<code>git tag</code>查看标签：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> tagv0.9v1.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>注意，标签不是按时间顺序列出，而是按字母排序的。可以用<code>git show &lt;tagname&gt;</code>查看标签信息：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> show v0.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/NCEZIDVSQynKYOJ.png" alt="image-20210924183926673"></p><p>可以看到，<code>v0.9</code>确实打在<code>add 添加456三个数字</code>这次提交上。</p><p>还可以创建带有说明的标签，用<code>-a</code>指定标签名，<code>-m</code>指定说明文字：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> tag -a v0.6 -m <span class="token string">"version 0.6 released"</span> 1094adb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>用命令<code>git show &lt;tagname&gt;</code>可以看到说明文字：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> show v0.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/GyxXfu7t9iow5gT.png" alt="image-20210924184645266"></p><p>用命令<code>git tag -d &lt;tagname&gt;</code>删除标签</p><p>因为创建的标签都只存储在本地，不会自动推送到远程。所以，打错的标签可以在本地安全删除。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag -d v0.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/RSpi8oOdavJQUBN.png" alt="image-20210924184827587"></p><p>如果要推送某个标签到远程，使用命令<code>git push origin &lt;tagname&gt;</code>：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin v1.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/mb6UOpI3hTjlGAM.png" alt="image-20210924185208955"></p><p><img src="https://i.loli.net/2021/09/24/nIaSqFB65Pw971t.png" alt="image-20210924185236112"></p><p>或者，一次性推送全部尚未推送到远程的本地标签：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> push origin --tags<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/sOih7PAWdLtrqVJ.png" alt="image-20210924185304118"></p><p><img src="https://i.loli.net/2021/09/24/KXUV4xbo8zkDuI7.png" alt="image-20210924185326118"></p><p>如果标签已经推送到远程，要删除远程标签就麻烦一点，先从本地删除：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> tag -d v1.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>然后，从远程删除。删除命令也是push，但是格式如下：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> push origin :refs/tags/v1.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>要看看是否真的从远程库删除了标签，可以登陆GitHub查看。</p><p><img src="https://i.loli.net/2021/09/24/MJ6AewT32zLoucq.png" alt="image-20210924185520588"></p><h3 id="十二-Gitee使用-hexo博客部署到gitee"><a href="#十二-Gitee使用-hexo博客部署到gitee" class="headerlink" title="十二.Gitee使用(hexo博客部署到gitee)"></a>十二.Gitee使用(hexo博客部署到gitee)</h3><p><strong>如果你-ssh密钥删除了或者不见了,新建一个ssh密钥</strong></p><p><img src="https://i.loli.net/2021/09/24/97aVKpYMPIQkvTs.png" alt="image-20210924190947679"></p><p>需要重新上传到github</p><p>打开你本地生成的ssh密钥(默认路径是C:\user\你的电脑用户名\ .ssh\id_rua_pub)</p><p><img src="https://i.loli.net/2021/09/24/3Z4CmqWVQyRUXTb.png" alt="image-20210924192156924"></p><p>放到github上:</p><p><img src="https://i.loli.net/2021/09/24/9zxkrNaKU1o6mYS.png" alt="image-20210924192007187"></p><p><img src="https://i.loli.net/2021/09/24/y4oul1Fne5iMZwO.png" alt="image-20210924192454932"></p><p>第一次要密码,输入你创建ssh密钥时候的密码即可.</p><p><img src="https://i.loli.net/2021/09/24/hkrgecJzH6bBmod.png" alt="image-20210924192603706"></p><p>使用Gitee和使用GitHub类似，我们在Gitee上注册账号并登录后，需要先上传自己的SSH公钥。选择右上角用户头像 -&gt; 菜单“修改资料”，然后选择“SSH公钥”，填写一个便于识别的标题，然后把用户主目录下的<code>.ssh/id_rsa.pub</code>文件的内容粘贴进去</p><p><img src="https://i.loli.net/2021/09/24/MSnVrQGkpTLDWm7.png" alt="image-20210924192837739"></p><p>这里我来演示一下在gitee上搭建Hexo博客吧,顺便复习一下:</p><p><strong>准备:</strong></p><p>安装git,nodejs,npm</p><h4 id="1-首先-创建一个工作目录作为我们的博客目录"><a href="#1-首先-创建一个工作目录作为我们的博客目录" class="headerlink" title="(1)首先,创建一个工作目录作为我们的博客目录"></a>(1)首先,创建一个工作目录作为我们的博客目录</h4><p><img src="https://i.loli.net/2021/09/24/o3b98kCDX6TpOB1.png" alt="image-20210924193136037"></p><p>右键<code>git bash here</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>初始化hexo</p><h4 id="2-下载主题安装-这里以butterfly主题为例"><a href="#2-下载主题安装-这里以butterfly主题为例" class="headerlink" title="(2)下载主题安装,这里以butterfly主题为例"></a>(2)下载主题安装,这里以butterfly主题为例</h4><p>在你的 Hexo 根目目录</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>修改 Hexo 根目录下的 <code>_config.yml</code>，把主題为butterfly</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">theme</span><span class="token punctuation">:</span> butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/ahzOPbjBfUSAuei.png" alt="image-20210924193754607"></p><h4 id="3-安装插件"><a href="#3-安装插件" class="headerlink" title="(3)安装插件"></a>(3)安装插件</h4><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">npm install hexo<span class="token punctuation">-</span>renderer<span class="token punctuation">-</span>pug hexo<span class="token punctuation">-</span>renderer<span class="token punctuation">-</span>stylus <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>在 hexo 的根目录创建一个文件<code> _config.butterfly.yml</code>，并把主题目录的 <code>_config.yml </code>内容复制到<code>_config.butterfly.yml</code>去。</p><p>注意： 不要把主題目录的<code> _config.yml</code> 刪掉</p><p>以后只需要在<code> _config.butterfly.yml</code>進行配置就行。</p><p>Hexo会自动合并主题中的<code>_config.yml</code>和 <em><code>config.butterfly.yml</code>里的配置，如果存在同名配置，會使用</em><code>config.butterfly.yml</code>的配置，其优先度较高</p><p><img src="https://i.loli.net/2021/09/24/5WfyGHVoibQIkqz.png" alt="image-20210924194202773"></p><p>然后执行:</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">hexo clean <span class="token important">&amp;&amp;</span> hexo g <span class="token important">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/24/AH1dTlU5kKmGgjF.png" alt="image-20210924194518098"></p><p>在浏览器打开<code>http://localhost:4000</code>:</p><p><img src="https://i.loli.net/2021/09/24/ewNSToGKgUhm9YH.png" alt="image-20210924194553580"></p><p>能打开说明是好的</p><p>(4)部署到gitee</p><p>安装组件:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>然后:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>最后出现下面那个图为正解.</p><p><img src="https://i.loli.net/2021/09/24/v58DQHLalVosbtg.png" alt="image-20210924200326794"></p><p>(5)开启网页服务</p><p><img src="https://i.loli.net/2021/09/24/UavdtkPAQs8cTYM.png" alt="image-20210924200432706"></p><p>直接点击生成即可，就会显示已开启 Gitee Pages 服务，网站地址： xxxxxx</p><p>至此，一个用户名.gitee.io的博客网站部署完成</p><p><img src="https://i.loli.net/2021/09/24/rxFb2oPL7eIw9Xn.png" alt="image-20210924200607307"></p><p><img src="https://i.loli.net/2021/09/24/PmjcKDyRpSnTYzX.png" alt="image-20210924200709360"></p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>Github</tag>
      
      <tag>博客搭建</tag>
      
      <tag>Gitee</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JDBC小记</title>
    <link href="/JDBC%E5%B0%8F%E8%AE%B0.html"/>
    <url>/JDBC%E5%B0%8F%E8%AE%B0.html</url>
    
    <content type="html"><![CDATA[<h1 id="JDBC小记"><a href="#JDBC小记" class="headerlink" title="JDBC小记"></a>JDBC小记</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨天刚冲完了jdbc,今天来总结一下</p><h2 id="一-JDBC介绍"><a href="#一-JDBC介绍" class="headerlink" title="一.JDBC介绍"></a>一.JDBC介绍</h2><p><strong>JDBC (百度百科)</strong>: Java数据库连接，（Java Database Connectivity，简称JDBC）是Java语言中用来规范客户端程序如何来访问数据库的应用程序接口，提供了诸如查询和更新数据库中数据的方法。JDBC也是Sun Microsystems的商标。我们通常说的JDBC是面向关系型数据库的。</p><p><strong>说白了 JDBC就是Java数据库连接，就是用Java语言来操作数据库。原来我们操作数据库是在控制台使用SQL语句来操作数据库，JDBC是用Java语言向数据库发送SQL语句.</strong></p><h2 id="二-JDBC原理图"><a href="#二-JDBC原理图" class="headerlink" title="二.JDBC原理图"></a>二.JDBC原理图</h2><p><img src="https://i.loli.net/2021/09/21/EQPnyDJdAIj8KU7.png" alt="img"></p><h2 id="三-JDBC的本质"><a href="#三-JDBC的本质" class="headerlink" title="三.JDBC的本质:"></a>三.JDBC的本质:</h2><p>JDBC本质：其实是官方（sun公司）定义的一套操作所有关系型数据库的规则，即接口。各个数据库厂商去实现这套接口，提供数据库驱动jar包。我们可以使用这套接口（JDBC）编程，真正执行的代码是驱动jar包中的实现类。</p><p><strong>JDBC到底是什么</strong></p><p>SUN公司制定的一套接口(interface)，(在java.sql.*;包下有很多接口)</p><p><strong>目的：解耦合——&gt;降低程序的耦合度，提高程序的扩展力</strong></p><hr><p>**附:**java链接MySQL驱动包最新版下载地址:<a href="https://dev.mysql.com/downloads/connector/j/,%E8%A7%A3%E5%8E%8B%E5%90%8E%E5%BE%97%E5%88%B0jar%E5%BA%93%E6%96%87%E4%BB%B6,%E7%84%B6%E5%90%8E%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%AF%BC%E5%85%A5%E8%AF%A5%E5%BA%93%E6%96%87%E4%BB%B6">https://dev.mysql.com/downloads/connector/j/,解压后得到jar库文件,然后在项目中导入该库文件</a>.</p><p>博主使用的版本是<a href="https://jiangxxx.lanzouw.com/iCRXlu66bbe">mysql-connector-java-5.1.47.jar</a></p><p><img src="https://i.loli.net/2021/09/21/Q9wi8ZrCaDgGFfq.png" alt="image-20210918094830349"></p><h2 id="四-什么是驱动"><a href="#四-什么是驱动" class="headerlink" title="四.什么是驱动"></a>四.什么是驱动</h2><p>驱动，是指驱动计算机里软件的程序。驱动程序全称设备驱动程序，是添加到操作系统中的特殊程序，其中包含有关硬件设备的信息。此信息能够使计算机与相应的设备进行通信。驱动程序是硬件厂商根据操作系统编写的配置文件，可以说没有驱动程序，计算机中的硬件就无法工作。</p><p>例如：网卡，声卡，显卡等等 必须要安装驱动程序，不然这些硬件就无法正常工作。</p><h2 id="五-为什么要面向接口编程？"><a href="#五-为什么要面向接口编程？" class="headerlink" title="五.为什么要面向接口编程？"></a>五.为什么要面向接口编程？</h2><p>解耦合:降低程序的耦合度，提高程序的扩展力<br>多态机制就是非常典型的：面向抽象编程(不要面向具体编程)</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Animal</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Animal</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//喂养的方法</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">feed</span><span class="token punctuation">(</span><span class="token class-name">Animal</span> a <span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//面向父类型编程</span><span class="token punctuation">&#125;</span>不建议：<span class="token class-name">Dog</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Cat</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>思考</strong>：为什么sun公司要制定一套JDBC接口呢？<br>因为每个数据库的实现原理不一样，oracle、mysql、ms sqlserver都有自己的原理,每个数据库产品都有自己独特的实现原理.</p><h2 id="六-JDBC核心类（接口）介绍"><a href="#六-JDBC核心类（接口）介绍" class="headerlink" title="六.JDBC核心类（接口）介绍"></a>六.JDBC核心类（接口）介绍</h2><p>JDBC中的核心类有：<code>DriverManager</code>、<code>Connection</code>、<code>Statement</code>，和<code>ResultSet</code></p><p><strong>DriverManger（驱动管理器）的作用有两个：</strong></p><ul><li><p>注册驱动：这可以让JDBC知道要使用的是哪个驱动；</p><p><code>DriverManager.registerDriver(new com.mysql.jdbc.Driver());</code></p></li><li><p>获取Connection：如果可以获取到Connection，那么说明已经与数据库连接上了。</p><p><code>DriverManager.getConnection(url,username,password)</code></p></li></ul><p><strong>Connection对象表示连接，与数据库的通讯都是通过这个对象展开的：</strong></p><ul><li><p>Connection最为重要的一个方法就是用来获取Statement对象；</p><p><code>Statement stmt = con.createStatement();</code></p></li><li><p>Statement是用来向数据库发送SQL语句的，这样数据库就会执行发送过来的SQL语句</p></li><li><p>void executeUpdate(String sql)：执行更新操作（insert、update、delete等）；</p></li><li><p>ResultSet executeQuery(String sql)：执行查询操作，数据库在执行查询后会把查询结果，查询结果就是ResultSet；</p></li></ul><p><strong>ResultSet对象表示查询结果集，只有在执行查询操作后才会有结果集的产生。结果集是一个二维的表格，有行有列。操作结果集要学习移动ResultSet内部的“行光标”，以及获取当前行上的每一列上的数据：</strong></p><ul><li><p>boolean next()：使“行光标”移动到下一行，并返回移动后的行是否存在；</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java">rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//光标移动到第一行</span>rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取第一行第一列的数据</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>XXX getXXX(int col)：获取当前行指定列上的值，参数就是列数，列数从1开始，而不是0。</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//常用的方法</span><span class="token class-name">Object</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token keyword">int</span> col<span class="token punctuation">)</span><span class="token class-name">String</span> <span class="token function">getString</span><span class="token punctuation">(</span><span class="token keyword">int</span> col<span class="token punctuation">)</span><span class="token keyword">int</span> <span class="token function">getInt</span><span class="token punctuation">(</span><span class="token keyword">int</span> col<span class="token punctuation">)</span><span class="token keyword">double</span> <span class="token function">getDouble</span><span class="token punctuation">(</span><span class="token keyword">int</span> col<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h2 id="七-JDBC编程6步（超级重要-需要背会-）"><a href="#七-JDBC编程6步（超级重要-需要背会-）" class="headerlink" title="七.JDBC编程6步（超级重要,需要背会!!!!）"></a>七.JDBC编程6步（超级重要,需要背会!!!!）</h2><p><strong>第1步：注册驱动 (只做一次)</strong></p><p><strong>第2步：获取数据库连接对象(Connection)</strong></p><p><strong>第3步：获取数据库操作对象(Statement)</strong></p><p><strong>第4步：执行sql语句(增删改查)</strong></p><p><strong>第5步：处理查询结果集(ResultSet)</strong></p><p><strong>第6步：释放资源</strong></p><hr><h3 id="第1步：注册驱动-只做一次"><a href="#第1步：注册驱动-只做一次" class="headerlink" title="第1步：注册驱动 (只做一次)"></a>第1步：注册驱动 (只做一次)</h3><p><strong>作用</strong>：告诉java程序，即将要连接的是哪个牌子的数据库.</p><p><img src="https://i.loli.net/2021/09/21/zojbJVGiYHO6D8T.png" alt="下载"></p><p><strong>注册驱动的两种方法 (例如,注册MySQL的数据库驱动) :</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 第一种:  推荐</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>“<span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span>”<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>Class.forName是把这个类加载到JVM中，加载的时候，就会执行其中的静态初始化块，完成驱动的初始化的相关工作。 </p><hr><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 第二种:  不推荐</span><span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">registerDriver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// DriverManager类的registerDriver()方法的参数是java.sql.Driver，但java.sql.Driver是一个接口，实现类由mysql驱动来提供，mysql驱动中的java.sql.Driver接口的实现类为com.mysql.jdbc.Driver</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>上面代码虽然可以注册驱动，但是出现硬编码（代码依赖mysql驱动jar包），如果将来想连接Oracle数据库，那么必须要修改代码的。并且其实这种注册驱动的方式是注册了两次驱动！</p><hr><p>通过初始化驱动类<code>com.mysql.jdbc.Driver</code>，该类就在 mysql-connector-java-5.0.8-bin.jar中。如果你使用的是oracle数据库那么该驱动类将不同。</p><p><strong>注意：</strong>Class.forName需要捕获ClassNotFoundException.</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="第2步：获取数据库连接对象-Connection"><a href="#第2步：获取数据库连接对象-Connection" class="headerlink" title="第2步：获取数据库连接对象(Connection)"></a><strong>第2步：获取数据库连接对象(Connection)</strong></h3><p>表示jvm的进程和数据库进程之间的通道打开了，这属于进程之间的通信，重量级的，使用完一定要关闭</p><p>可以使用 <code>DriverManager.getConnection()</code>方法建立连接。根据传入参数的不同，有三种重载的<code>DriverManager.getConnection()</code>方法：</p><ul><li><code>getConnection(String url)</code></li><li><code>getConnection(String url, Properties prop)</code></li><li><strong><code>getConnection(String url, String user, String password)</code></strong></li></ul><p><strong>还可以在url中提供参数</strong>：</p><p>jdbc:mysql://localhost:3306/mydb?<strong>useUnicode=true</strong>&amp;<strong>characterEncoding=UTF8</strong></p><p>useUnicode参数指定这个连接数据库的过程中，使用的字节集是Unicode字节集；</p><p>characherEncoding参数指定穿上连接数据库的过程中，使用的字节集编码为UTF-8编码。请注意，mysql中指定UTF-8编码是给出的是UTF8，而不是UTF-8。</p><p>这里每个格式都需要一个数据库URL。 数据库<strong>URL是指向数据库的地址。</strong>制定数据库URL是建立连接相关联的大多数错误问题发生的地方。各数据库对应的URL如下所示：</p><p><img src="https://i.loli.net/2021/09/21/zojbJVGiYHO6D8T.png" alt="下载"></p><p>　假设我们现在需要连接MySQL数据库，格式为：<strong>jdbc:mysql://hostname：port/datebaseName</strong>。我们需要的信息是hostname主机名和端口号，一般默认为localHost：3306；还需要datebaseName数据库名，假设为mydb；当然还有URL格式未包含的也是必须的信息：连接数据库的用户名和密码，假设为root和123456。那么就有URL：</p><ul><li><p>```<br>1 String url = “jdbc:mysql//localhost:3306/mydb”;</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">　　下面分别使用四种方法来实现：- 使用一个URL作为参数的方式：需要将username+password以参数的形式放到URL中，但是每种数据库的放置都不太相同  &#96;&#96;&#96;java  &#x2F;&#x2F;连接mysql的纯URL  String url &#x3D; &quot;jdbc:mysql&#x2F;&#x2F;localhost:3306&#x2F;mydb?username&#x3D;root&amp;password&#x3D;123456&quot;;  Connection conn  &#x3D; DriverManager.getConnection(url,p);  &#x2F;&#x2F;连接Oracle的纯URL String url &#x3D; &quot;jdbc:oracle:thin:root&#x2F;123456@192.0.0.10:1521:mydb&quot;;Connection conn  &#x3D; DriverManager.getConnection(url);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>使用URL、properties作为参数的方式：即需要将username和password以键值对形式存放在properties对象中作为参数</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//MySql</span><span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql//localhost:3306/mydb"</span><span class="token punctuation">;</span><span class="token class-name">Properties</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>p<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>p<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Connection</span> conn  <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>使用URL、username、password三个参数分开的方式（<strong>推荐</strong>）</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql//localhost:3306/mydb"</span><span class="token punctuation">;</span><span class="token class-name">String</span> username <span class="token operator">=</span>  <span class="token string">"root"</span><span class="token punctuation">;</span><span class="token class-name">String</span> password  <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token punctuation">;</span><span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>利用<code>java.sql.Drivermanager</code>类中的<code>getConnection()</code>方法与数据库建立连接。</p></li></ul><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Connection</span> c <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://127.0.0.1:3306/mydb?characterEncoding=UTF-8"</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 说明:</span><span class="token comment">// DriverManager.getConnection(“jdbc:mysql://数据库地址:端口号/数据库名”,”用户名”, “密码”);</span><span class="token comment">// 数据库服务端的IP地址:127.0.0.1 (这是本机，如果连接其他电脑上的数据库，需填写相应的IP地址)</span><span class="token comment">// 数据库的端口号： 3306 （mysql专用端口号）</span><span class="token comment">// 数据库名称 mydb（根据你自己数据库中的名称填写）</span><span class="token comment">// 编码方式 UTF-8</span><span class="token comment">// 账号 root</span><span class="token comment">// 密码 123456（如果你在创建数据库的时候没有使用默认的账号和密码，请填写自己设置的账号和密码）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>注意:</strong> Connection是与特定数据库连接回话的接口，使用的时候需要导包，而且必须在程序结束的时候将其关闭。getConnection方法也需要捕获SQLException异常。</p><p><strong>因为在进行数据库的增删改查的时候都需要与数据库建立连接，所以可以在项目中将建立连接写成一个工具方法，用的时候直接调用即可：</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/**  * 取得数据库的连接  * @return 一个数据库的连接  */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token keyword">try</span> <span class="token punctuation">&#123;</span> <span class="token comment">//初始化驱动类com.mysql.jdbc.Driver</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://127.0.0.1:3306/mydb?characterEncoding=UTF-8"</span><span class="token punctuation">,</span><span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//该类就在 mysql-connector-java-5.0.8-bin.jar中,如果忘记了第一个步骤的导包，就会抛出ClassNotFoundException</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> conn<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="第3步：获取数据库操作对象-Statement或者PreparedStatement"><a href="#第3步：获取数据库操作对象-Statement或者PreparedStatement" class="headerlink" title="第3步：获取数据库操作对象(Statement或者PreparedStatement)"></a><strong>第3步：获取数据库操作对象(Statement或者PreparedStatement)</strong></h3><p>SQL语句的执行对象按理说有Statement和PreparedStatement两个，但我们一般都不会去使用Statement，先看下两者的基本描述：</p><ul><li><strong>Statement</strong> 是 Java 执行数据库操作的一个重要接口，用于在已经建立数据库连接的基础上，向数据库发送要执行的SQL语句。Statement对象，<strong>用于执行不带参数的简单SQL语句，即静态SQL语句。</strong></li><li><strong>PreparedStatement</strong> 继承于Statement。实例包含<strong>已编译的 SQL 语句，</strong>这就是使语句“准备好”。包含于 PreparedStatement 对象中的 SQL 语句可具有一个或多个 IN <strong>参数</strong>。IN参数的值在 SQL 语句创建时未被指定。相反的，该语句为每个 IN 参数保留一个<strong>问号（“？”）作为占位符</strong>。每个问号的值必须在该语句执行之前，通过适当的<strong>setXXX（） 方法来提供</strong>。</li></ul><p>　　简言之，Statement执行静态SQL语句，而它的子类PreparedStatement执行预编译SQL，即可传入参数。两者相比之下，PreparedStatement有以下<strong>优势</strong>：</p><ul><li><strong>预编译处理，可动态执行SQL语句。</strong>很明显，SQL语句的预编译，使用占位符？去代替未知数据，因而一个句子可以执行多种不同的SQL，而Statement需要重新书写SQL语句，笨重。</li><li><strong>速度快，执行效率高</strong>。SQL语句会预编译在数据库系统中。执行计划同样会被缓存起来，它允许数据库做参数化查询。使用预处理语句比普通的查询更快，因为它做的工作更少（数据库对SQL语句的分析，编译，优化已经在第一次查询前完成了）。我们要<strong>利用预编译的特性</strong></li></ul><h4 id="1-利用java-sql-Connection创建用于执行SQL语句的Statement。"><a href="#1-利用java-sql-Connection创建用于执行SQL语句的Statement。" class="headerlink" title="(1). 利用java.sql.Connection创建用于执行SQL语句的Statement。"></a>(1). 利用<code>java.sql.Connection</code>创建用于执行SQL语句的Statement。</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Statement</span> stmt <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>注意:<strong>使用Statement会引起</strong>sql注入问题</strong>,在实际开发中很少使用,用的的更多的是它的子类PreparedStatement</p><p><strong>比如sql注入问题如下:</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"SELECT * FROM users WHERE name = '"</span> <span class="token operator">+</span> userName <span class="token operator">+</span> <span class="token string">"' and pw = '"</span><span class="token operator">+</span> passWord <span class="token operator">+</span><span class="token string">"';"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>验证需要用户输入用户名和密码，正确则执行查询语句（登录），但如果这样输入：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">userName &#x3D; &quot;1&#39; OR &#39;1&#39;&#x3D;&#39;1&quot;;passWord &#x3D; &quot;1&#39; OR &#39;1&#39;&#x3D;&#39;1&quot;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p> 那么执行语句就变成了：</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">1</span> <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"SELECT * FROM users WHERE name = '1' OR '1'='1' and pw = '1' OR '1'='1';"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p> 这样，where语句恒为真，就能实现无账号登录。此外便可能被恶意修改甚至删除数据表。然而使用PreparedStatement的参数化的查询<strong>可以阻止大部分的SQL注入</strong>。在使用参数化查询的情况下，数据库系统（eg:MySQL）不会将参数的内容视为SQL指令的一部分来处理，而是<strong>在数据库完成SQL指令的编译后，才套用参数运行</strong>，且占位符?不允许多值，只能填入一个值，因此就算参数中含有破坏性的指令，也不会被数据库所运行。</p><h4 id="2-使用Connection对象的PreparedStatement（sql）方法进行获取："><a href="#2-使用Connection对象的PreparedStatement（sql）方法进行获取：" class="headerlink" title="(2) .使用Connection对象的PreparedStatement（sql）方法进行获取："></a>(2) .使用Connection对象的PreparedStatement（sql）方法进行获取：</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> sql  <span class="token operator">=</span> <span class="token string">"select * from user where name=? and ange=?"</span><span class="token punctuation">;</span><span class="token comment">//预处理，需要我们先写好sql语句</span><span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">preparedStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//conn是连接对象，参数为sql语句</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="第4步：执行sql语句-增删改查"><a href="#第4步：执行sql语句-增删改查" class="headerlink" title="第4步：执行sql语句(增删改查)"></a><strong>第4步：执行sql语句(增删改查)</strong></h3><p>SQL语言共分为四大类：数据查询语言DQL，数据操纵语言DML，数据定义语言DDL，数据控制语言DCL</p><p>sql语句有增删查改等几种类型，所以执行方法有以下三种：</p><ul><li><code>execute()：</code><strong>执行SQL语句</strong>，可以是任何种类的 SQL 语句。返回值是boolean类型。</li><li><code>executeQuery()</code>：<strong>执行SQL语句查询</strong>，查询结果返回为**<code>ResultSet</code> 对象**。</li><li><code>executeUpdate()</code> ：<strong>执行更新语句</strong>。该语句必须是一个 SQL 数据操作语言（Data Manipulation Language，DML）语句，比如 <code>INSERT</code>、<code>UPDATE</code> 或 <code>DELETE</code> 语句；或者是无返回内容的 SQL 语句，比如 DDL 语句。返回值是int。</li></ul><p>　　例如本例中的语句是查询语句，所以执行代码为：</p><ul><li>```java<br>//执行查询语句，并把结果集返回给集合ResultSet<br>ResultSet rs = ps.executeQuery();<div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">### **第5步：处理查询结果集(ResultSet)**如果返回值是boolean或者int很好处理，但如果是查询结果集ResultSet对象，一般使用while循环来处理：　&#96;　　ResultSet&#96; 对象具有指向其当前数据行的光标。最初，光标被置于第一行之前。&#96;next()&#96; 方法将光标移动到下一行；因为该方法在 &#96;ResultSet&#96; 对象没有下一行时返回 &#96;false&#96;，所以可以在 &#96;while&#96; 循环中使用它来**迭代**结果集。另外，可以使用ResultSet对象的getXXX（int columnIndex）获得游标所在行指定列的值。原理如下图所示：![下载 (1)](https:&#x2F;&#x2F;i.loli.net&#x2F;2021&#x2F;09&#x2F;21&#x2F;vhreUMbBG5En1KH.png)所以，本例的结果集处理如下：&#96;&#96;&#96;java1 while(rs.next())&#123;2        system.out.println(rs.getString(1));3        system.out.println(rs.getInt(2));    4 &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h3 id="第6步：释放资源"><a href="#第6步：释放资源" class="headerlink" title="第6步：释放资源"></a><strong>第6步：释放资源</strong></h3><p>在JDBC程序结束之后，显式地需要关闭与数据库的所有连接以结束每个数据库会话。 但是，如果在编写程序中忘记了关闭也没有关系，Java的垃圾收集器将在清除过时的对象时也会关闭这些连接。</p><p>　　依靠垃圾收集，特别是数据库编程，是一个非常差的编程实践。所以应该要使用与连接对象关联的<code>close()</code>方法关闭连接。要确保连接已关闭，可以将关闭连接的代码中编写在“<code>finally</code>”块中。 一个<code>finally</code>块总是会被执行，不管是否发生异常。</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java">conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h2 id="八-JDBCUtils工具类"><a href="#八-JDBCUtils工具类" class="headerlink" title="八.JDBCUtils工具类"></a>八.JDBCUtils工具类</h2><p>因为传统JDBC的开发，注册驱动，获得连接，<strong>释放资源这些代码都是重复编写的</strong>。所以可以将重复的代码提取到一个类中来完成</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">ResultSet</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SQLException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Statement</span><span class="token punctuation">;</span><span class="token comment">/** * JDBC的工具类 * @author CodeAnime * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCUtils</span> <span class="token punctuation">&#123;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> driverClassName<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span><span class="token keyword">static</span><span class="token punctuation">&#123;</span>driverClassName<span class="token operator">=</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">;</span>url<span class="token operator">=</span><span class="token string">"jdbc:mysql:///web_test3"</span><span class="token punctuation">;</span>username<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span>password<span class="token operator">=</span><span class="token string">"123456"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 注册驱动的方法 */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadDriver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driverClassName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 获得连接的方法 */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span><span class="token comment">// 将驱动一并注册:</span><span class="token function">loadDriver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获得连接</span>conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> conn<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 释放资源的方法 */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">Statement</span> stmt<span class="token punctuation">,</span><span class="token class-name">Connection</span> conn<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">ResultSet</span> rs<span class="token punctuation">,</span><span class="token class-name">Statement</span> stmt<span class="token punctuation">,</span><span class="token class-name">Connection</span> conn<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">// 资源释放：</span><span class="token keyword">if</span><span class="token punctuation">(</span>rs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>测试案例：导入工具类，查询用户信息</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">ResultSet</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Statement</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>xdr630<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">JDBCUtils</span><span class="token punctuation">;</span><span class="token comment">/** * JDBC工具类的测试 * @author xdr * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCDemo3</span> <span class="token punctuation">&#123;</span><span class="token annotation punctuation">@Test</span><span class="token comment">/** * 查询操作：使用工具类 */</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">demo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">Statement</span> stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span><span class="token comment">// 获得连接:</span>conn <span class="token operator">=</span> <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建执行SQL语句的对象:</span>stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 编写SQL:</span><span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select * from user"</span><span class="token punctuation">;</span><span class="token comment">// 执行查询:</span>rs <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 遍历结果集:</span><span class="token keyword">while</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">finally</span><span class="token punctuation">&#123;</span><span class="token comment">// 释放资源:</span><span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>rs<span class="token punctuation">,</span> stmt<span class="token punctuation">,</span> conn<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>另一种写法:</p><p><strong>jdbc.properties属性文件</strong></p><p><strong>注意：属性配置文件必须以properties结尾，且存储在src源目录下</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java">driver<span class="token operator">=</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span>url<span class="token operator">=</span>jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>mydbuser<span class="token operator">=</span>rootpassword<span class="token operator">=</span><span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>JDBCUtils.java工具类</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//类文件属性，可以在类文件所有的方法中使用</span>    <span class="token keyword">private</span> <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>      <span class="token keyword">private</span> <span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">/**     * 在当前类文件第一次被加载到JVM时，JVM将会自动调用当前类文件静态语句块     */</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//1. 注册数据库服务器提供的Driver接口实现类</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            <span class="token class-name">ResourceBundle</span> bundle <span class="token operator">=</span> <span class="token class-name">ResourceBundle</span><span class="token punctuation">.</span><span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token string">"jdbc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> driver <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**     * 封装Connection对象创建细节     * @return 数据库连接的对象     */</span>     <span class="token comment">//这里我们选择抛出异常，而不是自行内部处理。是让调用此方法的人知道出现异常时的控制台出现的异常信息</span>    <span class="token keyword">public</span> <span class="token class-name">Connection</span> <span class="token function">creatConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//采用资源绑定器来绑定属性配置文件</span>        <span class="token class-name">ResourceBundle</span> bundle <span class="token operator">=</span> <span class="token class-name">ResourceBundle</span><span class="token punctuation">.</span><span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token string">"jdbc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> url <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> username <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> password <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//2. 创建一个连接通道交给Connection接口的实例对象[Connection]管理</span>        conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> conn<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**     *  封装PreparedStatement对象创建细节     * @param sql sql语句     * @return       */</span>    <span class="token keyword">public</span> <span class="token class-name">PreparedStatement</span> <span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token class-name">String</span> sql<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token function">creatConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3. 创建一个交通工具交给 PreparedStatement 接口的实例对象[PreparedStatement]管理</span>        ps <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//4. 由交通工具在Java工程与数据库服务器之间进行传输，推送SQL命令并带回执行结果</span>        <span class="token keyword">return</span> ps<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**     * 封装PreparedStatement与Connection对象销毁细节     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ps <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                ps<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**     * 封装PreparedStatement与Connection与ResultSet对象销毁细节     * @param rs 查询结果集     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token class-name">ResultSet</span> rs<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>JDBCTest01.java测试</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCTest01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//创建JDBC工具类对象</span>        <span class="token class-name">JdbcUtil</span> util <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JdbcUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select * from studnet where studentid = ?"</span><span class="token punctuation">;</span>            <span class="token comment">//这里由于在工具类中是抛出异常的，那么在调用时再抛出异常给JVM虚拟机就显然不太合理了，此时我们选择try...catch...内部处理</span>            ps <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            ps<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"田七"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            rs <span class="token operator">=</span> ps<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"studentid"</span><span class="token punctuation">)</span> <span class="token operator">+</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"studnetname"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//在finally语句块中的语句必定执行</span>            util<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><hr><p>参考文章:</p><ul><li><p>作者 : Jungle_Rao</p><ul><li>链接：<a href="https://blog.csdn.net/Jungle_Rao/article/details/81274720">https://blog.csdn.net/Jungle_Rao/article/details/81274720</a></li></ul></li><li><p>作者 : Qiao_Zhi</p><ul><li><a href="https://www.cnblogs.com/qlqwjy/p/8227665.html">https://www.cnblogs.com/qlqwjy/p/8227665.html</a></li></ul></li><li><p>作者 : 叫我玉弟大人</p><ul><li><a href="https://www.cnblogs.com/jwyddr/p/11661096.html">https://www.cnblogs.com/jwyddr/p/11661096.html</a></li></ul></li><li><p>作者 : 风大</p><ul><li><a href="https://www.cnblogs.com/fzz9/p/8970210.html">https://www.cnblogs.com/fzz9/p/8970210.html</a></li></ul></li><li><p>作者 : newwaylau</p><ul><li><a href="https://zhuanlan.zhihu.com/p/114709445">https://zhuanlan.zhihu.com/p/114709445</a></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>JDBC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>MySQL</tag>
      
      <tag>数据库</tag>
      
      <tag>JDBC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JDBC练习五</title>
    <link href="/JDBC%E7%BB%83%E4%B9%A0%E4%BA%94.html"/>
    <url>/JDBC%E7%BB%83%E4%B9%A0%E4%BA%94.html</url>
    
    <content type="html"><![CDATA[<h2 id="JDBC练习五"><a href="#JDBC练习五" class="headerlink" title="JDBC练习五"></a>JDBC练习五</h2><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*执行DQL语句*/</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCTest05</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1、注册驱动</span>        <span class="token comment">// 2、建立连接</span>        <span class="token comment">// 3、获取数据库操作对象</span>        <span class="token comment">// 4、执行sql语句</span>        <span class="token comment">// 5、获取查询结果集</span>        <span class="token comment">// 6、释放资源</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            <span class="token class-name">ResourceBundle</span> rb <span class="token operator">=</span> <span class="token class-name">ResourceBundle</span><span class="token punctuation">.</span><span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token string">"jdbc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> driver <span class="token operator">=</span> rb<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> url <span class="token operator">=</span> rb<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> user <span class="token operator">=</span> rb<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> password <span class="token operator">=</span> rb<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>            conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>user<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>            stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            rs <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token string">"select * from student"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">/*String studentid = rs.getString(1);String studentname = rs.getString(2);System.out.println(studentid + "," + studentname);*/</span><span class="token comment">/*// 按下标取出，程序不健壮String studentid = rs.getString("studentid");String studentname = rs.getString("studentname");System.out.println(studentid + "," + studentname);*/</span><span class="token comment">/*// 以指定的格式取出int studentid = rs.getInt(1);String studentname = rs.getString(2);System.out.println(studentid + "," + studentname);*/</span>                <span class="token keyword">int</span> studentid <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"studentid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> studentname <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"studentname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>studentid <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> studentname<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>rs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">try</span><span class="token punctuation">&#123;</span>                    rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">try</span><span class="token punctuation">&#123;</span>                    stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">try</span><span class="token punctuation">&#123;</span>                    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h4><p><img src="https://i.loli.net/2021/09/20/TaORfKSroJmbqQW.png" alt="image-20210920191144745"></p>]]></content>
    
    
    <categories>
      
      <category>JDBC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>数据库</tag>
      
      <tag>JDBC</tag>
      
      <tag>练习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JDBC练习四</title>
    <link href="/JDBC%E7%BB%83%E4%B9%A0%E5%9B%9B.html"/>
    <url>/JDBC%E7%BB%83%E4%B9%A0%E5%9B%9B.html</url>
    
    <content type="html"><![CDATA[<h2 id="JDBC练习四"><a href="#JDBC练习四" class="headerlink" title="JDBC练习四"></a>JDBC练习四</h2><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token comment">/*使用资源绑定器*/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCTest04</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ResourceBundle</span> bundle <span class="token operator">=</span> <span class="token class-name">ResourceBundle</span><span class="token punctuation">.</span><span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token string">"jdbc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> driver <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> url <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> user <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> password <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>            conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>user<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>            stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> count <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token string">"insert into student values(5,'田七')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">1</span><span class="token operator">?</span> <span class="token string">"保存成功"</span><span class="token operator">:</span><span class="token string">"保存失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="资源绑定器"><a href="#资源绑定器" class="headerlink" title="资源绑定器:"></a>资源绑定器:</h4><p><img src="https://i.loli.net/2021/09/20/jr6IOex3mvdcV5U.png" alt="image-20210920184236414"></p><p>资源绑定器内容为:</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">driver<span class="token operator">=</span>com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Driverurl<span class="token operator">=</span>jdbc:mysql:<span class="token comment">//localhost:3306/mydb</span><span class="token keyword">user</span><span class="token operator">=</span>rootpassword<span class="token operator">=</span><span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h4><p><img src="https://i.loli.net/2021/09/20/lrwONW3InbvsJgP.png" alt="image-20210920190549218"></p><p><img src="https://i.loli.net/2021/09/20/rL38H54OPzisGA1.png" alt="image-20210920191031060"></p>]]></content>
    
    
    <categories>
      
      <category>JDBC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>数据库</tag>
      
      <tag>JDBC</tag>
      
      <tag>练习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JDBC练习三</title>
    <link href="/JDBC%E7%BB%83%E4%B9%A0%E4%B8%89.html"/>
    <url>/JDBC%E7%BB%83%E4%B9%A0%E4%B8%89.html</url>
    
    <content type="html"><![CDATA[<h2 id="JDBC练习三"><a href="#JDBC练习三" class="headerlink" title="JDBC练习三"></a>JDBC练习三</h2><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token comment">/*注册驱动的另一种方式*/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCTest03</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 注册驱动</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取连接</span>            <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://localhost:3306/mydb"</span><span class="token punctuation">,</span><span class="token string">"root"</span><span class="token punctuation">,</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h4><p><img src="https://i.loli.net/2021/09/20/txwlaOp4TQKYDrb.png" alt="image-20210920190422815"></p>]]></content>
    
    
    <categories>
      
      <category>JDBC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>数据库</tag>
      
      <tag>JDBC</tag>
      
      <tag>练习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JDBC练习二</title>
    <link href="/JDBC%E7%BB%83%E4%B9%A0%E4%BA%8C.html"/>
    <url>/JDBC%E7%BB%83%E4%B9%A0%E4%BA%8C.html</url>
    
    <content type="html"><![CDATA[<h2 id="JDBC练习二"><a href="#JDBC练习二" class="headerlink" title="JDBC练习二"></a>JDBC练习二</h2><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token comment">/*JDBC完成Delete*/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCTest02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1、注册驱动</span>        <span class="token comment">// 2、获取连接</span>        <span class="token comment">// 3、获取数据库操作对象</span>        <span class="token comment">// 4、执行sql语句</span>        <span class="token comment">// 5、获取查询结果集</span>        <span class="token comment">// 6、释放资源</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Driver</span> driver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">registerDriver</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql://127.0.0.1:3306/mydb"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token punctuation">;</span>            conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>user<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>            stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> count <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token string">"delete from student where studentid = 5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">1</span><span class="token operator">?</span> <span class="token string">"删除成功"</span><span class="token operator">:</span><span class="token string">"删除失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h4><p><img src="https://i.loli.net/2021/09/20/B96qA3IiQC75eG1.png" alt="image-20210920190345003"></p>]]></content>
    
    
    <categories>
      
      <category>JDBC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>数据库</tag>
      
      <tag>JDBC</tag>
      
      <tag>练习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JDBC练习一</title>
    <link href="/JDBC%E7%BB%83%E4%B9%A0%E4%B8%80.html"/>
    <url>/JDBC%E7%BB%83%E4%B9%A0%E4%B8%80.html</url>
    
    <content type="html"><![CDATA[<h2 id="JDBC练习一"><a href="#JDBC练习一" class="headerlink" title="JDBC练习一"></a>JDBC练习一</h2><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCTest01</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">Statement</span> stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span><span class="token comment">// 1、注册驱动</span><span class="token class-name">Driver</span> driver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//多态，父类型引用指向子类型对象</span><span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">registerDriver</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 2、获取连接</span><span class="token comment">/*url包括哪几部分:协议IPPort资源名eg：http://180.101.49.11:80/index.htmlhttp:// 通信协议180.101.49.11 IP地址80 端口号index.html 资源名*/</span><span class="token comment">// static Connection getConnection(String url, String user, String password)</span><span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql://127.0.0.1:3306/mydb"</span><span class="token punctuation">;</span><span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span><span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token punctuation">;</span>conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>user<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"数据库连接对象"</span> <span class="token operator">+</span> conn<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//数据库连接对象com.mysql.jdbc.JDBC4Connection@1ae369b7</span><span class="token comment">// 3、获取数据库操作对象</span><span class="token comment">// Statement createStatement() 创建一个 Statement 对象来将 SQL 语句发送到数据库。</span>            stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 4、执行sql语句</span><span class="token comment">// int executeUpdate(String sql) </span>            <span class="token comment">// 专门执行DML语句</span><span class="token comment">// 返回值是“影响数据库中的记录条数”</span><span class="token keyword">int</span> count <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token string">"insert into student values(5,'田七')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">"保存成功"</span><span class="token operator">:</span><span class="token string">"保存失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 5、处理查询结果集</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span><span class="token comment">// 6、释放资源</span><span class="token comment">// 从小到大依次关闭(后进先出)</span><span class="token keyword">if</span><span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span>stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span>conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h4><p><img src="https://i.loli.net/2021/09/20/lIfcNh39ipdLuSF.png" alt="image-20210920190157499"></p>]]></content>
    
    
    <categories>
      
      <category>JDBC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JDBC</tag>
      
      <tag>练习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>In aggregated query without GROUP BY, expression</title>
    <link href="/In-aggregated-query-without-GROUP-BY-expression-2-of-SELECT-list-contains-nonaggregated-column.html"/>
    <url>/In-aggregated-query-without-GROUP-BY-expression-2-of-SELECT-list-contains-nonaggregated-column.html</url>
    
    <content type="html"><![CDATA[<h1 id="ERROR-1140-42000-In-aggregated-query-without-GROUP-BY-expression-1-of-SELECT-list-contains-nonaggregated-column-‘mydb-student-sname’-this-is-incompatible-with-sql-mode-only-full-group-by"><a href="#ERROR-1140-42000-In-aggregated-query-without-GROUP-BY-expression-1-of-SELECT-list-contains-nonaggregated-column-‘mydb-student-sname’-this-is-incompatible-with-sql-mode-only-full-group-by" class="headerlink" title="ERROR 1140 (42000): In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column ‘mydb.student.sname’; this is incompatible with sql_mode=only_full_group_by"></a>ERROR 1140 (42000): In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column ‘mydb.student.sname’; this is incompatible with sql_mode=only_full_group_by</h1><p>maven项目报错error:<br>expression #2 of SELECT list contains nonaggregated column ‘newhelp.appr.title’; this is incompatible with sql_mode=only_full_group_by</p><p>这是因为随着MySQL版本更新带来的问题，在MySQL5.7版本之后对group by进行了优化。他默认启动改进之后的</p><p>版本启动了ONLY_FULL_GROUP_BY模式。</p><p>这种模式的官方解释：ONLY_FULL_GROUP_BY是MySQL数据库提供的一个sql_mode，通过这个sql_mode来保证</p><p>SQL语句“分组求最值”合法性的检查。这种模式采用了与Oracle、DB2等数据库的处理方式。即不允许select target list</p><p>中出现语义不明确的列。</p><p>通俗的讲就是：对于用到GROUP BY的select语句，查出来的列必须是group by后面声明的列，或者是聚合函数里面的列</p><p>有这样一个数据库的表</p><p>select语句：select id, sum(appr_id) from appr group by id————————————(合法)</p><p>select语句：select id, user_id, sum(appr_id) from appr group by id————————-(合法)</p><p>select语句：select id, sum(appr_id) from appr group by role———————————-(不合法)</p><p>select语句：select id, user_id, sum(appr_id) from appr group by role———————–(不合法)</p><p>select语句：select * from appr group by role——————————————————-(不合法)</p><p>经过大量测试：笔者发现了ONLY_FULL_GROUP_BY这种模式的特点：</p><p>1：只要有聚合函数sum()，count()，max()，avg()等函数就需要用到group by，否则就会报上面的错误。</p><p>2：group by id(id是主键)的时候，select什么都没有问题，包括有聚合函数。</p><p>3：group by role(非主键)的时候，select只能是聚合函数和role(group by的字段),否则报错</p><p>如果我们不想用用ONLY_FULL_GROUP_BY的模式。有两种解决这种问题的方案：</p><p>1：命令行中输入：</p><p>set @@GLOBAL.sql_mode=’’;</p><p>set sql_mode =’STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION</p><p>_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION’;</p><p>不过这种情况治标不治本，一旦mysql重启之后又会恢复。</p><p>2：修改MySQL的配置文件，</p><p>1、windows下找到MySQL的安装目录的my.ini文件，修改其中的配置为不启动ONLY_FULL_GROUP_BY模式</p><p>删掉带有ONLY_FULL_GROUP_BY的模式就ok了，如果没有找到my.ini文件。</p><p>去系统的隐藏文件夹查看，在某个盘下输入%ProgramData%然后搜索MySQL的my.ini文件</p><p>2、linux下找到my.cnf文件，这个是配置MySQL的文件。一般这个文件是在etc文件夹下。</p><p>vi my.cnf 编辑这个文件，然后在图示的位置上加入sql_mode =</p><p>“STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FO</p><p>R_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER”</p><p>然后重启MySQL服务：service mysqld restart</p><p>注意：服务重启之后不一定立即生效，尤其是你买的服务器，存在延时。所以可能等一两个小时才生效。</p><p>goodluck！<br>————————————————<br>版权声明：本文为CSDN博主「不坠青云之志」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_43279637/article/details/84842189">https://blog.csdn.net/qq_43279637/article/details/84842189</a></p>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库错误 ERROR 1366 (HY000) Incorrect string value xD4xF8xBBxAA for column Sname at row 1解决</title>
    <link href="/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%99%E8%AF%AF-ERROR-1366-HY000-Incorrect-string-value-xD4xF8xBBxAA-for-column-Sname-at-row-1%E8%A7%A3%E5%86%B3.html"/>
    <url>/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%99%E8%AF%AF-ERROR-1366-HY000-Incorrect-string-value-xD4xF8xBBxAA-for-column-Sname-at-row-1%E8%A7%A3%E5%86%B3.html</url>
    
    <content type="html"><![CDATA[<h1 id="数据库错误-ERROR-1366-HY000-Incorrect-string-value-‘-xD4-xF8-xBB-xAA’-for-column-‘Sname’-at-row-1解决"><a href="#数据库错误-ERROR-1366-HY000-Incorrect-string-value-‘-xD4-xF8-xBB-xAA’-for-column-‘Sname’-at-row-1解决" class="headerlink" title="数据库错误 ERROR 1366 (HY000): Incorrect string value: ‘\xD4\xF8\xBB\xAA’ for column ‘Sname’ at row 1解决"></a>数据库错误 ERROR 1366 (HY000): Incorrect string value: ‘\xD4\xF8\xBB\xAA’ for column ‘Sname’ at row 1解决</h1><h2 id="一-原因"><a href="#一-原因" class="headerlink" title="一.原因:"></a>一.原因:</h2><p><strong>插入数据时有中文字符出现</strong></p><p><img src="https://i.loli.net/2021/09/16/uzmRlUiPoqD4t5O.png" alt="image-20210916102024311"></p><h2 id="二-解决方案"><a href="#二-解决方案" class="headerlink" title="二.解决方案"></a>二.解决方案</h2><h3 id="1-查看当前服务器状态-status或者-s"><a href="#1-查看当前服务器状态-status或者-s" class="headerlink" title="1.查看当前服务器状态 : status或者\s"></a><strong>1.查看当前服务器状态 : status或者\s</strong></h3><p><img src="https://i.loli.net/2021/09/16/KeMuUb7AorFT15p.png" alt="image-20210916102137870"></p><h3 id="2-修改数据库的默认编码方式"><a href="#2-修改数据库的默认编码方式" class="headerlink" title="2.修改数据库的默认编码方式"></a>2.修改数据库的默认编码方式</h3><p><strong>使用命令:</strong></p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">database</span> mydb <span class="token keyword">character</span> <span class="token keyword">set</span> gbk<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/16/QIypWMUEnLO6kC9.png" alt="image-20210916102622143"></p><p>查看修改是否成功:使用命令：\s或则status；可以看到Db characterset:gbk 设置成功了。</p><p><img src="https://i.loli.net/2021/09/16/y5vbZKAOSuzirLp.png" alt="image-20210916102806165"></p><p>插入数据试一下:</p><p><img src="https://i.loli.net/2021/09/16/qu74RQLrcPCAXZi.png" alt="image-20210916102846671"></p><p><strong>发现依旧报错</strong>.报错的原因是，在修改数据库mydb编码方式前，表department就已经建立了。因此，表department它的编码还是数据库之前默认的编码方式latin1，这个可以通过下面的命令来得到确认：</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">table</span> department<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://i.loli.net/2021/09/16/cH2jxlODGUZyfur.png" alt="image-20210916103049285"></p><p>因此，还需要修改表格的编码方式。</p><p>修改表格的默认编码方式,并插入数据试一下</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> department <span class="token keyword">character</span> <span class="token keyword">set</span> gbk<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>发现还是不行,,,,,,,,,</strong></p><p><img src="https://i.loli.net/2021/09/16/v9zjFwxUNgZ8Rd1.png" alt="image-20210916103531786"></p><p>使用命令:status或\s</p><p><img src="https://i.loli.net/2021/09/16/WRgmEaMIK26fZ1q.png" alt="image-20210916103635099"></p><p>发现表的编码方式已经是gbk了,但是dname的编码仍然是latin1,所以我们应该对dname属性进行编码方式修改,使用命令:</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> department <span class="token keyword">modify</span> dname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">character</span> <span class="token keyword">set</span> gbk<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>发现已经成功了!</strong></p><p><img src="https://i.loli.net/2021/09/16/c4uvOwFfYTDrmkP.png" alt="image-20210916104342876"></p><p><strong>另外</strong>,我们也可以在创建表的时候指定字符集,这里我就不做演示了,感兴趣的小伙伴可以在下方留言.</p><hr><p><strong>还有</strong>我们可以修改mysql默认字符集编码方式</p><p>找到Mysql数据库安装路径,打开my.ini配置文件</p><p><img src="https://i.loli.net/2021/09/16/EnbpUrYzPtwGAVD.png" alt="image-20210916090034924"></p><p>修改默认字符集编码方式为gbk,(没有就加上)</p><p><img src="https://i.loli.net/2021/09/16/cQwkR6ErhTsNUPJ.png" alt="image-20210916095837093"></p><p>重新登录到mysql数据库就可以了</p>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>又学MySQL</title>
    <link href="/%E5%8F%88%E5%AD%A6MySQL.html"/>
    <url>/%E5%8F%88%E5%AD%A6MySQL.html</url>
    
    <content type="html"><![CDATA[<h1 id="又学MySQL"><a href="#又学MySQL" class="headerlink" title="又学MySQL"></a>又学MySQL</h1><h2 id="一、数据库的基本操作"><a href="#一、数据库的基本操作" class="headerlink" title="一、数据库的基本操作"></a>一、数据库的基本操作</h2><h3 id="1-1、启动"><a href="#1-1、启动" class="headerlink" title="1.1、启动"></a>1.1、启动</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">net <span class="token keyword">start</span> mysql <span class="token comment">-- 启动</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="1-2、断开"><a href="#1-2、断开" class="headerlink" title="1.2、断开"></a>1.2、断开</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">net stop mysql <span class="token comment">-- 断开</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="1-3、连接"><a href="#1-3、连接" class="headerlink" title="1.3、连接"></a>1.3、连接</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p <span class="token comment">-- 连接数据库</span>Enter password:<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="1-4、退出"><a href="#1-4、退出" class="headerlink" title="1.4、退出"></a>1.4、退出</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exit</span> <span class="token comment">-- 退出</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="1-5、创建数据库"><a href="#1-5、创建数据库" class="headerlink" title="1.5、创建数据库"></a>1.5、创建数据库</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> 数据库名<span class="token punctuation">;</span><span class="token comment">-- 例如，创建一个叫db1的数据库</span><span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">database</span> db1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="1-6、删除数据库"><a href="#1-6、删除数据库" class="headerlink" title="1.6、删除数据库"></a>1.6、删除数据库</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">drop</span> datebase 数据库名<span class="token comment">-- 例如，删除db1数据库</span><span class="token keyword">drop</span> <span class="token keyword">database</span> db1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="1-7、切换数据库"><a href="#1-7、切换数据库" class="headerlink" title="1.7、切换数据库"></a>1.7、切换数据库</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> 数据库名<span class="token comment">-- 例如，使用db1数据库</span><span class="token keyword">use</span> db1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="1-8、查询出MySQL中所有的数据库"><a href="#1-8、查询出MySQL中所有的数据库" class="headerlink" title="1.8、查询出MySQL中所有的数据库"></a>1.8、查询出MySQL中所有的数据库</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="1-9、查看当前使用的数据库"><a href="#1-9、查看当前使用的数据库" class="headerlink" title="1.9、查看当前使用的数据库"></a>1.9、查看当前使用的数据库</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h2 id="二、数据表的基本操作"><a href="#二、数据表的基本操作" class="headerlink" title="二、数据表的基本操作"></a>二、数据表的基本操作</h2><h3 id="2-1、创建数据表"><a href="#2-1、创建数据表" class="headerlink" title="2.1、创建数据表"></a>2.1、创建数据表</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> 表名<span class="token punctuation">(</span>     字段<span class="token number">1</span> 字段类型<span class="token punctuation">,</span>     字段<span class="token number">2</span> 字段类型<span class="token punctuation">,</span>     …     字段n 字段类型<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 例如，创建一个student表</span> <span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span> id <span class="token keyword">int</span><span class="token punctuation">,</span> name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> birthday <span class="token keyword">date</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="2-2、查看数据表"><a href="#2-2、查看数据表" class="headerlink" title="2.2、查看数据表"></a>2.2、查看数据表</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span> <span class="token comment">-- 查看当前数据库中所有表</span><span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">;</span> <span class="token comment">-- 查student表的基本信息</span><span class="token keyword">desc</span> student<span class="token punctuation">;</span> <span class="token comment">-- 查看student表的字段信息</span><span class="token comment">-- PS：此处desc是describe的缩写，用法： desc 表名/查询语句 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="2-3、修改数据表"><a href="#2-3、修改数据表" class="headerlink" title="2.3、修改数据表"></a>2.3、修改数据表</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">rename</span> <span class="token keyword">to</span> stu<span class="token punctuation">;</span> <span class="token comment">-- 修改student表名为stu</span><span class="token keyword">alter</span> <span class="token keyword">table</span> stu change name sname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- 修改stu表name字段名为sname</span><span class="token keyword">alter</span> <span class="token keyword">table</span> stu <span class="token keyword">modify</span> sname <span class="token keyword">int</span><span class="token punctuation">;</span> <span class="token comment">-- 修改sname字段数据类型为int</span><span class="token comment">-- PS：此处modify意为修改、调整的意思。</span><span class="token keyword">alter</span> <span class="token keyword">table</span> stu <span class="token keyword">add</span> address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- 增加address字段</span><span class="token keyword">alter</span> <span class="token keyword">table</span> stu <span class="token keyword">drop</span> address<span class="token punctuation">;</span> <span class="token comment">-- 删除stu表中address字段</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="2-4、删除数据表"><a href="#2-4、删除数据表" class="headerlink" title="2.4、删除数据表"></a>2.4、删除数据表</h3><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">table</span> 表名<span class="token punctuation">;</span><span class="token comment">-- 例如，删除stu数据表</span><span class="token keyword">drop</span> <span class="token keyword">table</span> stu<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="三、数据表的约束"><a href="#三、数据表的约束" class="headerlink" title="三、数据表的约束"></a>三、数据表的约束</h2><table><thead><tr><th>约束条件</th><th>说明</th></tr></thead><tbody><tr><td>PRIMARY KEY</td><td>主键约束用于唯一标识对应的记录</td></tr><tr><td>FOREIGN KEY</td><td>外键约束</td></tr><tr><td>NOT NULL</td><td>非空约束</td></tr><tr><td>UNIQUE</td><td>唯一性约束</td></tr><tr><td>DEFAULT</td><td>默认值约束，用于设置字段的默认值</td></tr></tbody></table><p>以上五种约束条件针对表中字段进行限制从而保证数据表中数据的正确性和唯一性。换句话说，表的约束实际上就是表中数据的限制条件。</p><h3 id="3-1、主键约束"><a href="#3-1、主键约束" class="headerlink" title="3.1、主键约束"></a>3.1、主键约束</h3><p>主键约束即primary key用于唯一的标识表中的每一行。被标识为主键的数据在表中是唯一的且其值不能为空。这点类似于我们每个人都有一个身份证号，并且这个身份证号是唯一的。</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 主键约束基本语法：</span>字段名 数据类型 <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">;</span><span class="token comment">-- 设置主键约束(primary key)的第一种方式</span><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 设置主键约束(primary key)的第二种方式</span><span class="token keyword">create</span> <span class="token keyword">table</span> student01<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="3-2、非空约束"><a href="#3-2、非空约束" class="headerlink" title="3.2、非空约束"></a>3.2、非空约束</h3><p>非空约束即 NOT NULL指的是字段的值不能为空</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 基本的语法格式</span>字段名 数据类型 <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span class="token comment">-- 例如，给name字段加上非空约束</span><span class="token keyword">create</span> <span class="token keyword">table</span> student02<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="3-3、默认值约束"><a href="#3-3、默认值约束" class="headerlink" title="3.3、默认值约束"></a>3.3、默认值约束</h3><p>默认值约束即DEFAULT用于给数据表中的字段指定默认值，即当在表中插入一条新记录时若未给该字段赋值，那么，数据库系统会自动为这个字段插人默认值</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 基本的语法格式</span>字段名 数据类型 <span class="token keyword">DEFAULT</span> 默认值；<span class="token comment">-- 例如，给字段gender添加默认值约束</span><span class="token keyword">create</span> <span class="token keyword">table</span> student03<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="3-4、唯一性约束"><a href="#3-4、唯一性约束" class="headerlink" title="3.4、唯一性约束"></a>3.4、唯一性约束</h3><p>唯一性约束即UNIQUE用于保证数据表中字段的唯一性，即表中字段的值不能重复出现</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 基本的语法格式</span>字段名 数据类型 <span class="token keyword">UNIQUE</span><span class="token punctuation">;</span><span class="token comment">-- 例如，给字段name添加唯一性约束</span><span class="token keyword">create</span> <span class="token keyword">table</span> student04<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">unique</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="3-5、外键约束"><a href="#3-5、外键约束" class="headerlink" title="3.5、外键约束"></a>3.5、外键约束</h3><p>外键约束即FOREIGN KEY常用于多张表之间的约束</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 在创建数据表时语法如下：</span><span class="token keyword">CONSTRAINT</span> 外键名 <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>从表外键字段<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> 主表 <span class="token punctuation">(</span>主键字段<span class="token punctuation">)</span><span class="token comment">-- 将创建数据表创号后语法如下：</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 从表名 <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> 外键名 <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>从表外键字段<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> 主表 <span class="token punctuation">(</span>主键字段<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- PS：constraint意为限制</span><span class="token comment">-- 例如：</span><span class="token comment">-- 创建一个学生表</span><span class="token keyword">create</span> <span class="token keyword">table</span> student05<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 创建一个班级表</span><span class="token keyword">create</span> <span class="token keyword">table</span> class<span class="token punctuation">(</span>classid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>studentid <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 学生表作为主表，班级表作为副表设置外键</span><span class="token keyword">alter</span> <span class="token keyword">table</span> class <span class="token keyword">add</span> <span class="token keyword">constraint</span> fk_class_studentid <span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>studentid<span class="token punctuation">)</span> <span class="token keyword">references</span> student05<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>建立外键是为了保证数据的完整和统一性。但是，如果主表中的数据被删除或修改从表中对应的数据，从表中对应的数据也应该被删除，否则数据库中会存在很多无意义的垃圾数据</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 删除外键</span><span class="token keyword">alter</span> <span class="token keyword">table</span> 从表名 <span class="token keyword">drop</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> 外键名<span class="token punctuation">;</span><span class="token comment">-- 例如，删除班级表外键</span><span class="token keyword">alter</span> <span class="token keyword">table</span> class <span class="token keyword">drop</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> fk_class_studentid<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>关于外键约束需要注意的细节</strong></p><p>1、从表里的外键通常为主表的主键<br>2、从表里外键的数据类型必须与主表中主键的数据类型一致<br>3、主表发生变化时应注意主表与从表的数据一致性问题</p><h2 id="四、数据表插入数据"><a href="#四、数据表插入数据" class="headerlink" title="四、数据表插入数据"></a>四、数据表插入数据</h2><p>在MySQL通过INSERT语句向数据表中插入数据</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span> id <span class="token keyword">int</span><span class="token punctuation">,</span> name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> age <span class="token keyword">int</span><span class="token punctuation">,</span> gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="4-1、为表中所有字段插入数据"><a href="#4-1、为表中所有字段插入数据" class="headerlink" title="4.1、为表中所有字段插入数据"></a>4.1、为表中所有字段插入数据</h3><p>每个字段与其值是严格一一对应的。也就是说：每个值、值的顺序、值的类型必须与对应的字段相匹配。但是，各字段也无须与其在表中定义的顺序一致，它们只要与 VALUES中值的顺序一致即可</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 基本的语法格式</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名（字段名<span class="token number">1</span><span class="token punctuation">,</span>字段名<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>值 <span class="token number">1</span><span class="token punctuation">,</span>值 <span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 例如，向学生表中插入一条学生信息</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'bob'</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="4-2、为表中指定字段插入数据"><a href="#4-2、为表中指定字段插入数据" class="headerlink" title="4.2、为表中指定字段插入数据"></a>4.2、为表中指定字段插入数据</h3><p>插入数据的方法基本和为表中所有字段插入数据，一样，只是需要插入的字段由你自己指定</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 基本的语法格式</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名（字段名<span class="token number">1</span><span class="token punctuation">,</span>字段名<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>值 <span class="token number">1</span><span class="token punctuation">,</span>值 <span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 例如，向学生表中插入一条学生信息</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'lak'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="4-3、同时插入多条记录"><a href="#4-3、同时插入多条记录" class="headerlink" title="4.3、同时插入多条记录"></a>4.3、同时插入多条记录</h3><p>在该方式中：(字段名1,字段名2,…)是可选的，它用于指定插人的字段名；(值 1,值 2,…),(值 1,值 2,…)表示要插人的记录，该记录可有多条并且每条记录之间用逗号隔开</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 基本的语法格式</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名 <span class="token punctuation">[</span><span class="token punctuation">(</span>字段名<span class="token number">1</span><span class="token punctuation">,</span>字段名<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">VALUES</span> <span class="token punctuation">(</span>值 <span class="token number">1</span><span class="token punctuation">,</span>值 <span class="token number">2</span><span class="token punctuation">,</span>…<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>值 <span class="token number">1</span><span class="token punctuation">,</span>值 <span class="token number">2</span><span class="token punctuation">,</span>…<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span><span class="token comment">-- 例如，向学生表中插入多条学生信息</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'lucy'</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'jack'</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'tom'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="五、更新数据"><a href="#五、更新数据" class="headerlink" title="五、更新数据"></a>五、更新数据</h2><p>在MySQL通过UPDATE语句向数据表中更新数据</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span> id <span class="token keyword">int</span><span class="token punctuation">,</span> name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> age <span class="token keyword">int</span><span class="token punctuation">,</span> gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 基本的语法格式</span> <span class="token comment">-- 在该语法中：字段名1、字段名2…用于指定要更新的字段名称；值1、值 2…用于表示字段的新数据；WHERE 条件表达式 是可选的，它用于指定更新数据需要满足的条件</span><span class="token keyword">UPDATE</span> 表名 <span class="token keyword">SET</span> 字段名<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">[</span><span class="token punctuation">,</span>字段名<span class="token number">2</span> <span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">,</span>…<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">WHERE</span> 条件表达式<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">-- 1、UPDATE更新部分数据</span><span class="token comment">-- 将name为tom的记录的age设置为20并将其gender设置为female</span><span class="token keyword">update</span> student <span class="token keyword">set</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>gender<span class="token operator">=</span><span class="token string">'female'</span> <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'tom'</span><span class="token punctuation">;</span><span class="token comment">-- 2、UPDATE更新全部数据</span><span class="token comment">-- 将所有记录的age设置为18</span><span class="token keyword">update</span> student <span class="token keyword">set</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="六、删除数据"><a href="#六、删除数据" class="headerlink" title="六、删除数据"></a>六、删除数据</h2><p>在MySQL通过DELETE语句删除数据表中的数据</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">TRUNCATE</span> 删除数据<span class="token keyword">truncate</span> <span class="token keyword">table</span> student<span class="token punctuation">;</span> <span class="token comment">-- 创建学生表</span> <span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span> id <span class="token keyword">int</span><span class="token punctuation">,</span> name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> age <span class="token keyword">int</span><span class="token punctuation">,</span> gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">-- 插入数据</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'lucy'</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'jack'</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'tom'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'sal'</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'sun'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">'sad'</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'sam'</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- 基本的语法格式</span> <span class="token comment">-- 在该语法中：表名用于指定要执行删除操作的表；[WHERE 条件表达式]为可选参数用于指定删除的条件。</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> 表名 <span class="token punctuation">[</span><span class="token keyword">WHERE</span> 条件表达式<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">-- 1、DELETE删除部分数据</span><span class="token comment">-- 删除age等于14的所有记录</span><span class="token keyword">delete</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> age<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">;</span><span class="token comment">-- 2、DELETE删除全部数据</span><span class="token comment">-- 删除student表中的所有记录</span><span class="token keyword">delete</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span class="token comment">-- 3、TRUNCATE删除数据</span><span class="token keyword">truncate</span> <span class="token keyword">table</span> student<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>TRUNCATE和DETELE的区别</strong><br>TRUNCATE和DETELE都能实现删除表中的所有数据的功能，但两者也是有区别的：<br>1、DELETE语句后可跟WHERE子句，可通过指定WHERE子句中的条件表达式只删除满足条件的部分记录；但是，TRUNCATE语句只能用于删除表中的所有记录。<br>2、使用TRUNCATE语句删除表中的数据后，再次向表中添加记录时自动增加字段的默认初始值重新由1开始；使用DELETE语句删除表中所有记录后，再次向表中添加记录时自动增加字段的值为删除时该字段的最大值加1<br>3、DELETE语句是DML语句，TRUNCATE语句通常被认为是DDL语句</p><h2 id="七、MySQL数据表查询语句"><a href="#七、MySQL数据表查询语句" class="headerlink" title="七、MySQL数据表查询语句"></a>七、MySQL数据表查询语句</h2><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 创建数据库</span><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> mydb<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> mydb<span class="token punctuation">;</span><span class="token keyword">USE</span> mydb<span class="token punctuation">;</span><span class="token comment">-- 创建student表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student <span class="token punctuation">(</span>    sid <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    sname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    age <span class="token keyword">INT</span><span class="token punctuation">,</span>    gender <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向student表插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1001'</span><span class="token punctuation">,</span> <span class="token string">'lili'</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1002'</span><span class="token punctuation">,</span> <span class="token string">'wang'</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1003'</span><span class="token punctuation">,</span> <span class="token string">'tywd'</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1004'</span><span class="token punctuation">,</span> <span class="token string">'hfgs'</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1005'</span><span class="token punctuation">,</span> <span class="token string">'qwer'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1006'</span><span class="token punctuation">,</span> <span class="token string">'zxsd'</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1007'</span><span class="token punctuation">,</span> <span class="token string">'hjop'</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1008'</span><span class="token punctuation">,</span> <span class="token string">'tyop'</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1009'</span><span class="token punctuation">,</span> <span class="token string">'nhmk'</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1010'</span><span class="token punctuation">,</span> <span class="token string">'xdfv'</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="7-1、简单查询"><a href="#7-1、简单查询" class="headerlink" title="7.1、简单查询"></a>7.1、简单查询</h3><p>不含where的select语句</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 1、查询所有字段</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span class="token comment">-- 2、查询指定字段（sid、sname）</span><span class="token keyword">select</span> sid<span class="token punctuation">,</span>sname <span class="token keyword">from</span> student<span class="token punctuation">;</span><span class="token comment">-- 3、常数的查询日期标记</span><span class="token keyword">select</span> sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span><span class="token string">'2021-03-02'</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span class="token comment">-- 4、从查询结果中过滤重复数据（DISTINCT）</span><span class="token comment">-- 注：在SELECT查询语句中DISTINCT关键字只能用在第一个所查列名之前（distinct必须放在开头）。</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> gender <span class="token keyword">from</span> student<span class="token punctuation">;</span><span class="token comment">-- 5、在SELECT查询语句中使用加减乘除运算符，例如，查询学生10年后的年龄</span> <span class="token keyword">select</span> sname<span class="token punctuation">,</span>age<span class="token operator">+</span><span class="token number">10</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="7-2、条件查询"><a href="#7-2、条件查询" class="headerlink" title="7.2、条件查询"></a>7.2、条件查询</h3><table><thead><tr><th>关系运算符</th><th>说明</th></tr></thead><tbody><tr><td>=</td><td>等于</td></tr><tr><td>&lt;&gt;</td><td>不等于</td></tr><tr><td>!=</td><td>不等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr></tbody></table><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 1、使用关系运算符查询</span><span class="token comment">-- 查询年龄等于或大于17的学生的信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> age<span class="token operator">>=</span><span class="token number">17</span><span class="token punctuation">;</span><span class="token comment">-- 2、使用IN关键字查询</span><span class="token comment">-- IN关键字用于判断某个字段的值是否在指定集合中。如果字段的值恰好在指定的集合中，则将字段所在的记录将査询出来</span><span class="token comment">-- 例如，查询sid为S_1002和S_1003的学生信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> sid <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'S_1002'</span><span class="token punctuation">,</span><span class="token string">'S_1003'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 查询sid为S_1001以外的学生的信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> sid <span class="token operator">not</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'S_1001'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 3、使用BETWEEN AND关键字查询</span><span class="token comment">-- BETWEEN AND用于判断某个字段的值是否在指定的范围之内。如果字段的值在指定范围内，则将所在的记录将查询出来</span><span class="token comment">-- 例如，查询15到18岁的学生信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> age <span class="token operator">between</span> <span class="token number">15</span> <span class="token operator">and</span> <span class="token number">18</span><span class="token punctuation">;</span><span class="token comment">-- 查询不是15到18岁的学生信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> age <span class="token operator">not</span> <span class="token operator">between</span> <span class="token number">15</span> <span class="token operator">and</span> <span class="token number">18</span><span class="token punctuation">;</span><span class="token comment">-- 4、使用空值查询</span><span class="token comment">-- 在MySQL中，使用 IS NULL关键字判断字段的值是否为空值。请注意：空值NULL不同于0，也不同于空字符串</span><span class="token comment">-- 例如，查询sname不为空值的学生信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> sname <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span><span class="token comment">-- 5、使用AND关键字查询</span><span class="token comment">-- 在MySQL中可使用AND关键字可以连接两个或者多个查询条件。</span><span class="token comment">-- 例如，查询年纪大于15且性别为male的学生信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> age<span class="token operator">></span><span class="token number">15</span> <span class="token operator">and</span> gender<span class="token operator">=</span><span class="token string">'male'</span><span class="token punctuation">;</span><span class="token comment">-- 6、使用OR关键字查询</span><span class="token comment">-- 在使用SELECT语句查询数据时可使用OR关键字连接多个査询条件。在使用OR关键字时，只要记录满足其中任意一个条件就会被查询出来</span><span class="token comment">-- 例如，查询年纪大于15或者性别为male的学生信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> age<span class="token operator">></span><span class="token number">15</span> <span class="token operator">or</span> gender<span class="token operator">=</span><span class="token string">'male'</span><span class="token punctuation">;</span><span class="token comment">-- 7、使用LIKE关键字查询进行模糊查询（%、_）</span><span class="token comment">-- MySQL中可使用LIKE关键字可以判断两个字符串是否相匹配</span><span class="token comment">-- 例如，查询sname中与wang匹配的学生信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> sname <span class="token operator">like</span> <span class="token string">'wang'</span><span class="token punctuation">;</span><span class="token comment">-- 查询学生姓名以li开始的记录，使用%（%用于匹配任意长度的字符串。例如，字符串“a%”匹配以字符a开始任意长度的字符串）</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> sname <span class="token operator">like</span> <span class="token string">'li%'</span><span class="token punctuation">;</span><span class="token comment">-- 查询学生姓名以g结尾的记录</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> sname <span class="token operator">like</span> <span class="token string">'%g'</span><span class="token punctuation">;</span><span class="token comment">-- 查询学生姓名包含s的记录</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> sname <span class="token operator">like</span> <span class="token string">'%s%'</span><span class="token punctuation">;</span><span class="token comment">-- 查询学生姓名以zx开头且长度为4的记录，使用_（下划线通配符只匹配单个字符，如果要匹配多个字符，需要连续使用多个下划线通配符。例如，字符串“ab_”匹配以字符串“ab”开始长度为3的字符串，如abc、abp等等）</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> sname <span class="token operator">like</span> <span class="token string">'zx__'</span><span class="token punctuation">;</span><span class="token comment">-- 8、使用LIMIT限制查询结果的数量</span><span class="token comment">-- 当执行查询数据时可能会返回很多条记录，而用户需要的数据可能只是其中的一条或者几条</span><span class="token comment">-- 例如，查询学生表中前三行同学,从第0行开始,查询3行数据</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">limit</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">-- limit 3 等价于limit 0,3</span><span class="token comment">-- 查询学生表从索引从6取10行数据的同</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">limit</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token comment">-- 9、使用GROUP BY进行分组查询</span><span class="token comment">-- GROUP BY 子句可像切蛋糕一样将表中的数据进行分组，再进行查询等操作。换言之，可通俗地理解为：通过GROUP BY将原来的表拆分成了几张小表</span><span class="token comment">-- 创建数据库</span><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> mydb<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> mydb<span class="token punctuation">;</span><span class="token keyword">USE</span> mydb<span class="token punctuation">;</span><span class="token comment">-- 创建员工表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> employee <span class="token punctuation">(</span>    id <span class="token keyword">int</span><span class="token punctuation">,</span>    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    salary <span class="token keyword">int</span><span class="token punctuation">,</span>    departmentnumber <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向员工表中插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'tome'</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'lucy'</span><span class="token punctuation">,</span><span class="token number">9000</span><span class="token punctuation">,</span><span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'joke'</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">,</span><span class="token number">1003</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'wang'</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token number">1004</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'chen'</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'yukt'</span><span class="token punctuation">,</span><span class="token number">7000</span><span class="token punctuation">,</span><span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">'rett'</span><span class="token punctuation">,</span><span class="token number">6000</span><span class="token punctuation">,</span><span class="token number">1003</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'mujk'</span><span class="token punctuation">,</span><span class="token number">4000</span><span class="token punctuation">,</span><span class="token number">1004</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">'poik'</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- GROUP BY和聚合函数一起使用</span><span class="token comment">-- 例如，统计各部门员工个数 </span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> departmentnumber <span class="token keyword">from</span> employee <span class="token keyword">group</span> <span class="token keyword">by</span> departmentnumber<span class="token punctuation">;</span><span class="token comment">-- 例如，统计部门编号大于1001的各部门员工个数</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> departmentnumber <span class="token keyword">from</span> employee <span class="token keyword">where</span> departmentnumber<span class="token operator">></span><span class="token number">1001</span> <span class="token keyword">group</span> <span class="token keyword">by</span> departmentnumber<span class="token punctuation">;</span><span class="token comment">-- GROUP BY和聚合函数以及HAVING一起使用</span><span class="token comment">-- 例如，统计工资总和大于8000的部门</span><span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>departmentnumber <span class="token keyword">from</span> employee <span class="token keyword">group</span> <span class="token keyword">by</span> departmentnumber <span class="token keyword">having</span> <span class="token function">sum</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">8000</span><span class="token punctuation">;</span><span class="token comment">-- 10、使用ORDER BY对查询结果排序</span><span class="token comment">-- 从表中査询出来的数据可能是无序的或者其排列顺序不是我们期望的。为此，我们可以使用ORDER BY对查询结果进行排序</span><span class="token comment">-- 基本的语法格式，在该语法中：字段名1、字段名2是查询结果排序的依据；参数 ASC表示按照升序排序，DESC表示按照降序排序；默认情况下，按照ASC方式排序。通常情况下，ORDER BY子句位于整个SELECT语句的末尾</span><span class="token keyword">SELECT</span> 字段名<span class="token number">1</span><span class="token punctuation">,</span>字段名<span class="token number">2</span><span class="token punctuation">,</span>…<span class="token keyword">FROM</span> 表名<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 字段名<span class="token number">1</span> <span class="token punctuation">[</span><span class="token keyword">ASC</span> 丨 <span class="token keyword">DESC</span><span class="token punctuation">]</span><span class="token punctuation">,</span>字段名<span class="token number">2</span> <span class="token punctuation">[</span><span class="token keyword">ASC</span> <span class="token operator">|</span> <span class="token keyword">DESC</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">-- 例如，查询所有学生并按照年纪大小升序排列</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employee <span class="token keyword">order</span> <span class="token keyword">by</span> salary <span class="token keyword">asc</span><span class="token punctuation">;</span><span class="token comment">-- 例如，查询所有学生并按照年纪大小降序排列</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employee <span class="token keyword">order</span> <span class="token keyword">by</span> salary <span class="token keyword">desc</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="7-3、多表连接查询"><a href="#7-3、多表连接查询" class="headerlink" title="7.3、多表连接查询"></a>7.3、多表连接查询</h3><p><img src="https://i.loli.net/2021/09/16/TVobUlQ3GPRgwW9.png" alt="1941988-20200227015241978-101911609"></p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 1、交叉连接查询</span><span class="token comment">-- 交叉连接返回的结果是被连接的两个表中所有数据行的笛卡儿积；比如：集合A=&#123;a,b&#125;，集合B=&#123;0,1,2&#125;，则集合A和B的笛卡尔积为&#123;(a,0),(a,1),(a,2),(b,0),(b,1),(b,2)&#125;。所以，交叉连接也被称为笛卡尔连接</span><span class="token comment">-- 基本的语法格式，在该语法中：CROSS JOIN用于连接两个要查询的表，通过该语句可以查询两个表中所有的数据组合。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">CROSS</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">-- 2、内连接查询</span><span class="token comment">-- 内连接(Inner Join)又称简单连接或自然连接，是一种非常常见的连接查询。内连接使用比较运算符对两个表中的数据进行比较并列出与连接条件匹配的数据行，组合成新的 记录。也就是说在内连接查询中只有满足条件的记录才能出现在查询结果中</span><span class="token comment">-- 基本的语法格式，在该语法中：INNER JOIN用于连接两个表，ON来指定连接条件；其中INNER可以省略。</span><span class="token keyword">SELECT</span> 查询字段<span class="token number">1</span><span class="token punctuation">,</span>查询字段<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token punctuation">[</span><span class="token keyword">INNER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 表<span class="token number">1.</span>关系字段<span class="token operator">=</span>表<span class="token number">2.</span>关系字段<span class="token comment">-- 若存在数据库mydb则删除</span><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> mydb<span class="token punctuation">;</span><span class="token comment">-- 创建数据库mydb</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> mydb<span class="token punctuation">;</span><span class="token comment">-- 选择数据库mydb</span><span class="token keyword">USE</span> mydb<span class="token punctuation">;</span><span class="token comment">-- 创建部门表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> department<span class="token punctuation">(</span>  did <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>   dname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 创建员工表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> employee <span class="token punctuation">(</span>  eid <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>   ename <span class="token keyword">varchar</span> <span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   eage <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   departmentid <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向部门表插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> department <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span><span class="token string">'财务部'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> department <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1002</span><span class="token punctuation">,</span><span class="token string">'技术部'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> department <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1003</span><span class="token punctuation">,</span><span class="token string">'行政部'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> department <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">'生活部'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向员工表插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">1003</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'李四'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'王五'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employee <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'赵六'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">1004</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 例如，查询员工姓名及其所属部门名称</span><span class="token keyword">select</span> ename<span class="token punctuation">,</span>dname <span class="token keyword">from</span> department <span class="token keyword">inner</span> <span class="token keyword">join</span> employee <span class="token keyword">on</span> did<span class="token operator">=</span>departmentid<span class="token punctuation">;</span><span class="token comment">-- 也可以这么写,都可以</span><span class="token keyword">select</span> employee<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>department<span class="token punctuation">.</span>dname <span class="token keyword">from</span> department <span class="token keyword">inner</span> <span class="token keyword">join</span> employee <span class="token keyword">on</span> department<span class="token punctuation">.</span>did<span class="token operator">=</span>employee<span class="token punctuation">.</span>departmentid<span class="token punctuation">;</span><span class="token comment">-- 3、外连接查询</span><span class="token comment">-- 在使用内连接查询时我们发现：返回的结果只包含符合查询条件和连接条件的数据。但是，有时还需要在返回查询结果中不仅包含符合条件的数据，而且还包括左表、右表或两个表中的所有数据，此时我们就需要使用外连接查询。外连接又分为左(外)连接和右(外)连接</span><span class="token comment">-- 基本的语法格式，由此可见，外连接的语法格式和内连接非常相似，只不过使用的是LEFT [OUTER] JOIN、RIGHT [OUTER] JOIN关键字。其中，关键字左边的表被称为左表，关键字右边的表被称为右表；OUTER可以省略。</span><span class="token comment">-- 在使用左(外)连接和右(外)连接查询时，查询结果是不一致的，具体如下：</span><span class="token comment">-- （1）LEFT [OUTER] JOIN 左(外)连接：返回包括左表中的所有记录和右表中符合连接条件的记录。</span><span class="token comment">-- （2）RIGHT [OUTER] JOIN 右(外)连接：返回包括右表中的所有记录和左表中符合连接条件的记录</span><span class="token keyword">SELECT</span> 查询字段<span class="token number">1</span><span class="token punctuation">,</span>查询字段<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">LEFT</span> <span class="token operator">|</span> <span class="token keyword">RIGHT</span> <span class="token punctuation">[</span><span class="token keyword">OUTER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 表<span class="token number">1.</span>关系字段<span class="token operator">=</span>表<span class="token number">2.</span>关系字段 <span class="token keyword">WHERE</span> 条件<span class="token comment">-- 若存在数据库mydb则删除</span><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> mydb<span class="token punctuation">;</span><span class="token comment">-- 创建数据库mydb</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> mydb<span class="token punctuation">;</span><span class="token comment">-- 选择数据库mydb</span><span class="token keyword">USE</span> mydb<span class="token punctuation">;</span><span class="token comment">-- 创建班级表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> class<span class="token punctuation">(</span>  cid <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>   cname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 创建学生表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student <span class="token punctuation">(</span>  sid <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>   sname <span class="token keyword">varchar</span> <span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   sage <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   classid <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向班级表插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span><span class="token string">'Java'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1002</span><span class="token punctuation">,</span><span class="token string">'C++'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1003</span><span class="token punctuation">,</span><span class="token string">'Python'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">'PHP'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向学生表插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'李四'</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'王五'</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'赵六'</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">1003</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'Jack'</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">1009</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 准备这组数据有一定的特点，为的是让大家直观的看出左连接与右连接的不同之处</span><span class="token comment">-- （1）班级编号为1004的PHP班级没有学生</span><span class="token comment">-- （2）学号为5的学生王跃跃班级编号为1009，该班级编号并不在班级表中</span><span class="token comment">-- 3.1、左（外）连接查询</span><span class="token comment">-- 左(外)连接的结果包括LEFT JOIN子句中指定的左表的所有记录，以及所有满足连接条件的记录。如果左表的某条记录在右表中不存在则在右表中显示为空</span><span class="token comment">-- 例如，查询每个班的班级ID、班级名称及该班的所有学生的名字</span><span class="token keyword">select</span> class<span class="token punctuation">.</span>cid<span class="token punctuation">,</span>class<span class="token punctuation">.</span>cname<span class="token punctuation">,</span>student<span class="token punctuation">.</span>sname <span class="token keyword">from</span> class <span class="token keyword">left</span> <span class="token keyword">join</span> student <span class="token keyword">on</span> class<span class="token punctuation">.</span>cid<span class="token operator">=</span>student<span class="token punctuation">.</span>classid<span class="token punctuation">;</span><span class="token comment">-- 展示结果分析：</span><span class="token comment">-- （1）分别找出Java班、C++班、Python班的学生</span><span class="token comment">-- （2）右表的王跃跃不满足查询条件故其没有出现在查询结果中</span><span class="token comment">-- （3）虽然左表的PHP班没有学生，但是任然显示了PHP的信息；但是，它对应的学生名字为NULL</span><span class="token comment">-- 3.2、右（外）连接查询</span><span class="token comment">-- 右(外)连接的结果包括RIGHT JOIN子句中指定的右表的所有记录，以及所有满足连接条件的记录。如果右表的某条记录在左表中没有匹配，则左表将返回空值</span><span class="token comment">-- 例如，查询每个班的班级ID、班级名称及该班的所有学生的名字</span><span class="token keyword">select</span> class<span class="token punctuation">.</span>cid<span class="token punctuation">,</span>class<span class="token punctuation">.</span>cname<span class="token punctuation">,</span>student<span class="token punctuation">.</span>sname <span class="token keyword">from</span> class <span class="token keyword">right</span> <span class="token keyword">join</span> student <span class="token keyword">on</span> class<span class="token punctuation">.</span>cid<span class="token operator">=</span>student<span class="token punctuation">.</span>classid<span class="token punctuation">;</span><span class="token comment">-- 展示结果分析：</span><span class="token comment">-- （1）分别找出Java班、C++班、Python班的学生</span><span class="token comment">-- （2）左表的PHP班不满足查询条件故其没有出现在查询结果中</span><span class="token comment">-- （3）虽然右表的jack没有对应班级，但是任然显示王跃跃的信息；但是，它对应的班级以及班级编号均为NULL</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="7-4、子查询"><a href="#7-4、子查询" class="headerlink" title="7.4、子查询"></a>7.4、子查询</h3><p>子查询是指一个查询语句嵌套在另一个查询语句内部的查询；该查询语句可以嵌套在一个 SELECT、SELECT…INTO、INSERT…INTO等语句中。在执行查询时，首先会执行子查询中的语句，再将返回的结果作为外层查询的过滤条件。在子査询中通常可以使用比较运算符和IN、EXISTS、ANY、ALL等关键字</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> student<span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> class<span class="token punctuation">;</span><span class="token comment">-- 创建班级表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> class<span class="token punctuation">(</span>  cid <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>   cname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 创建学生表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student <span class="token punctuation">(</span>  sid <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>   sname <span class="token keyword">varchar</span> <span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   sage <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   classid <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向班级表插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span><span class="token string">'Java'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1002</span><span class="token punctuation">,</span><span class="token string">'C++'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1003</span><span class="token punctuation">,</span><span class="token string">'Python'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">'PHP'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1005</span><span class="token punctuation">,</span><span class="token string">'Android'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向学生表插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'李四'</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'王五'</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">1003</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'赵六'</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">1004</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'小红'</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">'小亮'</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 1、带比较运算符的子查询</span><span class="token comment">-- 比较运算符前面我们提到过得，就是>、&lt;、=、>=、&lt;=、!=等</span><span class="token comment">-- 例如，查询张三同学所在班级的信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> class <span class="token keyword">where</span> cid<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> classid <span class="token keyword">from</span> student <span class="token keyword">where</span> sname<span class="token operator">=</span><span class="token string">'张三'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 例如，查询比张三同学所在班级编号还大的班级的信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> class <span class="token keyword">where</span> cid<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">select</span> classid <span class="token keyword">from</span> student <span class="token keyword">where</span> sname<span class="token operator">=</span><span class="token string">'张三'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 2、带EXISTS关键字的子查询</span><span class="token comment">-- EXISTS关键字后面的参数可以是任意一个子查询， 它不产生任何数据只返回TRUE或FALSE。当返回值为TRUE时外层查询才会 执行</span><span class="token comment">-- 例如，假如王五同学在学生表中则从班级表查询所有班级信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> class <span class="token keyword">where</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> sname<span class="token operator">=</span><span class="token string">'王五'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 3、带ANY关键字的子查询</span><span class="token comment">-- ANY关键字表示满足其中任意一个条件就返回一个结果作为外层查询条件</span><span class="token comment">-- 例如，查询比任一学生所属班级号还大的班级编号</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> class <span class="token keyword">where</span> cid <span class="token operator">></span> <span class="token keyword">any</span> <span class="token punctuation">(</span><span class="token keyword">select</span> classid <span class="token keyword">from</span> student<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 4、带ALL关键字的子查询</span><span class="token comment">-- ALL关键字与ANY有点类似，只不过带ALL关键字的子査询返回的结果需同时满足所有内层査询条件</span><span class="token comment">-- 例如，查询比所有学生所属班级号还大的班级编号</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> class <span class="token keyword">where</span> cid <span class="token operator">></span> <span class="token keyword">all</span> <span class="token punctuation">(</span><span class="token keyword">select</span> classid <span class="token keyword">from</span> student<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="八、函数"><a href="#八、函数" class="headerlink" title="八、函数"></a>八、函数</h2><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 创建数据库</span><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> mydb<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> mydb<span class="token punctuation">;</span><span class="token keyword">USE</span> mydb<span class="token punctuation">;</span><span class="token comment">-- 创建student表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student <span class="token punctuation">(</span>    sid <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    sname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    age <span class="token keyword">INT</span><span class="token punctuation">,</span>    gender <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向student表插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1001'</span><span class="token punctuation">,</span> <span class="token string">'lili'</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1002'</span><span class="token punctuation">,</span> <span class="token string">'wang'</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1003'</span><span class="token punctuation">,</span> <span class="token string">'tywd'</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1004'</span><span class="token punctuation">,</span> <span class="token string">'hfgs'</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1005'</span><span class="token punctuation">,</span> <span class="token string">'qwer'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1006'</span><span class="token punctuation">,</span> <span class="token string">'zxsd'</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1007'</span><span class="token punctuation">,</span> <span class="token string">'hjop'</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1008'</span><span class="token punctuation">,</span> <span class="token string">'tyop'</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1009'</span><span class="token punctuation">,</span> <span class="token string">'nhmk'</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token string">'male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>gender<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'S_1010'</span><span class="token punctuation">,</span> <span class="token string">'xdfv'</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token string">'female'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 1、聚合函数</span><span class="token comment">-- 在开发中，我们常常有类似的需求：统计某个字段的最大值、最小值、 平均值等等。为此，MySQL中提供了聚合函数来实现这些功能。所谓聚合，就是将多行汇总成一行；其实，所有的聚合函数均如此——输入多行，输出一行。聚合函数具有自动滤空的功能，若某一个值为NULL，那么会自动将其过滤使其不参与运算。</span><span class="token comment">-- 聚合函数使用规则：</span><span class="token comment">-- 只有SELECT子句和HAVING子句、ORDER BY子句中能够使用聚合函数。例如，在WHERE子句中使用聚合函数是错误的</span><span class="token comment">-- 1.1、count()</span><span class="token comment">-- 统计表中数据的行数或者统计指定列其值不为NULL的数据个数</span><span class="token comment">-- 例如，查询有多少该表中有多少人</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span class="token comment">-- 1.2、max()</span><span class="token comment">-- 计算指定列的最大值，如果指定列是字符串类型则使用字符串排序运算</span><span class="token comment">-- 例如，查询该学生表中年纪最大的学生</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span class="token comment">-- 1.3、min()</span><span class="token comment">-- 计算指定列的最小值，如果指定列是字符串类型则使用字符串排序运算</span><span class="token comment">-- 例如，查询该学生表中年纪最小的学生</span><span class="token keyword">select</span> sname<span class="token punctuation">,</span><span class="token function">min</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span class="token comment">-- 1.4、sum()</span><span class="token comment">-- 计算指定列的数值和，如果指定列类型不是数值类型则计算结果为0</span><span class="token comment">-- 例如，查询该学生表中年纪的总和</span><span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span class="token comment">-- 1.5、avg()</span><span class="token comment">-- 计算指定列的平均值</span><span class="token comment">-- 例如，查询该学生表中年纪的平均数</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span class="token comment">-- 2.其他常用函数</span><span class="token comment">-- 2.1、时间函数</span><span class="token keyword">SELECT</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">DAY</span> <span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">DATE</span> <span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">TIME</span> <span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">YEAR</span> <span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">MONTH</span> <span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">CURRENT_DATE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">CURRENT_TIME</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> ADDTIME<span class="token punctuation">(</span><span class="token string">'14:23:12'</span><span class="token punctuation">,</span><span class="token string">'01:02:01'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> DATE_ADD<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">DAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> DATE_ADD<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">MONTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> DATE_SUB<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">DAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> DATE_SUB<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">MONTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> DATEDIFF<span class="token punctuation">(</span><span class="token string">'2019-07-22'</span><span class="token punctuation">,</span><span class="token string">'2019-05-05'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 2.2、字符串函数</span><span class="token comment">-- 连接函数</span><span class="token keyword">SELECT</span> CONCAT <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> INSTR <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 统计长度</span><span class="token keyword">SELECT</span> LENGTH<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 2.3、数学函数</span><span class="token comment">-- 绝对值</span><span class="token keyword">SELECT</span> ABS<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">136</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向下取整</span><span class="token keyword">SELECT</span> FLOOR<span class="token punctuation">(</span><span class="token number">3.14</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向上取整</span><span class="token keyword">SELECT</span> CEILING<span class="token punctuation">(</span><span class="token number">3.14</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="九、别名设置"><a href="#九、别名设置" class="headerlink" title="九、别名设置"></a>九、别名设置</h2><p>在査询数据时可为表和字段取別名，该别名代替表和字段的原名参与查询操作。</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 1.为表取别名</span><span class="token comment">-- 在查询操作时，假若表名很长使用起来就不太方便，此时可为表取一个別名，用该别名来代替表的名称</span><span class="token comment">-- 基本的语法格式</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 表名 <span class="token punctuation">[</span><span class="token keyword">AS</span><span class="token punctuation">]</span> 表的别名 <span class="token keyword">WHERE</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span><span class="token comment">-- 例如，将student改为stu查询整表</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">as</span> stu<span class="token punctuation">;</span><span class="token comment">-- 2.为字段取别名</span><span class="token comment">-- 在查询操作时，假若字段名很长使用起来就不太方便，此时可该字段取一个別名，用该别名来代替字段的名称</span><span class="token comment">-- 基本的语法格式</span><span class="token keyword">SELECT</span> 字段名<span class="token number">1</span> <span class="token punctuation">[</span><span class="token keyword">AS</span><span class="token punctuation">]</span> 别名<span class="token number">1</span> <span class="token punctuation">,</span> 字段名<span class="token number">2</span> <span class="token punctuation">[</span><span class="token keyword">AS</span><span class="token punctuation">]</span> 别名<span class="token number">2</span> <span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span><span class="token comment">-- 例如，将student中的name取别名为“姓名” 查询整表</span><span class="token keyword">select</span> name <span class="token keyword">as</span> <span class="token string">'姓名'</span><span class="token punctuation">,</span>id <span class="token keyword">from</span> student<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="十、表的关联关系"><a href="#十、表的关联关系" class="headerlink" title="十、表的关联关系"></a>十、表的关联关系</h2><p>在实际开发中数据表之间存在着各种关联关系。在此，介绍MySQL中数据表的三种关联关系。<br>多对一<br>多对一(亦称为一对多)是数据表中最常见的一种关系。例如：员工与部门之间的关系，一个部门可以有多个员工；而一个员工不能属于多个部门只属于某个部门。在多对一的表关系 中，应将外键建在多的一方否则会造成数据的冗余。<br>多对多<br>多对多是数据表中常见的一种关系。例如：学生与老师之间的关系，一个学生可以有多个老师而且一个老师有多个学生。通常情况下，为了实现这种关系需要定义一张中间表(亦称为连接表)该表会存在两个外键分别参照老师表和学生表。<br>一对一<br>在开发过程中，一对一的关联关系在数据库中并不常见；因为以这种方式存储的信息通常会放在同一张表中。</p><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> student<span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> class<span class="token punctuation">;</span><span class="token comment">-- 创建班级表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> class<span class="token punctuation">(</span>    cid <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    cname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 创建学生表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">(</span>    sid <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    sname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    classid <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 为学生表添加外键约束</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> fk_student_classid <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>classid<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> class<span class="token punctuation">(</span>cid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向班级表插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class<span class="token punctuation">(</span>cid<span class="token punctuation">,</span>cname<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'Java'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class<span class="token punctuation">(</span>cid<span class="token punctuation">,</span>cname<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'Python'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 向学生表插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student<span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>classid<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'tome'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student<span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>classid<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'lucy'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student<span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>classid<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'lili'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student<span class="token punctuation">(</span>sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>classid<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'domi'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 1.关联查询</span><span class="token comment">-- 查询Java班的所有学生</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> classid<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> cid <span class="token keyword">from</span> class <span class="token keyword">where</span> cname<span class="token operator">=</span><span class="token string">'Java'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 2.关于关联关系的删除数据</span><span class="token comment">-- 请从班级表中删除Java班级。在此，请注意：班级表和学生表之间存在关联关系；要删除Java班级，应该先删除学生表中与该班相关联的学生。否则，假若先删除Java班那么学生表中的cid就失去了关联</span><span class="token comment">-- 例如，删除Java班</span><span class="token keyword">delete</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> classid<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> cid <span class="token keyword">from</span> class <span class="token keyword">where</span> cname<span class="token operator">=</span><span class="token string">'Java'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">delete</span> <span class="token keyword">from</span> class <span class="token keyword">where</span> cname<span class="token operator">=</span><span class="token string">'Java'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="十一、权限"><a href="#十一、权限" class="headerlink" title="十一、权限"></a>十一、权限</h2><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 用户和权限管理</span><span class="token comment">-- 用户信息表：mysql.user</span><span class="token comment">-- 刷新权限</span>FLUSH <span class="token keyword">PRIVILEGES</span><span class="token comment">-- 增加用户 CREATE USER kuangshen IDENTIFIED BY '123456'</span><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> 用户名 IDENTIFIED <span class="token keyword">BY</span> <span class="token punctuation">[</span>PASSWORD<span class="token punctuation">]</span> 密码<span class="token punctuation">(</span>字符串<span class="token punctuation">)</span>  <span class="token comment">-- 必须拥有mysql数据库的全局CREATE USER权限，或拥有INSERT权限。</span>  <span class="token comment">-- 只能创建用户，不能赋予权限。</span>  <span class="token comment">-- 用户名，注意引号：如 'user_name'@'192.168.1.1'</span>  <span class="token comment">-- 密码也需引号，纯数字密码也要加引号</span>  <span class="token comment">-- 要在纯文本中指定密码，需忽略PASSWORD关键词。要把密码指定为由PASSWORD()函数返回的混编值，需包含关键字PASSWORD</span><span class="token comment">-- 重命名用户 RENAME USER kuangshen TO kuangshen2</span><span class="token keyword">RENAME</span> <span class="token keyword">USER</span> old_user <span class="token keyword">TO</span> new_user<span class="token comment">-- 设置密码</span><span class="token keyword">SET</span> PASSWORD <span class="token operator">=</span> PASSWORD<span class="token punctuation">(</span><span class="token string">'密码'</span><span class="token punctuation">)</span>    <span class="token comment">-- 为当前用户设置密码</span><span class="token keyword">SET</span> PASSWORD <span class="token keyword">FOR</span> 用户名 <span class="token operator">=</span> PASSWORD<span class="token punctuation">(</span><span class="token string">'密码'</span><span class="token punctuation">)</span>    <span class="token comment">-- 为指定用户设置密码</span><span class="token comment">-- 删除用户 DROP USER kuangshen2</span><span class="token keyword">DROP</span> <span class="token keyword">USER</span> 用户名<span class="token comment">-- 分配权限/添加用户</span><span class="token keyword">GRANT</span> 权限列表 <span class="token keyword">ON</span> 表名 <span class="token keyword">TO</span> 用户名 <span class="token punctuation">[</span>IDENTIFIED <span class="token keyword">BY</span> <span class="token punctuation">[</span>PASSWORD<span class="token punctuation">]</span> <span class="token string">'password'</span><span class="token punctuation">]</span>  <span class="token operator">-</span> <span class="token keyword">all</span> <span class="token keyword">privileges</span> 表示所有权限  <span class="token operator">-</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> 表示所有库的所有表  <span class="token operator">-</span> 库名<span class="token punctuation">.</span>表名 表示某库下面的某表<span class="token comment">-- 查看权限   SHOW GRANTS FOR root@localhost;</span><span class="token keyword">SHOW</span> GRANTS <span class="token keyword">FOR</span> 用户名   <span class="token comment">-- 查看当前用户权限</span>  <span class="token keyword">SHOW</span> GRANTS<span class="token punctuation">;</span> 或 <span class="token keyword">SHOW</span> GRANTS <span class="token keyword">FOR</span> <span class="token keyword">CURRENT_USER</span><span class="token punctuation">;</span> 或 <span class="token keyword">SHOW</span> GRANTS <span class="token keyword">FOR</span> <span class="token keyword">CURRENT_USER</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 撤消权限</span><span class="token keyword">REVOKE</span> 权限列表 <span class="token keyword">ON</span> 表名 <span class="token keyword">FROM</span> 用户名<span class="token keyword">REVOKE</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span><span class="token punctuation">,</span> <span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span> <span class="token keyword">FROM</span> 用户名    <span class="token comment">-- 撤销所有权限</span>权限解释<span class="token comment">-- 权限列表</span><span class="token keyword">ALL</span> <span class="token punctuation">[</span><span class="token keyword">PRIVILEGES</span><span class="token punctuation">]</span>    <span class="token comment">-- 设置除GRANT OPTION之外的所有简单权限</span><span class="token keyword">ALTER</span>    <span class="token comment">-- 允许使用ALTER TABLE</span><span class="token keyword">ALTER</span> <span class="token keyword">ROUTINE</span>    <span class="token comment">-- 更改或取消已存储的子程序</span><span class="token keyword">CREATE</span>    <span class="token comment">-- 允许使用CREATE TABLE</span><span class="token keyword">CREATE</span> <span class="token keyword">ROUTINE</span>    <span class="token comment">-- 创建已存储的子程序</span><span class="token keyword">CREATE</span> <span class="token keyword">TEMPORARY</span> <span class="token keyword">TABLES</span>        <span class="token comment">-- 允许使用CREATE TEMPORARY TABLE</span><span class="token keyword">CREATE</span> <span class="token keyword">USER</span>        <span class="token comment">-- 允许使用CREATE USER, DROP USER, RENAME USER和REVOKE ALL PRIVILEGES。</span><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span>        <span class="token comment">-- 允许使用CREATE VIEW</span><span class="token keyword">DELETE</span>    <span class="token comment">-- 允许使用DELETE</span><span class="token keyword">DROP</span>    <span class="token comment">-- 允许使用DROP TABLE</span><span class="token keyword">EXECUTE</span>        <span class="token comment">-- 允许用户运行已存储的子程序</span><span class="token keyword">FILE</span>    <span class="token comment">-- 允许使用SELECT...INTO OUTFILE和LOAD DATA INFILE</span><span class="token keyword">INDEX</span>     <span class="token comment">-- 允许使用CREATE INDEX和DROP INDEX</span><span class="token keyword">INSERT</span>    <span class="token comment">-- 允许使用INSERT</span><span class="token keyword">LOCK</span> <span class="token keyword">TABLES</span>        <span class="token comment">-- 允许对您拥有SELECT权限的表使用LOCK TABLES</span>PROCESS     <span class="token comment">-- 允许使用SHOW FULL PROCESSLIST</span><span class="token keyword">REFERENCES</span>    <span class="token comment">-- 未被实施</span>RELOAD    <span class="token comment">-- 允许使用FLUSH</span><span class="token keyword">REPLICATION</span> CLIENT    <span class="token comment">-- 允许用户询问从属服务器或主服务器的地址</span><span class="token keyword">REPLICATION</span> SLAVE    <span class="token comment">-- 用于复制型从属服务器（从主服务器中读取二进制日志事件）</span><span class="token keyword">SELECT</span>    <span class="token comment">-- 允许使用SELECT</span><span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span>    <span class="token comment">-- 显示所有数据库</span><span class="token keyword">SHOW</span> <span class="token keyword">VIEW</span>    <span class="token comment">-- 允许使用SHOW CREATE VIEW</span><span class="token keyword">SHUTDOWN</span>    <span class="token comment">-- 允许使用mysqladmin shutdown</span>SUPER    <span class="token comment">-- 允许使用CHANGE MASTER, KILL, PURGE MASTER LOGS和SET GLOBAL语句，mysqladmin debug命令；允许您连接（一次），即使已达到max_connections。</span><span class="token keyword">UPDATE</span>    <span class="token comment">-- 允许使用UPDATE</span><span class="token keyword">USAGE</span>    <span class="token comment">-- “无权限”的同义词</span><span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span>    <span class="token comment">-- 允许授予权限</span><span class="token comment">-- 表维护</span><span class="token comment">-- 分析和存储表的关键字分布</span><span class="token keyword">ANALYZE</span> <span class="token punctuation">[</span><span class="token keyword">LOCAL</span> <span class="token operator">|</span> NO_WRITE_TO_BINLOG<span class="token punctuation">]</span> <span class="token keyword">TABLE</span> 表名 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment">-- 检查一个或多个表是否有错误</span><span class="token keyword">CHECK</span> <span class="token keyword">TABLE</span> tbl_name <span class="token punctuation">[</span><span class="token punctuation">,</span> tbl_name<span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">[</span><span class="token keyword">option</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">option</span> <span class="token operator">=</span> &#123;<span class="token keyword">QUICK</span> <span class="token operator">|</span> FAST <span class="token operator">|</span> MEDIUM <span class="token operator">|</span> <span class="token keyword">EXTENDED</span> <span class="token operator">|</span> CHANGED&#125;<span class="token comment">-- 整理数据文件的碎片</span><span class="token keyword">OPTIMIZE</span> <span class="token punctuation">[</span><span class="token keyword">LOCAL</span> <span class="token operator">|</span> NO_WRITE_TO_BINLOG<span class="token punctuation">]</span> <span class="token keyword">TABLE</span> tbl_name <span class="token punctuation">[</span><span class="token punctuation">,</span> tbl_name<span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="十二、总结"><a href="#十二、总结" class="headerlink" title="十二、总结"></a>十二、总结</h2><p>重要（从关键字分析）：<br>查询语句的书写顺序和执行顺序<br>select ===&gt; from ===&gt; where ===&gt; group by ===&gt; having ===&gt; order by ===&gt; limit<br>查询语句的执行顺序<br>from ===&gt; where ===&gt; group by ===&gt; having ===&gt; select ===&gt; order by ===&gt; limi</p><hr><p>参考：</p><p>1、CSDN博主「老赖的小弟」<br>链接：<a href="https://blog.csdn.net/weixin_45851945/article/details/114287877">https://blog.csdn.net/weixin_45851945/article/details/114287877</a></p><p>2、狂神</p><p>链接：<a href="https://mp.weixin.qq.com/s/a4jA3B2j4KXBH7rci4C46w">https://mp.weixin.qq.com/s/a4jA3B2j4KXBH7rci4C46w</a></p><p>​           <a href="https://mp.weixin.qq.com/s/-_-fRKNOi5rI6tb8RINZ0Q">https://mp.weixin.qq.com/s/-_-fRKNOi5rI6tb8RINZ0Q</a></p><p>​            <a href="https://mp.weixin.qq.com/s/dCt_v5KQCTpgBdlY__0BSA">https://mp.weixin.qq.com/s/dCt_v5KQCTpgBdlY__0BSA</a></p><p>3、菜鸟教程</p><p>链接：<a href="https://www.runoob.com/mysql/mysql-create-tables.html">https://www.runoob.com/mysql/mysql-create-tables.html</a></p>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>笔记</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown语法大全（笔记）</title>
    <link href="/Markdown%E8%AF%AD%E6%B3%95%E5%A4%A7%E5%85%A8%EF%BC%88%E7%AC%94%E8%AE%B0%EF%BC%89.html"/>
    <url>/Markdown%E8%AF%AD%E6%B3%95%E5%A4%A7%E5%85%A8%EF%BC%88%E7%AC%94%E8%AE%B0%EF%BC%89.html</url>
    
    <content type="html"><![CDATA[<h1 id="Markdown语法大全（笔记）"><a href="#Markdown语法大全（笔记）" class="headerlink" title="Markdown语法大全（笔记）"></a>Markdown语法大全（笔记）</h1><h3 id="一、注释"><a href="#一、注释" class="headerlink" title="一、注释"></a>一、注释</h3><h4 id="1、代码法"><a href="#1、代码法" class="headerlink" title="1、代码法"></a>1、代码法</h4><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>display: none<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>哈哈我是注释，不会在浏览器中显示。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h4 id="2、html注释"><a href="#2、html注释" class="headerlink" title="2、html注释"></a>2、html注释</h4><p>快捷键 comment + /。</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--哈哈我是注释，不会在浏览器中显示。--></span><span class="token comment">&lt;!--哈哈我是多段注释，不会在浏览器中显示。    --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="3、hack方法"><a href="#3、hack方法" class="headerlink" title="3、hack方法"></a>3、hack方法</h4><p>hack方法就是利用markdown的解析原理来实现注释的。<br> 一般有的markdown解析器不支持上面的注释方法，这个时候就可以用hack方法。<br> hack方法比上面2种方法稳定得多，但是语义化太差。</p><div class="code-wrapper"><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token punctuation">[</span><span class="token comment">//]: # (哈哈我是最强注释，不会在浏览器中显示。)</span><span class="token punctuation">[</span><span class="token operator">^</span>_<span class="token operator">^</span><span class="token punctuation">]</span><span class="token punctuation">:</span> # <span class="token punctuation">(</span>哈哈我是最萌注释，不会在浏览器中显示。<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token comment">//]: &lt;> (哈哈我是注释，不会在浏览器中显示。)</span><span class="token punctuation">[</span>comment<span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&lt;</span><span class="token operator">></span> <span class="token punctuation">(</span>哈哈我是注释，不会在浏览器中显示。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="二、标题"><a href="#二、标题" class="headerlink" title="二、标题"></a>二、标题</h3><p>Markdown 标题有两种格式。</p><h4 id="1、使用-和-标记"><a href="#1、使用-和-标记" class="headerlink" title="1、使用 = 和 - 标记"></a>1、使用 = 和 - 标记</h4><p>一级标题和二级标题</p><p>= 和 - 标记语法格式如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">我是一级标题&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;我是二级标题-----------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="2、使用-标记"><a href="#2、使用-标记" class="headerlink" title="2、使用 # 标记"></a>2、使用 # 标记</h4><p>使用 <strong>#</strong> 号可表示 1-6 级标题，一级标题对应一个 <strong>#</strong> 号，二级标题对应两个 <strong>#</strong> 号，以此类推。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="三、缩进、换行、空行、对齐方式"><a href="#三、缩进、换行、空行、对齐方式" class="headerlink" title="三、缩进、换行、空行、对齐方式"></a>三、缩进、换行、空行、对齐方式</h3><ul><li><strong>首行缩进</strong></li></ul><p>不同特殊占位符所占空白是不一样大的。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">【1】 <span class="token operator">&amp;</span>emsp<span class="token punctuation">;</span>或<span class="token operator">&amp;</span><span class="token comment">#8195; //全角</span>【2】 <span class="token operator">&amp;</span>ensp<span class="token punctuation">;</span>或<span class="token operator">&amp;</span><span class="token comment">#8194; //半角</span>【3】 <span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>或<span class="token operator">&amp;</span><span class="token comment">#160;  //半角之半角</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><ul><li><strong>换行</strong></li></ul><p>由于markdown编辑器的不同,可能在一行字后面，直接换行回车，也能实现换行，但是在Visual Studio Code上，想要<strong>换行必须得在一行字后面空两个格子才行</strong>。</p><ul><li><strong>空行</strong></li></ul><p>在编辑的时候有多少个空行(只要这一行只有回车或者space没有其他的字符就算空行)，在<strong>渲染之后，只隔着一行</strong>。</p><ul><li><strong>对齐方式</strong></li></ul><p>代码：</p><div class="code-wrapper"><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span>行中心对齐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>行左对齐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>行右对齐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>显示效果：</p><center>行中心对齐</center><p align="left">行左对齐</p><p align="right">行右对齐</p><h3 id="四、字体"><a href="#四、字体" class="headerlink" title="四、字体"></a>四、字体</h3><p>Markdown 可以使用以下几种字体：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>显示效果</strong>：</p><p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><em><strong>粗斜体文本</strong></em><br><em><strong>粗斜体文本</strong></em></p><h3 id="五、分割线"><a href="#五、分割线" class="headerlink" title="五、分割线"></a>五、分割线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">**** * ******- - -----------<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示效果都一样</p><h3 id="六、删除线"><a href="#六、删除线" class="headerlink" title="六、删除线"></a>六、删除线</h3><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 <strong>~~</strong> 即可，实例如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">我是正常的~~我是删除线~~<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><del>我是删除线</del></p><h3 id="七、下划线"><a href="#七、下划线" class="headerlink" title="七、下划线"></a>七、下划线</h3><p>下划线可以通过 HTML 的 <u></u> 标签来实现：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&lt;u&gt;我是下划线&lt;&#x2F;u&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示效果如下所示：</p><p><u>我是下划线</u></p><h3 id="八、脚注"><a href="#八、脚注" class="headerlink" title="八、脚注"></a>八、脚注</h3><p>脚注是对文本的补充说明，Markdown 脚注的格式如下:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">[^我是脚注]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>以下实例演示了脚注的用法：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">创建脚注格式类似这样 [^RUNOOB]。[^RUNOOB]: 菜鸟教程 -- 学的不仅是技术，更是梦想！！！<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>演示效果如下：</p><p>创建脚注格式类似这样 [<a href="https://www.cnblogs.com/miki-peng/articles/12502985.html#fn1">1]</a>。</p><h3 id="九、列表"><a href="#九、列表" class="headerlink" title="九、列表"></a>九、列表</h3><p>Markdown 支持有序列表和无序列表。</p><h4 id="1、无序列表"><a href="#1、无序列表" class="headerlink" title="1、无序列表"></a>1、无序列表</h4><p>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">* 第一项* 第二项* 第三项------ 分割线 ------+ 第一项+ 第二项+ 第三项------ 分割线 ------- 第一项- 第二项- 第三项<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示结果如下：</p><ul><li><p>第一项</p></li><li><p>第二项</p></li><li><p>第三项<br>—— 分割线 ——</p></li><li><p>第一项</p></li><li><p>第二项</p></li><li><p>第三项<br>—— 分割线 ——</p></li><li><p>第一项</p></li><li><p>第二项</p></li><li><p>第三项</p></li></ul><h4 id="2、有序列表"><a href="#2、有序列表" class="headerlink" title="2、有序列表"></a>2、有序列表</h4><p>使用数字并加上 <strong>.</strong> 号来表示，如：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">1. 第一项2. 第二项3. 第三项<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示结果如下：</p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><h4 id="3、列表嵌套"><a href="#3、列表嵌套" class="headerlink" title="3、列表嵌套"></a>3、列表嵌套</h4><p>列表嵌套只需在子列表中的选项添加四个空格即可：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">1. 第一项：    - 第一项嵌套的第一个元素    - 第一项嵌套的第二个元素2. 第二项：    - 第二项嵌套的第一个元素    - 第二项嵌套的第二个元素<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示结果如下：</p><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><h3 id="十、区块"><a href="#十、区块" class="headerlink" title="十、区块"></a>十、区块</h3><h4 id="1、区块引用"><a href="#1、区块引用" class="headerlink" title="1、区块引用"></a>1、区块引用</h4><p>Markdown 区块引用是在段落开头使用 <strong>&gt;</strong> 符号 ，然后后面紧跟一个<strong>空格</strong>符号：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&gt; 区块引用&gt; 菜鸟教程&gt; 学的不仅是技术更是梦想<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>效果如下：</p><blockquote><p>区块引用<br>菜鸟教程<br>学的不仅是技术更是梦想</p></blockquote><h4 id="2、区块中使用列表"><a href="#2、区块中使用列表" class="headerlink" title="2、区块中使用列表"></a>2、区块中使用列表</h4><p>区块中使用列表实例如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示结果如下：</p><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><h4 id="3、列表中使用区块"><a href="#3、列表中使用区块" class="headerlink" title="3、列表中使用区块"></a>3、列表中使用区块</h4><p>如果要在列表项目内放进区块，那么就需要在 <strong>&gt;</strong> 前添加四个空格的缩进。</p><p>区块中使用列表实例如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">* 第一项    &gt; 菜鸟教程    &gt; 学的不仅是技术更是梦想* 第二项<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示结果如下：</p><ul><li><p>第一项</p><blockquote><p>菜鸟教程<br>学的不仅是技术更是梦想</p></blockquote></li><li><p>第二项</p></li></ul><h4 id="4、多级引用"><a href="#4、多级引用" class="headerlink" title="4、多级引用"></a>4、多级引用</h4><p>语法说明：</p><p>引用需要在被引用的文本前加上&gt;符号和空格，允许多层嵌套，也允许你偷懒只在整个段落的第一行最前面加上 &gt; 。</p><p>代码：</p><div class="code-wrapper"><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token operator">></span><span class="token operator">></span><span class="token operator">></span> 请问 <span class="token constant">Markdwon</span> 怎么用？ <span class="token operator">-</span> 小白<span class="token operator">></span><span class="token operator">></span> 自己看教程！ <span class="token operator">-</span> 愤青<span class="token operator">></span> 教程在哪？ <span class="token operator">-</span> 小白<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示效果：</p><blockquote><blockquote><blockquote><p>请问 Markdwon 怎么用？ - 小白</p></blockquote></blockquote></blockquote><blockquote><blockquote><p>自己看教程！ - 愤青</p></blockquote></blockquote><blockquote><p>教程在哪？ - 小白</p></blockquote><h3 id="十一、代码"><a href="#十一、代码" class="headerlink" title="十一、代码"></a>十一、代码</h3><h4 id="1、单行代码"><a href="#1、单行代码" class="headerlink" title="1、单行代码"></a>1、单行代码</h4><p>如果是单行代码或段落上的一个函数或片段的代码可以用反引号把它包起来（**`**），例如：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#96;printf()&#96; 函数<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示结果如下：</p><p><code>printf()</code> 函数</p><h4 id="2、代码区块"><a href="#2、代码区块" class="headerlink" title="2、代码区块"></a>2、代码区块</h4><p>代码区块使用三个反引号对**```** 包裹一段代码，并指定一种语言（也可以不指定）：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">CaseData</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""这是一个存放测试用例数据的类"""</span>    <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示结果如下：</p><p>class CaseData:<br>    “””这是一个存放测试用例数据的类”””<br>    pass</p><h3 id="十二、链接"><a href="#十二、链接" class="headerlink" title="十二、链接"></a>十二、链接</h3><h4 id="1、使用方法："><a href="#1、使用方法：" class="headerlink" title="1、使用方法："></a>1、使用方法：</h4><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">[链接名称](链接地址)或者&lt;链接地址&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>例如：</p><p>这是一个链接 <a href="https://codeanime.cn/">我是链接</a></p><p>直接使用链接地址：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&lt;https:&#x2F;&#x2F;codeanime.cn&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示结果如下：</p><p><a href="https://codeanime.cn/">https://codeanime.cn</a></p><h4 id="2、高级链接"><a href="#2、高级链接" class="headerlink" title="2、高级链接"></a>2、高级链接</h4><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">链接也可以用变量来代替，文档末尾附带变量地址：这个链接用 1 作为网址变量 [Google][1]这个链接用 runoob 作为网址变量 [Runoob][runoob]然后在文档的结尾为变量赋值（网址）  [1]: http:&#x2F;&#x2F;www.google.com&#x2F;  [runoob]: http:&#x2F;&#x2F;www.runoob.com&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示结果如下：</p><p>链接也可以用变量来代替，文档末尾附带变量地址：</p><p>这个链接用 1 作为网址变量 <a href="http://www.google.com/">Google</a></p><p>这个链接用 runoob 作为网址变量 <a href="http://www.runoob.com/">Runoob</a></p><p>然后在文档的结尾为变量赋值（网址）</p><h3 id="十三、图片"><a href="#十三、图片" class="headerlink" title="十三、图片"></a>十三、图片</h3><p>Markdown 图片语法格式如下</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><ul><li>开头一个感叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</li></ul><p>使用实例：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">![RUNOOB 图标](https:&#x2F;&#x2F;www.cnblogs.com&#x2F;images&#x2F;logo_small.gif)![RUNOOB 图标](http:&#x2F;&#x2F;static.runoob.com&#x2F;images&#x2F;runoob-logo.png &quot;RUNOOB&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>当然，你也可以像网址那样对图片网址使用变量:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">这个链接用 1 作为网址变量 [RUNOOB][1].然后在文档的结尾位变量赋值（网址）[1]: http:&#x2F;&#x2F;static.runoob.com&#x2F;images&#x2F;runoob-logo.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示结果如下：</p><p>这个链接用 1 作为网址变量 <a href="http://www.google.com/">RUNOOB</a>.</p><p>然后在文档的结尾位变量赋值（网址）</p><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <a href="https://www.cnblogs.com/miki-peng/articles/undefined"><img src="" alt="img"></a> 标签。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;static.runoob.com&#x2F;images&#x2F;runoob-logo.png&quot; width&#x3D;&quot;50%&quot;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="十四、表格"><a href="#十四、表格" class="headerlink" title="十四、表格"></a>十四、表格</h3><p>Markdown 制作表格使用 <strong>|</strong> 来分隔不同的单元格，使用 <strong>-</strong> 来分隔表头和其他行。</p><p>语法格式如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>以上代码显示结果如下：</p><table><thead><tr><th align="left">表头</th><th align="left">表头</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="left">单元格</td></tr><tr><td align="left">单元格</td><td align="left">单元格</td></tr></tbody></table><p>对齐方式</p><p><strong>我们可以设置表格的对齐方式：</strong></p><ul><li><strong>-:</strong> 设置内容和标题栏居右对齐。</li><li><strong>:-</strong> 设置内容和标题栏居左对齐。</li><li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li></ul><p>实例如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>以上代码显示结果如下：</p><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h3 id="十五、高级技巧"><a href="#十五、高级技巧" class="headerlink" title="十五、高级技巧"></a>十五、高级技巧</h3><h4 id="1、支持HTML元素"><a href="#1、支持HTML元素" class="headerlink" title="1、支持HTML元素"></a>1、支持HTML元素</h4><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>目前支持的 HTML 元素有：<code> </code>等 ，如：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">使用 &lt;kbd&gt;Ctrl&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Alt&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Del&lt;&#x2F;kbd&gt; 重启电脑<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>输出结果为：</p><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><h4 id="2、转义"><a href="#2、转义" class="headerlink" title="2、转义"></a>2、转义</h4><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">**文本加粗** \*\* 正常显示星号 \*\*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>输出结果为：</p><p><strong>文本加粗</strong></p><p>** 正常显示星号 **</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">\   反斜线&#96;   反引号*   星号_   下划线&#123;&#125;  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="3、流程图"><a href="#3、流程图" class="headerlink" title="3、流程图"></a>3、流程图</h4><div class="code-wrapper"><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token string">``</span><span class="token string">`graph LRA-->B`</span><span class="token string">``</span><span class="token string">``</span><span class="token string">`sequenceDiagramA->>B: How are you?B->>A: Great!`</span><span class="token string">``</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示效果：</p><div class="code-wrapper"><pre class="line-numbers language-php" data-language="php"><code class="language-php">graph <span class="token constant">LRA</span><span class="token operator">--</span><span class="token operator">></span><span class="token constant">B</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-rust" data-language="rust"><code class="language-rust">sequenceDiagramA<span class="token punctuation">-></span><span class="token operator">></span><span class="token class-name">B</span><span class="token punctuation">:</span> <span class="token class-name">How</span> are you<span class="token operator">?</span><span class="token class-name">B</span><span class="token punctuation">-></span><span class="token operator">></span><span class="token class-name">A</span><span class="token punctuation">:</span> <span class="token macro property">Great!</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="4、LaTex公式"><a href="#4、LaTex公式" class="headerlink" title="4、LaTex公式"></a>4、LaTex公式</h4><p>代码：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">质能守恒方程可以用一个很简洁的方程式 <span class="token variable"><span class="token variable">`</span>$E <span class="token operator">=</span> m c^2 $<span class="token variable">`</span></span>来表达。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示效果：</p><p>质能守恒方程可以用一个很简洁的方程式 <code>$E = m c^2 $</code>来表达。</p><ul><li><strong>表示整行公式</strong><br>大部分的浏览器支持的</li></ul><div class="code-wrapper"><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">$$ 公式 $$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>有道云笔记 使用格式，</p><div class="code-wrapper"><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token string">``</span><span class="token string">`mathE = mc^2`</span><span class="token string">``</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>块级公式：</p><div class="code-wrapper"><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token string">``</span><span class="token string">`mathx = \dfrac&#123;-b \pm \sqrt&#123;b^2 - 4ac&#125;&#125;&#123;2a&#125; `</span><span class="token string">``</span><span class="token string">``</span><span class="token string">`math[\frac&#123;1&#125;&#123;\Bigl(\sqrt&#123;\phi \sqrt&#123;5&#125;&#125;-\phi\Bigr) e^&#123;\frac25 \pi&#125;&#125; =1+\frac&#123;e^&#123;-2\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-4\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-6\pi&#125;&#125;&#123;1+\frac&#123;e^&#123;-8\pi&#125;&#125; &#123;1+\ldots&#125; &#125; &#125; &#125;]`</span><span class="token string">``</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>显示效果：</p><div class="code-wrapper"><pre class="line-numbers language-math" data-language="math"><code class="language-math">x &#x3D; \dfrac&#123;-b \pm \sqrt&#123;b^2 - 4ac&#125;&#125;&#123;2a&#125; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-math" data-language="math"><code class="language-math">[\frac&#123;1&#125;&#123;\Bigl(\sqrt&#123;\phi \sqrt&#123;5&#125;&#125;-\phi\Bigr) e^&#123;\frac25 \pi&#125;&#125; &#x3D;1+\frac&#123;e^&#123;-2\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-4\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-6\pi&#125;&#125;&#123;1+\frac&#123;e^&#123;-8\pi&#125;&#125; &#123;1+\ldots&#125; &#125; &#125; &#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>访问 <a href="https://links.jianshu.com/go?to=https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">MathJax</a> 参考更多使用方法。</p><h4 id="5、特殊字符"><a href="#5、特殊字符" class="headerlink" title="5、特殊字符"></a>5、特殊字符</h4><center><table><thead><tr><th align="center">特殊字符</th><th align="center">描述</th><th align="center">字符的代码</th></tr></thead><tbody><tr><td align="center"></td><td align="center">空格符</td><td align="center"><code> </code></td></tr><tr><td align="center">&lt;</td><td align="center">小于号</td><td align="center"><code>&lt;</code></td></tr><tr><td align="center">&gt;</td><td align="center">大于号</td><td align="center"><code>&gt;</code></td></tr><tr><td align="center">&amp;</td><td align="center">和号</td><td align="center"><code>&amp;</code></td></tr><tr><td align="center">￥</td><td align="center">人民币</td><td align="center"><code>¥</code></td></tr><tr><td align="center">©</td><td align="center">版权</td><td align="center"><code>©</code></td></tr><tr><td align="center">®</td><td align="center">注册商标</td><td align="center"><code>®</code></td></tr><tr><td align="center">°C</td><td align="center">摄氏度</td><td align="center"><code>°C</code></td></tr><tr><td align="center">±</td><td align="center">正负号</td><td align="center"><code>±</code></td></tr><tr><td align="center">×</td><td align="center">乘号</td><td align="center"><code>×</code></td></tr><tr><td align="center">÷</td><td align="center">除号</td><td align="center"><code>÷</code></td></tr><tr><td align="center">²</td><td align="center">平方（上标²）</td><td align="center"><code>²</code></td></tr><tr><td align="center">³</td><td align="center">立方（上标³）</td><td align="center"><code>³</code></td></tr></tbody></table></center><h3 id="十六、文字颜色、大小、字体"><a href="#十六、文字颜色、大小、字体" class="headerlink" title="十六、文字颜色、大小、字体"></a>十六、文字颜色、大小、字体</h3><h4 id="1、颜色"><a href="#1、颜色" class="headerlink" title="1、颜色"></a>1、颜色</h4><p>在markdown中采用如下方式能够控制文字的颜色：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&lt;font color&#x3D;&quot;#dd0000&quot;&gt;文字颜色预览&lt;&#x2F;font&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h4 id="2、字体大小"><a href="#2、字体大小" class="headerlink" title="2、字体大小"></a>2、字体大小</h4><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">size为1：&lt;font size&#x3D;&quot;1&quot;&gt;size为1&lt;&#x2F;font&gt;size为2：&lt;font size&#x3D;&quot;2&quot;&gt;size为2&lt;&#x2F;font&gt;size为3：&lt;font size&#x3D;&quot;3&quot;&gt;size为3&lt;&#x2F;font&gt;size为4：&lt;font size&#x3D;&quot;4&quot;&gt;size为4&lt;&#x2F;font&gt;size为6：&lt;font size&#x3D;&quot;6&quot;&gt;size为6&lt;&#x2F;font&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>效果如下：</p><p>size为1：<font size="1">size为1</font><br>size为2：<font size="2">size为2</font><br>size为3：<font size="3">size为3</font><br>size为4：<font size="4">size为4</font><br>size为6：<font size="6">size为6</font></p><h4 id="3、字体"><a href="#3、字体" class="headerlink" title="3、字体"></a>3、字体</h4><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&lt;font face&#x3D;&quot;黑体&quot;&gt;我是黑体字&lt;&#x2F;font&gt; &lt;font face&#x3D;&quot;宋体&quot;&gt;我是宋体字&lt;&#x2F;font&gt; &lt;font face&#x3D;&quot;楷体&quot;&gt;我是楷体字&lt;&#x2F;font&gt; &lt;font face&#x3D;&quot;微软雅黑&quot;&gt;我是微软雅黑字&lt;&#x2F;font&gt; &lt;font face&#x3D;&quot;fantasy&quot;&gt;我是fantasy字&lt;&#x2F;font&gt;&lt;font face&#x3D;&quot;Helvetica&quot;&gt;我是Helvetica字&lt;&#x2F;font&gt; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>效果如下：</p><p><font face="黑体">我是黑体字</font><br><font face="宋体">我是宋体字</font><br><font face="楷体">我是楷体字</font><br><font face="微软雅黑">我是微软雅黑字</font><br><font face="fantasy">我是fantasy字</font><br><font face="Helvetica">我是Helvetica字</font> </p><h4 id="4、背景色"><a href="#4、背景色" class="headerlink" title="4、背景色"></a>4、背景色</h4><p>语法如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor&#x3D;#F4A460&gt;背景色的设置是按照十六进制颜色值：#F4A460&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor&#x3D;#FF6347&gt;背景色的设置是按照十六进制颜色值：#FF6347&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;table&gt;  &lt;table&gt;&lt;tr&gt;&lt;td bgcolor&#x3D;#D8BFD8&gt;背景色的设置是按照十六进制颜色值：#D8BFD8&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;table&gt;  &lt;table&gt;&lt;tr&gt;&lt;td bgcolor&#x3D;#008080&gt;背景色的设置是按照十六进制颜色值：#008080&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;table&gt;  &lt;table&gt;&lt;tr&gt;&lt;td bgcolor&#x3D;#FFD700&gt;背景色的设置是按照十六进制颜色值：#FFD700&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;table&gt;  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>效果如下：</p><table><tr><td bgcolor=#F4A460>背景色的设置是按照十六进制颜色值：#F4A460</td></tr></table><table><tr><td bgcolor=#FF6347>背景色的设置是按照十六进制颜色值：#FF6347</td></tr></table>  <table><tr><td bgcolor=#D8BFD8>背景色的设置是按照十六进制颜色值：#D8BFD8</td></tr></table>  <table><tr><td bgcolor=#008080>背景色的设置是按照十六进制颜色值：#008080</td></tr></table>  <table><tr><td bgcolor=#FFD700>背景色的设置是按照十六进制颜色值：#FFD700</td></tr></table>  <p>参考：</p><p><strong>作者</strong>：**<a href="https://www.cnblogs.com/miki-peng/articles/12502985.html">miki的测试笔记</a>**  </p><p><strong>链接</strong>：<a href="https://www.cnblogs.com/miki-peng/articles/12502985.html">https://www.cnblogs.com/miki-peng/articles/12502985.html</a>  </p><p>作者：择势量投 </p><p>链接：<a href="https://www.jianshu.com/p/ebe52d2d468f">https://www.jianshu.com/p/ebe52d2d468f</a>  </p><p>来源：简书  </p>]]></content>
    
    
    <categories>
      
      <category>MarkDown语法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>MarkDown语法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git常用命令</title>
    <link href="/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"/>
    <url>/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</url>
    
    <content type="html"><![CDATA[<h2 id="Git-常用命令"><a href="#Git-常用命令" class="headerlink" title="Git 常用命令"></a>Git 常用命令</h2><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h3 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在当前目录新建一个Git代码库</span>$ <span class="token function">git</span> init<span class="token comment"># 新建一个目录，将其初始化为Git代码库</span>$ <span class="token function">git</span> init <span class="token punctuation">[</span>project-name<span class="token punctuation">]</span><span class="token comment"># 下载一个项目和它的整个代码历史</span>$ <span class="token function">git</span> clone <span class="token punctuation">[</span>url<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h2 id="-2"><a href="#-2" class="headerlink" title=""></a></h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 显示当前的Git配置</span>$ <span class="token function">git</span> config --list<span class="token comment"># 编辑Git配置文件</span>$ <span class="token function">git</span> config -e <span class="token punctuation">[</span>--global<span class="token punctuation">]</span><span class="token comment"># 设置提交代码时的用户信息</span>$ <span class="token function">git</span> config <span class="token punctuation">[</span>--global<span class="token punctuation">]</span> user.name <span class="token string">"[name]"</span>$ <span class="token function">git</span> config <span class="token punctuation">[</span>--global<span class="token punctuation">]</span> user.email <span class="token string">"[email address]"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="-3"><a href="#-3" class="headerlink" title=""></a></h2><h3 id="增加-删除文件"><a href="#增加-删除文件" class="headerlink" title="增加/删除文件"></a>增加/删除文件</h3><h2 id="-4"><a href="#-4" class="headerlink" title=""></a></h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加指定文件到暂存区</span>$ <span class="token function">git</span> <span class="token function">add</span> <span class="token punctuation">[</span>file1<span class="token punctuation">]</span> <span class="token punctuation">[</span>file2<span class="token punctuation">]</span> <span class="token punctuation">..</span>.<span class="token comment"># 添加指定目录到暂存区，包括子目录</span>$ <span class="token function">git</span> <span class="token function">add</span> <span class="token punctuation">[</span>dir<span class="token punctuation">]</span><span class="token comment"># 添加当前目录的所有文件到暂存区</span>$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token comment"># 添加每个变化前，都会要求确认</span><span class="token comment"># 对于同一个文件的多处变化，可以实现分次提交</span>$ <span class="token function">git</span> <span class="token function">add</span> -p<span class="token comment"># 删除工作区文件，并且将这次删除放入暂存区</span>$ <span class="token function">git</span> <span class="token function">rm</span> <span class="token punctuation">[</span>file1<span class="token punctuation">]</span> <span class="token punctuation">[</span>file2<span class="token punctuation">]</span> <span class="token punctuation">..</span>.<span class="token comment"># 停止追踪指定文件，但该文件会保留在工作区</span>$ <span class="token function">git</span> <span class="token function">rm</span> --cached <span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token comment"># 改名文件，并且将这个改名放入暂存区</span>$ <span class="token function">git</span> <span class="token function">mv</span> <span class="token punctuation">[</span>file-original<span class="token punctuation">]</span> <span class="token punctuation">[</span>file-renamed<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="-5"><a href="#-5" class="headerlink" title=""></a></h2><h3 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h3><h2 id="-6"><a href="#-6" class="headerlink" title=""></a></h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 提交暂存区到仓库区</span>$ <span class="token function">git</span> commit -m <span class="token punctuation">[</span>message<span class="token punctuation">]</span><span class="token comment"># 提交暂存区的指定文件到仓库区</span>$ <span class="token function">git</span> commit <span class="token punctuation">[</span>file1<span class="token punctuation">]</span> <span class="token punctuation">[</span>file2<span class="token punctuation">]</span> <span class="token punctuation">..</span>. -m <span class="token punctuation">[</span>message<span class="token punctuation">]</span><span class="token comment"># 提交工作区自上次commit之后的变化，直接到仓库区</span>$ <span class="token function">git</span> commit -a<span class="token comment"># 提交时显示所有diff信息</span>$ <span class="token function">git</span> commit -v<span class="token comment"># 使用一次新的commit，替代上一次提交</span><span class="token comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span>$ <span class="token function">git</span> commit --amend -m <span class="token punctuation">[</span>message<span class="token punctuation">]</span><span class="token comment"># 重做上一次commit，并包括指定文件的新变化</span>$ <span class="token function">git</span> commit --amend <span class="token punctuation">[</span>file1<span class="token punctuation">]</span> <span class="token punctuation">[</span>file2<span class="token punctuation">]</span> <span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="-7"><a href="#-7" class="headerlink" title=""></a></h2><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><h2 id="-8"><a href="#-8" class="headerlink" title=""></a></h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 列出所有本地分支</span>$ <span class="token function">git</span> branch<span class="token comment"># 列出所有远程分支</span>$ <span class="token function">git</span> branch -r<span class="token comment"># 列出所有本地分支和远程分支</span>$ <span class="token function">git</span> branch -a<span class="token comment"># 新建一个分支，但依然停留在当前分支</span>$ <span class="token function">git</span> branch <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span class="token comment"># 新建一个分支，并切换到该分支</span>$ <span class="token function">git</span> checkout -b <span class="token punctuation">[</span>branch<span class="token punctuation">]</span><span class="token comment"># 新建一个分支，指向指定commit</span>$ <span class="token function">git</span> branch <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token punctuation">[</span>commit<span class="token punctuation">]</span><span class="token comment"># 新建一个分支，与指定的远程分支建立追踪关系</span>$ <span class="token function">git</span> branch --track <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote-branch<span class="token punctuation">]</span><span class="token comment"># 切换到指定分支，并更新工作区</span>$ <span class="token function">git</span> checkout <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span class="token comment"># 切换到上一个分支</span>$ <span class="token function">git</span> checkout -<span class="token comment"># 建立追踪关系，在现有分支与指定的远程分支之间</span>$ <span class="token function">git</span> branch --set-upstream <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token punctuation">[</span>remote-branch<span class="token punctuation">]</span><span class="token comment"># 合并指定分支到当前分支</span>$ <span class="token function">git</span> merge <span class="token punctuation">[</span>branch<span class="token punctuation">]</span><span class="token comment"># 选择一个commit，合并进当前分支</span>$ <span class="token function">git</span> cherry-pick <span class="token punctuation">[</span>commit<span class="token punctuation">]</span><span class="token comment"># 删除分支</span>$ <span class="token function">git</span> branch -d <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span class="token comment"># 删除远程分支</span>$ <span class="token function">git</span> push origin --delete <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span>$ <span class="token function">git</span> branch -dr <span class="token punctuation">[</span>remote/branch<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="-9"><a href="#-9" class="headerlink" title=""></a></h2><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><h2 id="-10"><a href="#-10" class="headerlink" title=""></a></h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 列出所有tag</span>$ <span class="token function">git</span> tag<span class="token comment"># 新建一个tag在当前commit</span>$ <span class="token function">git</span> tag <span class="token punctuation">[</span>tag<span class="token punctuation">]</span><span class="token comment"># 新建一个tag在指定commit</span>$ <span class="token function">git</span> tag <span class="token punctuation">[</span>tag<span class="token punctuation">]</span> <span class="token punctuation">[</span>commit<span class="token punctuation">]</span><span class="token comment"># 删除本地tag</span>$ <span class="token function">git</span> tag -d <span class="token punctuation">[</span>tag<span class="token punctuation">]</span><span class="token comment"># 删除远程tag</span>$ <span class="token function">git</span> push origin :refs/tags/<span class="token punctuation">[</span>tagName<span class="token punctuation">]</span><span class="token comment"># 查看tag信息</span>$ <span class="token function">git</span> show <span class="token punctuation">[</span>tag<span class="token punctuation">]</span><span class="token comment"># 提交指定tag</span>$ <span class="token function">git</span> push <span class="token punctuation">[</span>remote<span class="token punctuation">]</span> <span class="token punctuation">[</span>tag<span class="token punctuation">]</span><span class="token comment"># 提交所有tag</span>$ <span class="token function">git</span> push <span class="token punctuation">[</span>remote<span class="token punctuation">]</span> --tags<span class="token comment"># 新建一个分支，指向某个tag</span>$ <span class="token function">git</span> checkout -b <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token punctuation">[</span>tag<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="-11"><a href="#-11" class="headerlink" title=""></a></h2><h3 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h3><h2 id="-12"><a href="#-12" class="headerlink" title=""></a></h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 显示有变更的文件</span>$ <span class="token function">git</span> status<span class="token comment"># 显示当前分支的版本历史</span>$ <span class="token function">git</span> log<span class="token comment"># 显示commit历史，以及每次commit发生变更的文件</span>$ <span class="token function">git</span> log --stat<span class="token comment"># 搜索提交历史，根据关键词</span>$ <span class="token function">git</span> log -S <span class="token punctuation">[</span>keyword<span class="token punctuation">]</span><span class="token comment"># 显示某个commit之后的所有变动，每个commit占据一行</span>$ <span class="token function">git</span> log <span class="token punctuation">[</span>tag<span class="token punctuation">]</span> HEAD --pretty<span class="token operator">=</span>format:%s<span class="token comment"># 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件</span>$ <span class="token function">git</span> log <span class="token punctuation">[</span>tag<span class="token punctuation">]</span> HEAD --grep feature<span class="token comment"># 显示某个文件的版本历史，包括文件改名</span>$ <span class="token function">git</span> log --follow <span class="token punctuation">[</span>file<span class="token punctuation">]</span>$ <span class="token function">git</span> whatchanged <span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token comment"># 显示指定文件相关的每一次diff</span>$ <span class="token function">git</span> log -p <span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token comment"># 显示过去5次提交</span>$ <span class="token function">git</span> log -5 --pretty --oneline<span class="token comment"># 显示所有提交过的用户，按提交次数排序</span>$ <span class="token function">git</span> shortlog -sn<span class="token comment"># 显示指定文件是什么人在什么时间修改过</span>$ <span class="token function">git</span> blame <span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token comment"># 显示暂存区和工作区的差异</span>$ <span class="token function">git</span> <span class="token function">diff</span><span class="token comment"># 显示暂存区和上一个commit的差异</span>$ <span class="token function">git</span> <span class="token function">diff</span> --cached <span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token comment"># 显示工作区与当前分支最新commit之间的差异</span>$ <span class="token function">git</span> <span class="token function">diff</span> HEAD<span class="token comment"># 显示两次提交之间的差异</span>$ <span class="token function">git</span> <span class="token function">diff</span> <span class="token punctuation">[</span>first-branch<span class="token punctuation">]</span><span class="token punctuation">..</span>.<span class="token punctuation">[</span>second-branch<span class="token punctuation">]</span><span class="token comment"># 显示今天你写了多少行代码</span>$ <span class="token function">git</span> <span class="token function">diff</span> --shortstat <span class="token string">"@&#123;0 day ago&#125;"</span><span class="token comment"># 显示某次提交的元数据和内容变化</span>$ <span class="token function">git</span> show <span class="token punctuation">[</span>commit<span class="token punctuation">]</span><span class="token comment"># 显示某次提交发生变化的文件</span>$ <span class="token function">git</span> show --name-only <span class="token punctuation">[</span>commit<span class="token punctuation">]</span><span class="token comment"># 显示某次提交时，某个文件的内容</span>$ <span class="token function">git</span> show <span class="token punctuation">[</span>commit<span class="token punctuation">]</span>:<span class="token punctuation">[</span>filename<span class="token punctuation">]</span><span class="token comment"># 显示当前分支的最近几次提交</span>$ <span class="token function">git</span> reflog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="-13"><a href="#-13" class="headerlink" title=""></a></h2><h3 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h3><h2 id="-14"><a href="#-14" class="headerlink" title=""></a></h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载远程仓库的所有变动</span>$ <span class="token function">git</span> fetch <span class="token punctuation">[</span>remote<span class="token punctuation">]</span><span class="token comment"># 显示所有远程仓库</span>$ <span class="token function">git</span> remote -v<span class="token comment"># 显示某个远程仓库的信息</span>$ <span class="token function">git</span> remote show <span class="token punctuation">[</span>remote<span class="token punctuation">]</span><span class="token comment"># 增加一个新的远程仓库，并命名</span>$ <span class="token function">git</span> remote <span class="token function">add</span> <span class="token punctuation">[</span>shortname<span class="token punctuation">]</span> <span class="token punctuation">[</span>url<span class="token punctuation">]</span><span class="token comment"># 取回远程仓库的变化，并与本地分支合并</span>$ <span class="token function">git</span> pull <span class="token punctuation">[</span>remote<span class="token punctuation">]</span> <span class="token punctuation">[</span>branch<span class="token punctuation">]</span><span class="token comment"># 上传本地指定分支到远程仓库</span>$ <span class="token function">git</span> push <span class="token punctuation">[</span>remote<span class="token punctuation">]</span> <span class="token punctuation">[</span>branch<span class="token punctuation">]</span><span class="token comment"># 强行推送当前分支到远程仓库，即使有冲突</span>$ <span class="token function">git</span> push <span class="token punctuation">[</span>remote<span class="token punctuation">]</span> --force<span class="token comment"># 推送所有分支到远程仓库</span>$ <span class="token function">git</span> push <span class="token punctuation">[</span>remote<span class="token punctuation">]</span> --all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="-15"><a href="#-15" class="headerlink" title=""></a></h2><h3 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h3><h2 id="-16"><a href="#-16" class="headerlink" title=""></a></h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 恢复暂存区的指定文件到工作区</span>$ <span class="token function">git</span> checkout <span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token comment"># 恢复某个commit的指定文件到暂存区和工作区</span>$ <span class="token function">git</span> checkout <span class="token punctuation">[</span>commit<span class="token punctuation">]</span> <span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token comment"># 恢复暂存区的所有文件到工作区</span>$ <span class="token function">git</span> checkout <span class="token builtin class-name">.</span><span class="token comment"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span>$ <span class="token function">git</span> reset <span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token comment"># 重置暂存区与工作区，与上一次commit保持一致</span>$ <span class="token function">git</span> reset --hard<span class="token comment"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span>$ <span class="token function">git</span> reset <span class="token punctuation">[</span>commit<span class="token punctuation">]</span><span class="token comment"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span>$ <span class="token function">git</span> reset --hard <span class="token punctuation">[</span>commit<span class="token punctuation">]</span><span class="token comment"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span>$ <span class="token function">git</span> reset --keep <span class="token punctuation">[</span>commit<span class="token punctuation">]</span><span class="token comment"># 新建一个commit，用来撤销指定commit</span><span class="token comment"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span>$ <span class="token function">git</span> revert <span class="token punctuation">[</span>commit<span class="token punctuation">]</span>暂时将未提交的变化移除，稍后再移入$ <span class="token function">git</span> stash$ <span class="token function">git</span> stash pop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="-17"><a href="#-17" class="headerlink" title=""></a></h2><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h2 id="-18"><a href="#-18" class="headerlink" title=""></a></h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成一个可供发布的压缩包</span>$ <span class="token function">git</span> archive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>原文作者：码云</p><p>原文链接：<a href="https://gitee.com/all-about-git">https://gitee.com/all-about-git</a></p><hr><p>参考文章：<a href="https://mp.weixin.qq.com/s/Bf7uVhGiu47uOELjmC5uXQ">狂神说</a></p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>Linux</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vim使用手册</title>
    <link href="/Vim%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C.html"/>
    <url>/Vim%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C.html</url>
    
    <content type="html"><![CDATA[<h1 id="Vim使用手册"><a href="#Vim使用手册" class="headerlink" title="Vim使用手册"></a>Vim使用手册</h1><p>所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在。</p><p>但是目前我们使用比较多的是 vim 编辑器。</p><p>vim 具有程序编辑的能力，可以主动的以字体颜色辨别语法的正确性，方便程序设计。</p><hr><h2 id="什么是-vim？"><a href="#什么是-vim？" class="headerlink" title="什么是 vim？"></a>什么是 vim？</h2><p>Vim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p><p>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。</p><p>连 vim 的官方网站 (<a href="http://www.vim.org/">http://www.vim.org</a>) 自己也说 vim 是一个程序开发工具而不是文字处理软件。</p><p>vim 键盘图：</p><p><img src="https://i.loli.net/2021/09/11/WT5nb2xD3lkf17m.gif" alt="img"></p><hr><h2 id="vi-vim-的使用"><a href="#vi-vim-的使用" class="headerlink" title="vi/vim 的使用"></a>vi/vim 的使用</h2><p>基本上 vi/vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）</strong>和<strong>底线命令模式（Last line mode）</strong>。 这三种模式的作用分别是：</p><h3 id="命令模式："><a href="#命令模式：" class="headerlink" title="命令模式："></a>命令模式：</h3><p>用户刚刚启动 vi/vim，便进入了命令模式。</p><p>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。</p><p>以下是常用的几个命令：</p><ul><li><strong>i</strong> 切换到输入模式，以输入字符。</li><li><strong>x</strong> 删除当前光标所在处的字符。</li><li><strong>:</strong> 切换到底线命令模式，以在最底一行输入命令。</li></ul><p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</p><p>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p><h3 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a>输入模式</h3><p>在命令模式下按下i就进入了输入模式。</p><p>在输入模式中，可以使用以下按键：</p><ul><li><strong>字符按键以及Shift组合</strong>，输入字符</li><li><strong>ENTER</strong>，回车键，换行</li><li><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</li><li><strong>DEL</strong>，删除键，删除光标后一个字符</li><li><strong>方向键</strong>，在文本中移动光标</li><li><strong>HOME</strong>/<strong>END</strong>，移动光标到行首/行尾</li><li><strong>Page Up</strong>/<strong>Page Down</strong>，上/下翻页</li><li><strong>Insert</strong>，切换光标为输入/替换模式，光标将变成竖线/下划线</li><li><strong>ESC</strong>，退出输入模式，切换到命令模式</li></ul><h3 id="底线命令模式"><a href="#底线命令模式" class="headerlink" title="底线命令模式"></a>底线命令模式</h3><p>在命令模式下按下:（英文冒号）就进入了底线命令模式。</p><p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p><p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p><ul><li>q 退出程序</li><li>w 保存文件</li></ul><p>按ESC键可随时退出底线命令模式。</p><p>简单的说，我们可以将这三个模式想成底下的图标来表示：</p><p><img src="https://i.loli.net/2021/09/11/7VKEoWw1rzO6ZvU.png" alt="img"></p><hr><h2 id="vi-vim-使用实例"><a href="#vi-vim-使用实例" class="headerlink" title="vi/vim 使用实例"></a>vi/vim 使用实例</h2><h3 id="使用-vi-vim-进入一般模式"><a href="#使用-vi-vim-进入一般模式" class="headerlink" title="使用 vi/vim 进入一般模式"></a>使用 vi/vim 进入一般模式</h3><p>如果你想要使用 vi 来建立一个名为 runoob.txt 的文件时，你可以这样做：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ vim runoob.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>直接输入 <strong>vi 文件名</strong> 就能够进入 vi 的一般模式了。请注意，记得 vi 后面一定要加文件名，不管该文件存在与否！</p><p><img src="https://i.loli.net/2021/09/11/wcAzgrXyH8pqOBQ.jpg" alt="img"></p><h3 id="按下-i-进入输入模式-也称为编辑模式-，开始编辑文字"><a href="#按下-i-进入输入模式-也称为编辑模式-，开始编辑文字" class="headerlink" title="按下 i 进入输入模式(也称为编辑模式)，开始编辑文字"></a>按下 i 进入输入模式(也称为编辑模式)，开始编辑文字</h3><p>在一般模式之中，只要按下 i, o, a 等字符就可以进入输入模式了！</p><p>在编辑模式当中，你可以发现在左下角状态栏中会出现 –INSERT- 的字样，那就是可以输入任意字符的提示。</p><p>这个时候，键盘上除了 <strong>Esc</strong> 这个按键之外，其他的按键都可以视作为一般的输入按钮了，所以你可以进行任何的编辑。</p><p><img src="https://i.loli.net/2021/09/11/Wgs6iDGhkvj1zNp.jpg" alt="img"></p><h3 id="按下-ESC-按钮回到一般模式"><a href="#按下-ESC-按钮回到一般模式" class="headerlink" title="按下 ESC 按钮回到一般模式"></a>按下 ESC 按钮回到一般模式</h3><p>好了，假设我已经按照上面的样式给他编辑完毕了，那么应该要如何退出呢？是的！没错！就是给他按下 <strong>Esc</strong> 这个按钮即可！马上你就会发现画面左下角的 – INSERT – 不见了！</p><h3 id="在一般模式中按下-wq-储存后离开-vi"><a href="#在一般模式中按下-wq-储存后离开-vi" class="headerlink" title="在一般模式中按下 :wq 储存后离开 vi"></a>在一般模式中按下 <strong>:wq</strong> 储存后离开 vi</h3><p>OK，我们要存档了，存盘并离开的指令很简单，输入 <strong>:wq</strong> 即可保存离开！</p><p><img src="https://i.loli.net/2021/09/11/4PjDibhfCactAJe.jpg" alt="img"></p><p>OK! 这样我们就成功创建了一个 runoob.txt 的文件。</p><hr><h2 id="vi-vim-按键说明"><a href="#vi-vim-按键说明" class="headerlink" title="vi/vim 按键说明"></a>vi/vim 按键说明</h2><p>除了上面简易范例的 i, Esc, :wq 之外，其实 vim 还有非常多的按键可以使用。</p><h3 id="第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等"><a href="#第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等" class="headerlink" title="第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等"></a>第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等</h3><table><thead><tr><th align="left">移动光标的方法</th><th></th></tr></thead><tbody><tr><td align="left">h 或 向左箭头键(←)</td><td>光标向左移动一个字符</td></tr><tr><td align="left">j 或 向下箭头键(↓)</td><td>光标向下移动一个字符</td></tr><tr><td align="left">k 或 向上箭头键(↑)</td><td>光标向上移动一个字符</td></tr><tr><td align="left">l 或 向右箭头键(→)</td><td>光标向右移动一个字符</td></tr><tr><td align="left">如果你将右手放在键盘上的话，你会发现 hjkl 是排列在一起的，因此可以使用这四个按钮来移动光标。 如果想要进行多次移动的话，例如向下移动 30 行，可以使用 “30j” 或 “30↓” 的组合按键， 亦即加上想要进行的次数(数字)后，按下动作即可！</td><td></td></tr><tr><td align="left">[Ctrl] + [f]</td><td>屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)</td></tr><tr><td align="left">[Ctrl] + [b]</td><td>屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)</td></tr><tr><td align="left">[Ctrl] + [d]</td><td>屏幕『向下』移动半页</td></tr><tr><td align="left">[Ctrl] + [u]</td><td>屏幕『向上』移动半页</td></tr><tr><td align="left">+</td><td>光标移动到非空格符的下一行</td></tr><tr><td align="left">-</td><td>光标移动到非空格符的上一行</td></tr><tr><td align="left">n<space></td><td>那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。例如 20<space> 则光标会向后面移动 20 个字符距离。</td></tr><tr><td align="left">0 或功能键[Home]</td><td>这是数字『 0 』：移动到这一行的最前面字符处 (常用)</td></tr><tr><td align="left">$ 或功能键[End]</td><td>移动到这一行的最后面字符处(常用)</td></tr><tr><td align="left">H</td><td>光标移动到这个屏幕的最上方那一行的第一个字符</td></tr><tr><td align="left">M</td><td>光标移动到这个屏幕的中央那一行的第一个字符</td></tr><tr><td align="left">L</td><td>光标移动到这个屏幕的最下方那一行的第一个字符</td></tr><tr><td align="left">G</td><td>移动到这个档案的最后一行(常用)</td></tr><tr><td align="left">nG</td><td>n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)</td></tr><tr><td align="left">gg</td><td>移动到这个档案的第一行，相当于 1G 啊！ (常用)</td></tr><tr><td align="left">n<Enter></td><td>n 为数字。光标向下移动 n 行(常用)</td></tr><tr><td align="left">搜索替换</td><td></td></tr><tr><td align="left">/word</td><td>向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！ (常用)</td></tr><tr><td align="left">?word</td><td>向光标之上寻找一个字符串名称为 word 的字符串。</td></tr><tr><td align="left">n</td><td>这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td></tr><tr><td align="left">N</td><td>这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。 例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。</td></tr><tr><td align="left">使用 /word 配合 n 及 N 是非常有帮助的！可以让你重复的找到一些你搜寻的关键词！</td><td></td></tr><tr><td align="left">:n1,n2s/word1/word2/g</td><td>n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则： 『:100,200s/vbird/VBIRD/g』。(常用)</td></tr><tr><td align="left"><strong>:1,$s/word1/word2/g</strong> 或 <strong>:%s/word1/word2/g</strong></td><td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用)</td></tr><tr><td align="left"><strong>:1,$s/word1/word2/gc</strong> 或 <strong>:%s/word1/word2/gc</strong></td><td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)</td></tr><tr><td align="left">删除、复制与贴上</td><td></td></tr><tr><td align="left">x, X</td><td>在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)</td></tr><tr><td align="left">nx</td><td>n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。</td></tr><tr><td align="left">dd</td><td>删除游标所在的那一整行(常用)</td></tr><tr><td align="left">ndd</td><td>n 为数字。删除光标所在的向下 n 行，例如 20dd 则是删除 20 行 (常用)</td></tr><tr><td align="left">d1G</td><td>删除光标所在到第一行的所有数据</td></tr><tr><td align="left">dG</td><td>删除光标所在到最后一行的所有数据</td></tr><tr><td align="left">d$</td><td>删除游标所在处，到该行的最后一个字符</td></tr><tr><td align="left">d0</td><td>那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td></tr><tr><td align="left">yy</td><td>复制游标所在的那一行(常用)</td></tr><tr><td align="left">nyy</td><td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td></tr><tr><td align="left">y1G</td><td>复制游标所在行到第一行的所有数据</td></tr><tr><td align="left">yG</td><td>复制游标所在行到最后一行的所有数据</td></tr><tr><td align="left">y0</td><td>复制光标所在的那个字符到该行行首的所有数据</td></tr><tr><td align="left">y$</td><td>复制光标所在的那个字符到该行行尾的所有数据</td></tr><tr><td align="left">p, P</td><td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)</td></tr><tr><td align="left">J</td><td>将光标所在行与下一行的数据结合成同一行</td></tr><tr><td align="left">c</td><td>重复删除多个数据，例如向下删除 10 行，[ 10cj ]</td></tr><tr><td align="left">u</td><td>复原前一个动作。(常用)</td></tr><tr><td align="left">[Ctrl]+r</td><td>重做上一个动作。(常用)</td></tr><tr><td align="left">这个 u 与 [Ctrl]+r 是很常用的指令！一个是复原，另一个则是重做一次～ 利用这两个功能按键，你的编辑，嘿嘿！很快乐的啦！</td><td></td></tr><tr><td align="left">.</td><td>不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)</td></tr></tbody></table><h3 id="第二部分：一般模式切换到编辑模式的可用的按钮说明"><a href="#第二部分：一般模式切换到编辑模式的可用的按钮说明" class="headerlink" title="第二部分：一般模式切换到编辑模式的可用的按钮说明"></a>第二部分：一般模式切换到编辑模式的可用的按钮说明</h3><table><thead><tr><th align="left">进入输入或取代的编辑模式</th><th></th></tr></thead><tbody><tr><td align="left">i, I</td><td>进入输入模式(Insert mode)： i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)</td></tr><tr><td align="left">a, A</td><td>进入输入模式(Insert mode)： a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td></tr><tr><td align="left">o, O</td><td>进入输入模式(Insert mode)： 这是英文字母 o 的大小写。o 为在目前光标所在的下一行处输入新的一行； O 为在目前光标所在的上一行处输入新的一行！(常用)</td></tr><tr><td align="left">r, R</td><td>进入取代模式(Replace mode)： r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td></tr><tr><td align="left">上面这些按键中，在 vi 画面的左下角处会出现『–INSERT–』或『–REPLACE–』的字样。 由名称就知道该动作了吧！！特别注意的是，我们上面也提过了，你想要在档案里面输入字符时， 一定要在左下角处看到 INSERT 或 REPLACE 才能输入喔！</td><td></td></tr><tr><td align="left">[Esc]</td><td>退出编辑模式，回到一般模式中(常用)</td></tr></tbody></table><h3 id="第三部分：一般模式切换到指令行模式的可用的按钮说明"><a href="#第三部分：一般模式切换到指令行模式的可用的按钮说明" class="headerlink" title="第三部分：一般模式切换到指令行模式的可用的按钮说明"></a>第三部分：一般模式切换到指令行模式的可用的按钮说明</h3><table><thead><tr><th align="left">指令行的储存、离开等指令</th><th></th></tr></thead><tbody><tr><td align="left">:w</td><td>将编辑的数据写入硬盘档案中(常用)</td></tr><tr><td align="left">:w!</td><td>若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！</td></tr><tr><td align="left">:q</td><td>离开 vi (常用)</td></tr><tr><td align="left">:q!</td><td>若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td></tr><tr><td align="left">注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～</td><td></td></tr><tr><td align="left">:wq</td><td>储存后离开，若为 :wq! 则为强制储存后离开 (常用)</td></tr><tr><td align="left">ZZ</td><td>这是大写的 Z 喔！如果修改过，保存当前文件，然后退出！效果等同于(保存并退出)</td></tr><tr><td align="left">ZQ</td><td>不保存，强制退出。效果等同于 **:q!**。</td></tr><tr><td align="left">:w [filename]</td><td>将编辑的数据储存成另一个档案（类似另存新档）</td></tr><tr><td align="left">:r [filename]</td><td>在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面</td></tr><tr><td align="left">:n1,n2 w [filename]</td><td>将 n1 到 n2 的内容储存成 filename 这个档案。</td></tr><tr><td align="left">:! command</td><td>暂时离开 vi 到指令行模式下执行 command 的显示结果！例如 『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！</td></tr><tr><td align="left">vim 环境的变更</td><td></td></tr><tr><td align="left">:set nu</td><td>显示行号，设定之后，会在每一行的前缀显示该行的行号</td></tr><tr><td align="left">:set nonu</td><td>与 set nu 相反，为取消行号！</td></tr></tbody></table><p>特别注意，在 vi/vim 中，数字是很有意义的！数字通常代表重复做几次的意思！ 也有可能是代表去到第几个什么什么的意思。</p><p>举例来说，要删除 50 行，则是用 『50dd』 对吧！ 数字加在动作之前，如我要向下移动 20 行呢？那就是『20j』或者是『20↓』即可。</p><p><strong>原文链接：<a href="https://www.runoob.com/linux/linux-vim.html">https://www.runoob.com/linux/linux-vim.html</a></strong></p><p><strong>原文作者：菜鸟教程</strong></p>]]></content>
    
    
    <categories>
      
      <category>VIm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux系统小记</title>
    <link href="/Linux%E7%B3%BB%E7%BB%9F%E5%B0%8F%E8%AE%B0.html"/>
    <url>/Linux%E7%B3%BB%E7%BB%9F%E5%B0%8F%E8%AE%B0.html</url>
    
    <content type="html"><![CDATA[<h2 id="Linux系统小记"><a href="#Linux系统小记" class="headerlink" title="Linux系统小记"></a>Linux系统小记</h2><h3 id="系统目录结构"><a href="#系统目录结构" class="headerlink" title="系统目录结构"></a>系统目录结构</h3><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/003vPl7Rty6E8kZRlAEdc690.jpg" alt="003vPl7Rty6E8kZRlAEdc&amp;690"></p><p>以下是对这些目录的解释：</p><ul><li><p><strong>/bin</strong>：<br>bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令。</p></li><li><p><strong>/boot：</strong><br>这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。</p></li><li><p><strong>/dev ：</strong><br>dev 是 Device(设备) 的缩写, 该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。</p></li><li><p><strong>/etc：</strong><br>etc 是 Etcetera(等等) 的缩写,这个目录用来存放所有的系统管理所需要的配置文件和子目录。</p></li><li><p><strong>/home</strong>：<br>用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，如上图中的 alice、bob 和 eve。</p></li><li><p><strong>/lib</strong>：<br>lib 是 Library(库) 的缩写这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。</p></li><li><p><strong>/lost+found</strong>：<br>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</p></li><li><p><strong>/media</strong>：<br>linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下。</p></li><li><p><strong>/mnt</strong>：<br>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 /mnt/ 上，然后进入该目录就可以查看光驱里的内容了。</p></li><li><p><strong>/opt</strong>：<br>opt 是 optional(可选) 的缩写，这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</p></li><li><p><strong>/proc</strong>：<br>proc 是 Processes(进程) 的缩写，/proc 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。<br>这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的ping命令，使别人无法ping你的机器：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">echo 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;icmp_echo_ignore_all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p><strong>/root</strong>：<br>该目录为系统管理员，也称作超级权限者的用户主目录。</p></li><li><p><strong>/sbin</strong>：<br>s 就是 Super User 的意思，是 Superuser Binaries (超级用户的二进制文件) 的缩写，这里存放的是系统管理员使用的系统管理程序。</p></li><li><p><strong>/selinux</strong>：<br> 这个目录是 Redhat/CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。</p></li><li><p><strong>/srv</strong>：<br> 该目录存放一些服务启动之后需要提取的数据。</p></li><li><p><strong>/sys</strong>：</p><p>这是 Linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs 。</p><p>sysfs 文件系统集成了下面3种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。</p><p>该文件系统是内核设备树的一个直观反映。</p><p>当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</p></li><li><p><strong>/tmp</strong>：<br>tmp 是 temporary(临时) 的缩写这个目录是用来存放一些临时文件的。</p></li><li><p><strong>/usr</strong>：<br> usr 是 unix shared resources(共享资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</p></li><li><p><strong>/usr/bin：</strong><br>系统用户使用的应用程序。</p></li><li><p><strong>/usr/sbin：</strong><br>超级用户使用的比较高级的管理程序和系统守护程序。</p></li><li><p><strong>/usr/src：</strong><br>内核源代码默认的放置目录。</p></li><li><p><strong>/var</strong>：<br>var 是 variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</p></li><li><p><strong>/run</strong>：<br>是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 /var/run 目录，应该让它指向 run。</p></li></ul><h3 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h3><p>一般来说，用户登陆方式有三种：</p><ul><li>命令行登陆</li><li>ssh登陆</li><li>图形界面登陆</li></ul><h3 id="shutdown：关机"><a href="#shutdown：关机" class="headerlink" title="shutdown：关机"></a>shutdown：关机</h3><blockquote><p>关机指令：shutdown</p></blockquote><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sync</span> <span class="token comment"># 将数据由内存同步到硬盘</span><span class="token function">shutdown</span> <span class="token comment"># 关机指令，可以使用man shutdown来看一下帮助文档</span><span class="token function">shutdown</span> -h <span class="token number">10</span> <span class="token comment"># 10分钟后关机</span><span class="token function">shutdown</span> -h now <span class="token comment"># 马上关机</span><span class="token function">shutdown</span> -h <span class="token number">10</span>:11 <span class="token comment"># 10点11分关机</span><span class="token function">shutdown</span> -h +now <span class="token comment"># 十分钟后关机</span><span class="token function">shutdown</span> -r now <span class="token comment"># 马上重启</span><span class="token function">shutdown</span> -r +10 <span class="token comment"># 十分钟后重启</span><span class="token function">reboot</span> <span class="token comment"># 重启</span><span class="token function">halt</span> <span class="token comment"># 关闭系统</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>注：关机或重启之前要运行<code>sync</code>命令，把内存中的数据同写到磁盘</strong></p><h3 id="ls：列出目录"><a href="#ls：列出目录" class="headerlink" title="ls：列出目录"></a>ls：列出目录</h3><p>语法：<code>ls [选项] [目录名称]</code></p><p>选项与参数：</p><ul><li><p><code>-a</code>：显示所有文件及目录，连同隐藏文件（以<code>.</code>开头）</p></li><li><p><code>-l</code>：使用长格式列出文件及目录信息（包括文件的属性与权限等等数据）</p></li></ul><h3 id="cd：切换目录"><a href="#cd：切换目录" class="headerlink" title="cd：切换目录"></a>cd：切换目录</h3><p><code>cd</code>：是change directory的缩写，该命令的功能是从当前目录切换到指定目录</p><p>语法：<code>cd [相对路径或绝对路径]</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home <span class="token comment"># 切换到home目录</span><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span> <span class="token comment"># 返回上一级目录</span><span class="token builtin class-name">cd</span> / <span class="token comment"># 回到根目录</span><span class="token builtin class-name">cd</span> ~ <span class="token comment"># 回到家目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="pwd：显示当前目录"><a href="#pwd：显示当前目录" class="headerlink" title="pwd：显示当前目录"></a>pwd：显示当前目录</h3><p>pwd是print working directory的缩写，也就是<strong>显示当前工作目录的绝对路径</strong></p><p>语法：<code>pwd [参数]</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">pwd</span> <span class="token comment"># 显示当前工作目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="mkdir：创建新目录"><a href="#mkdir：创建新目录" class="headerlink" title="mkdir：创建新目录"></a>mkdir：创建新目录</h3><p>mkdir是“make directories”的缩写，用来创建目录。</p><p>语法：<code>mkdir [选项] [目录]</code></p><ul><li><code>-m</code>：建立目录的同时设置目录的权限</li><li><code>-p</code>：递归创建多级目录</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> codeanime <span class="token comment">#创建codenaime目录</span><span class="token function">mkdir</span> -p test1/test2/test3/test4 <span class="token comment">#递归创建多层目录</span><span class="token function">mkdir</span> -m <span class="token number">711</span> test2 <span class="token comment"># 创建权限为rwx--x--x的目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="rmdir：删除空目录"><a href="#rmdir：删除空目录" class="headerlink" title="rmdir：删除空目录"></a>rmdir：删除空目录</h3><p>rmdir是remove directory的缩写，用来删除空目录</p><p>语法：<code>rmdir [选项] [目录]</code></p><ul><li>-p：用递归的方式删除指定的目录路径中的所有父级目录，非空则报错</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rmdir</span> -p test1 <span class="token comment"># 删除非空目录</span><span class="token function">rmdir</span> test2 <span class="token comment"># 删除空目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="cp：复制文件或目录"><a href="#cp：复制文件或目录" class="headerlink" title="cp：复制文件或目录"></a>cp：复制文件或目录</h3><p>cp是copy的缩写，用来复制文件或目录</p><p>语法：<code>cp [选项] [文件或目录]</code></p><ul><li><code>-p</code>：保留源文件或目录的所有属性</li><li><code>-d</code>：当复制符号连接时，把目标文件或目录也建立为符号连接，并指向与源文件或目录连接的原始文件或目录</li><li><code>-r</code>：递归复制文件和目录（recursion）</li><li><code>-a</code>：等价于<code>-dpr</code>选项</li><li><code>-f</code>：为强制（force）的意思，若目标文件已存在，则会直接覆盖原文件</li><li><code>-i</code>：若目标文件已存在，则会询问是否覆盖。（inquire）</li><li><code>-l</code>：对源文件建立硬连接，而非复制文件</li><li><code>-s</code>：对源文件建立符号连接，而非复制文件，（即捷径）</li><li><code>-u</code>：当源文件比目标文件新，或者目标文件不存在时，才执行复制此操作</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> /root/install.sh /tmp/codeanime <span class="token comment"># 把root目录下的install.sh文件复制到/tmp/codeanime目录下</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="rm：移除文件或目录"><a href="#rm：移除文件或目录" class="headerlink" title="rm：移除文件或目录"></a>rm：移除文件或目录</h3><p>rm是remove的缩写，用来移除文件或目录，即删除。</p><p>语法：<code>rm [选项] [文件或目录]</code></p><ul><li><code>-f</code>：就是force的意思，忽略不存在的文件，不会出现警告信息</li><li><code>-i</code>：删除前会询问用户是否操作</li><li><code>-r</code>：递归删除（recursion）</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> /tmp/codenaime/install.sh <span class="token comment"># 删除/tmp/codeanime目录下的install.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="mv：移动文件与目录（或修改名称）"><a href="#mv：移动文件与目录（或修改名称）" class="headerlink" title="mv：移动文件与目录（或修改名称）"></a>mv：移动文件与目录（或修改名称）</h3><p>mv是“move”单词的缩写，可以移动文件或对其改名。</p><p>语法：<code>mv [选项]</code></p><ul><li><code>-f</code>：force强制，覆盖已有文件时，不进行任何提示</li><li><code>-i</code>：inquire询问，若存在同名文件，则向用户询问是否覆盖</li><li><code>-u</code>：当源文件比目标文件新，或者目标文件不存在时，才执行移动此操作</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> install.sh <span class="token builtin class-name">test</span> <span class="token comment"># 移动当前目录下install.sh到本目录下的test文件夹下</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="chgrp：更改文件用户组"><a href="#chgrp：更改文件用户组" class="headerlink" title="chgrp：更改文件用户组"></a>chgrp：更改文件用户组</h3><p>语法：<code>chgrp [选型] [文件或目录]</code></p><ul><li><code>-R</code>：递归处理，将指定目录下的所有文件及子目录一并处理（recursion）</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chgrp</span> -R root install.sh <span class="token comment"># 更改文件install.sh的组为root</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="chown：改变文件或目录用户和用户组"><a href="#chown：改变文件或目录用户和用户组" class="headerlink" title="chown：改变文件或目录用户和用户组"></a>chown：改变文件或目录用户和用户组</h3><p>语法：<code>chown [选项]</code></p><ul><li><code>-R</code>：对目前目录下的所有文件与子目录进行相同的拥有者变更</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chown</span> root install.sh <span class="token comment"># 更改文件install.sh用户为root</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="chmod：改变文件或目录权限"><a href="#chmod：改变文件或目录权限" class="headerlink" title="chmod：改变文件或目录权限"></a>chmod：改变文件或目录权限</h3><p>语法：<code>chmod [选项] [文件或文件夹]</code></p><ul><li><code>-R</code>：对目前目录下的所有文件与子目录进行相同的权限变更(即以递回的方式逐个变更)</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">770</span> install.sh <span class="token comment"># 改变install.sh的权限为770，即-rwx-rwx---</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="cat：由第一行开始显示文本内容"><a href="#cat：由第一行开始显示文本内容" class="headerlink" title="cat：由第一行开始显示文本内容"></a>cat：由第一行开始显示文本内容</h3><p>语法：<code>cat [选项] [文件]</code></p><ul><li><code>-n</code>：显示行数（空行也编号）</li><li><code>-b</code>：显示行数（空行不编号）</li><li><code>-E</code>：每行结束处显示$符号</li><li><code>-T</code>：将TAB字符显示为 ^I符号</li><li><code>-v</code>：使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外</li><li><code>-e</code>：等价于”-vE”组合</li><li><code>-t</code>：等价于”-vT”组合</li><li><code>-A</code>：等价于 -vET组合</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> -A install.sh <span class="token comment"># 查看instal.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="tac：与cat相反"><a href="#tac：与cat相反" class="headerlink" title="tac：与cat相反"></a>tac：与cat相反</h3><p>文件内容从最后一行开始显示，可以看出tac是cat倒着写的</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tac</span> -A install.sh <span class="token comment"># 查看instal.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="nl：添加行号"><a href="#nl：添加行号" class="headerlink" title="nl：添加行号"></a>nl：添加行号</h3><p>语法：<code>nl [选项] [文件]</code></p><ul><li><code>-b</code>：指定行号指定的方式。主要有两种：<code>-b a</code>表示无论为空行，也同样列出行号（类似<code>cat -n</code>）;<code>-b t</code>如果有空行，空的那一行不要列出行号（默认值）</li><li><code>-n</code>：列出行号表示的方式。主要有三种：<code>-n ln</code>：行号在荧幕的的最左方显示；<code>-n rn</code>：行号在自己栏位的最右方显示，且不加0；<code>-n rz</code>：行号在自己栏位的最右方显示，且加0；</li><li><code>-w</code>：行号栏位的占用的位数</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nl</span> -n <span class="token function">ln</span> install.sh<span class="token function">nl</span> -b t install.sh<span class="token function">nl</span> -w <span class="token number">10</span> install.sh <span class="token comment"># 行号占位10位</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="more：显示文本文件内容"><a href="#more：显示文本文件内容" class="headerlink" title="more：显示文本文件内容"></a>more：显示文本文件内容</h3><p>语法：<code>more [文件]</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 空格键：向下翻一页</span><span class="token comment"># Enter键：向下翻一行</span><span class="token comment"># /字串：在这个显示的内容中，向下搜寻“字串”这个关键字</span><span class="token comment"># :f：立刻显示出档名中以及显示的行数</span><span class="token comment"># q：立刻离开more，不再显示该文件内容</span><span class="token comment"># b或[ctrl]-b：往回翻页，只对文件有用，对管线无用</span><span class="token comment"># H键：显示帮助屏</span><span class="token comment"># B键：显示上一屏内容</span><span class="token comment"># Q键：退出more命令</span><span class="token comment"># Ctrl+F、空格键：向下滚动一屏</span><span class="token comment"># Ctrl+B：返回上一屏</span><span class="token comment"># =： 输出当前的行号</span><span class="token comment"># V：调用vi编辑器</span><span class="token comment"># !：调用Shell，并执行命令</span><span class="token function">more</span> install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="less：一页一页滚动"><a href="#less：一页一页滚动" class="headerlink" title="less：一页一页滚动"></a>less：一页一页滚动</h3><p>语法：<code>less [文件]</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># PageUp键向上翻页</span><span class="token comment"># PageDown键向下翻页</span><span class="token comment"># q：退出less程序</span><span class="token comment"># 空格键：向下翻动一页</span><span class="token comment"># /字串：向下搜寻“字串”</span><span class="token comment"># ？字串：向上搜寻“字串”</span><span class="token comment"># n：重复前一个搜寻（与/或？有关）</span><span class="token comment"># N：反向的重复前一个搜寻（与/或？有关）</span><span class="token function">less</span> install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="head：取出文件前面几行"><a href="#head：取出文件前面几行" class="headerlink" title="head：取出文件前面几行"></a>head：取出文件前面几行</h3><p>语法：<code>head [选项] [文件]</code></p><ul><li>-n后面跟数字，代表显示几行</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">head</span> -n10 install.sh <span class="token comment"># 显示文件前十行</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="tail：取出文件后几行"><a href="#tail：取出文件后几行" class="headerlink" title="tail：取出文件后几行"></a>tail：取出文件后几行</h3><p>语法：<code>tail [选项] [文件]</code></p><ul><li>-n后面接数字，代表显示几行</li></ul><p>默认显示最后10行。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tail</span> -n20 install.sh <span class="token comment"># 显示文件最后20行</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="ln：为文件创建链接"><a href="#ln：为文件创建链接" class="headerlink" title="ln：为文件创建链接"></a>ln：为文件创建链接</h3><p>ln英文全称是“link”，即链接的意思，它的功能是为某一个文件在另外一个位置建立一个同步的链接。 一种是hard link，又称为硬链接；另一种是symbolic link，又称为符号链接。</p><p>通俗一点理解，可以把硬链接当成源文件的副本，他和源文件一样的大小，但是事实上却不占任何空间。符号链接可以理解为类似windows一样的快捷方式。</p><p>符号链接 ：</p><ul><li>符号链接以路径的形式存在，类似于Windows操作系统中的快捷方式。</li><li>符号链接可以跨文件系统 ，硬链接不可以。</li><li>符号链接可以对一个不存在的文件名进行链接，硬链接不可以。</li><li> 符号链接可以对目录进行链接，硬链接不可以。</li></ul><p>硬链接：</p><ul><li>硬链接以文件副本的形式存在，但不占用实际空间。</li><li>硬链接不允许给目录创建硬链接。</li><li>硬链接只有在同一个文件系统中才能创建。</li></ul><p><strong>语法格式：</strong> <code>ln [选项] [源文件或目录] [目标文件或目录]</code></p><ul><li><code>-b</code>：为每个已存在的目标文件创建备份文件</li><li><code>-f</code>：强制创建链接，即使目标文件已经存在</li><li><code>-n</code>：把指向目录的符号链接视为一个普通文件</li><li><code>-i</code>：交互模式，若目标文件已经存在，则提示用户确认进行覆盖</li><li><code>-s</code>：对源文件建立符号链接，而非硬链接</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> -b install.sh <span class="token comment"># 创建备份文件</span><span class="token function">ln</span> install.sh install2.sh <span class="token comment"># 创建install.sh的硬链接文件install2.sh</span><span class="token function">ln</span> -s install.sh install3.sh <span class="token comment"># 创建install.sh的符号链接文件install3.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="useradd：创建用户"><a href="#useradd：创建用户" class="headerlink" title="useradd：创建用户"></a>useradd：创建用户</h3><p>语法：<code>useradd [选项] [用户名]</code></p><ul><li><code>-c</code>：添加备注文字（comment）</li><li><code>-d</code>：目录，新用户每次登陆时所使用的家目录，如果此目录不存在，则同时使用-m选项，可以创建主目录</li><li><code>-g</code>：指定用户对应的用户组</li><li><code>-G</code>：定义此用户为多个不同组的成员</li><li><code>-m</code>：用户目录不存在时则自动创建</li><li><code>-s</code>：Shell文件 指定用户的登录Shell</li><li><code>-u</code>：指定用户id</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> -m codeanime <span class="token comment"># 创建一个用户为codeanime，其中-m为用户codeanime产生一个主目录/home/codeanime</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>增加用户账号就是在/etc/passwd文件中为新用户增加一条记录，同时更新其他系统文件如/etc/shadow,.etc/group等。</strong></p><h3 id="su：切换用户名"><a href="#su：切换用户名" class="headerlink" title="su：切换用户名"></a>su：切换用户名</h3><p>语法：<code>su [用户名]</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span> <span class="token comment"># 从普通用户切换到root用户</span>exit或logout或快捷方式ctrl+d <span class="token comment">#退回到原来的用户</span><span class="token function">su</span> - root <span class="token comment"># 在切换用户时，如果想在切换用户之后使用新用户的工作环境，可以在su和username之间加-</span>$表示普通用户<span class="token comment">#表示超级用户，即root用户</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="userdel：删除账号"><a href="#userdel：删除账号" class="headerlink" title="userdel：删除账号"></a>userdel：删除账号</h3><p>语法：<code>userdel [选项] [用户名]</code></p><ul><li><code>-r</code>：把用户的主目录一起删除</li></ul><p>如果一个用户的账号不再使用，可以从系统中删除。</p><p>删除用户账号就是要将/etc/passwd等系统文件中的该用户记录删除，必要时还删除用户的主目录。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">userdel</span> codeanime <span class="token comment"># 删除codeanime账户</span><span class="token function">userdel</span> -r codeanime <span class="token comment"># 此命令删除用户codeanime在系统文件中（主要是/etc/passwd, /etc/shadow, /etc/group等）的记录，同时删除用户的主目录。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="usermod：修改账号"><a href="#usermod：修改账号" class="headerlink" title="usermod：修改账号"></a>usermod：修改账号</h3><p>语法：<code>usermod [选项] [账号]</code></p><p>常用的选项包括-c, -d, -m, -g, -G, -s, -u以及-o等，这些选项的意义与useradd命令中的选项一样，可以为用户指定新的资源值。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">usermod</span> -s /bin/code -d /home/co –g developer codeanime <span class="token comment"># 此命令将用户codeanime修改为code，主目录改为/home/co，用户组改为developer。</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="passwd：修改用户账户密码"><a href="#passwd：修改用户账户密码" class="headerlink" title="passwd：修改用户账户密码"></a>passwd：修改用户账户密码</h3><p>语法：<code>passwd [选项] [用户名]</code></p><ul><li><code>-l</code>：锁定用户密码，无法被用户自行修改</li><li><code>-u</code>：解开已锁定用户密码，允许用户自行修改</li><li><code>-d</code>：删除密码</li><li><code>-f</code>：强迫用户下次登录时修改密码</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">passwd</span> <span class="token comment"># 修改密码</span><span class="token function">passwd</span> codeanime <span class="token comment"># 修改codeanime用户密码</span><span class="token function">passwd</span> -d codeanime <span class="token comment"># 删除codeanime用户的密码，下次用户codeanime登陆时，系统不再允许codeanime用户登陆</span><span class="token function">passwd</span> -l codeanime <span class="token comment"># 锁定codeanime用户，使其不能登陆</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="groupadd：新建工作组"><a href="#groupadd：新建工作组" class="headerlink" title="groupadd：新建工作组"></a>groupadd：新建工作组</h3><p>用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group文件的更新</p><p>语法：<code>groupaddd [选项] [用户组]</code></p><ul><li><code>-g</code>：指定新建工作组的id</li><li><code>-o</code>：允许添加组ID号不唯一的工作组</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">groupadd</span> group1 <span class="token comment"># 向系统增加了一个group1新组，新组的组标识号是在当前已有的最大组标识号的基础上加1</span><span class="token function">groupadd</span> -g <span class="token number">101</span> group2 <span class="token comment"># 此命令向系统中增加了一个新组group2，同时指定新组的组标识号是101</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="groupdel：删除用户组"><a href="#groupdel：删除用户组" class="headerlink" title="groupdel：删除用户组"></a>groupdel：删除用户组</h3><p>语法：<code>groupdel [选项] [群组名称]</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">groupdel</span> group1 <span class="token comment"># 删除用户组group1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="groupmod：更改群组识别码或名称"><a href="#groupmod：更改群组识别码或名称" class="headerlink" title="groupmod：更改群组识别码或名称"></a>groupmod：更改群组识别码或名称</h3><p>语法：<code>groupmod [选项] [用户组]</code></p><ul><li><code>-g</code>：设置欲使用的群组识别码</li><li><code>-o</code>：重复使用群组识别码</li><li><code>-n</code>：设置欲使用的群组名称</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">groupmod</span> -g <span class="token number">102</span> group2 <span class="token comment"># 此命令将组group2的组标识号修改为102</span><span class="token function">groupmod</span> –g <span class="token number">103</span> -n group3 group2 <span class="token comment"># 将组group2的标识号改为103，组名修改为group3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="newgrp：登入另一个群组"><a href="#newgrp：登入另一个群组" class="headerlink" title="newgrp：登入另一个群组"></a>newgrp：登入另一个群组</h3><p>newgrp命令类的英文全称为“new group”,该命令类似login指令，当它是以相同的帐号，另一个群组名称，再次登入系统。欲使用newgrp指令切换群组，您必须是该群组的用户，否则将无法登入指定的群组。</p><p>单一用户要同时隶属多个群组，需利用交替用户的设置。若不指定群组名称，则newgrp指令会登入该用户名称的预设群组</p><p>语法：<code>newgrp [选项]</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">newgrp root <span class="token comment"># 将当前用户切换到root用户组，前提条件是root用户组确实是该用户的主组或附加组</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="df：显示磁盘空间使用情况"><a href="#df：显示磁盘空间使用情况" class="headerlink" title="df：显示磁盘空间使用情况"></a>df：显示磁盘空间使用情况</h3><p>df命令的英文全称即“Disk Free”，顾名思义功能是用于显示系统上可使用的磁盘空间。默认显示单位为KB，建议使用“df -h”的参数组合，根据磁盘容量自动变换合适的单位，更利于阅读</p><p>语法：<code>df [选项] [目录或文件]</code></p><ul><li><code>-a</code>：显示所有系统文件</li><li><code>-k</code>：以 KBytes 的容量显示各文件系统</li><li><code>-m</code>：以 MBytes 的容量显示各文件系统</li><li><code>-h</code>：以容易阅读的方式显示</li><li><code>-H</code>：以1000字节为换算单位来显示</li><li><code>-T</code>：输出时显示文件系统类型</li><li><code>-i</code>：显示索引字节信息，不用硬盘容量，而以 inode 的数量来显示</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">df</span> -h <span class="token comment"># 以容易阅读的方式显示</span><span class="token function">df</span> -aT <span class="token comment"># 将系统内的所有特殊文件格式及名称都列出来</span><span class="token function">df</span> -h /etc <span class="token comment">#  将 /etc 底下的可用的磁盘容量以易读的容量格式显示</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="du：查看空间"><a href="#du：查看空间" class="headerlink" title="du：查看空间"></a>du：查看空间</h3><p>du命令的英文全称是“Disk Usage”，即用于查看磁盘占用空间的意思。但是与df命令不同的是du命令是对文件和目录磁盘使用的空间的查看，而不是某个分区,与 df 不一样的是，du 这个命令其实会直接到文件系统内去搜寻所有的文件数据</p><p>语法：<code>du [选项] [文件]</code></p><ul><li><code>-a</code>：显示目录中所有文件大小</li><li><code>-h</code>：以易读方式显示文件大小</li><li><code>-s</code>：仅显示总计</li><li><code>-S</code>：不包括子目录下的总计，与 -s 有点差别</li><li><code>-k</code>：以KB为单位显示文件大小</li><li><code>-m</code>：以MB为单位显示文件大小</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">du</span> <span class="token comment"># 直接输入 du 没有加任何选项时，则 du 会分析当前所在目录的文件与目录所占用的硬盘空间</span><span class="token function">du</span> -a <span class="token comment"># 将文件的容量也列出来</span><span class="token function">du</span> -sm /* <span class="token comment"># 检查根目录底下每个目录所占用的容量,通配符 * 来代表每个目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="mount：文件系统挂载"><a href="#mount：文件系统挂载" class="headerlink" title="mount：文件系统挂载"></a>mount：文件系统挂载</h3><p>语法：<code>mount [选项]</code> </p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mount</span> /dev/hdc6 /mnt/hdc6 <span class="token comment"># 将 /dev/hdc6 挂载到 /mnt/hdc6 上面</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="umount：卸载文件系统"><a href="#umount：卸载文件系统" class="headerlink" title="umount：卸载文件系统"></a>umount：卸载文件系统</h3><p>语法：<code>umount [选项] [装置文件名或挂载点]</code></p><ul><li><code>-f</code>：强制卸除！可用在类似网络文件系统 (NFS) 无法读取到的情况下</li><li><code>-n</code>：不升级 /etc/mtab 情况下卸除</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">umount</span> /dev/hdc6 <span class="token comment"># 卸载/dev/hdc6</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一次Hexo博客迁移至另一台电脑</title>
    <link href="/%E8%AE%B0%E4%B8%80%E6%AC%A1Hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E8%87%B3%E5%8F%A6%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91.html"/>
    <url>/%E8%AE%B0%E4%B8%80%E6%AC%A1Hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E8%87%B3%E5%8F%A6%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91.html</url>
    
    <content type="html"><![CDATA[<h1 id="记一次Hexo博客迁移至另一台电脑"><a href="#记一次Hexo博客迁移至另一台电脑" class="headerlink" title="记一次Hexo博客迁移至另一台电脑"></a>记一次Hexo博客迁移至另一台电脑</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>下载地址见<a href="https://nodejs.org/en/download/">这里</a>。<br>然后正常安装。<br>安装完成后，输入node -v和npm -v，如果出现版本号，那么就安装成功了。</p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>下载地址见<a href="https://git-scm.com/download/win">这里</a>。<br>然后正常安装，只不过最后一步添加路径时选择Use Git from the Windows Command Prompt，这样我们就可以直接在命令提示符里打开git了。<br>安装完成后在命令提示符中输入git —version验证是否安装成功。</p><p><strong>最好把nodejs和git都配置到环境变量里</strong></p><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ npm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>注：这里的<folder>是文件夹名，新搭建的hexo的小伙伴估计都被坑过</p><p>例如我要把博客放在D盘blog文件夹里面的codeanime文件夹里，就在blog文件夹右键，git bash here，</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210903184956484.png" alt="image-20210903184956484"></p><p>注意是在blog文件夹，然后执行命令：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">hexo init codeanimecd codeanimenpm install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>新建完成后，指定文件夹的目录如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">.├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="将原来的文件拷贝到新电脑中"><a href="#将原来的文件拷贝到新电脑中" class="headerlink" title="将原来的文件拷贝到新电脑中"></a>将原来的文件拷贝到新电脑中</h2><p><strong>需要拷贝的文件有：</strong></p><p>_config.yml, theme/, source/, scaffolds/, package.json, .gitignore</p><p>下面是这些文件的作用：</p><p>_config.yml：整个站点的配置，包括基本介绍，所使用的主题，关联的仓库等；<br>theme/：所用的主题以及主题的配置；<br>source/：目前所写的所有文章以及404页面等；<br>scaffolds/：Hexo所提供的模板文件；<br>package.json：说明站点使用了哪些包；<br>gitignore：放置在git端时忽略的文件；</p><p><strong>需要删除的文件</strong></p><p>.git, node_modules/, public/, .deploy_git/, db_json</p><p>这些文件的作用：</p><p>.git：git的配置，关联文件夹等，由于我们已经换了电脑，所以之前的配置应该被舍弃掉；<br>node_modules/：在用npm install时会重新生成；<br>public/：在用hexo generate时会重新生成；<br>.deploy_git/：在用hexo deploy时会重新生成；<br>db.json：站点的一些数据文件；</p><p>其实这些文件就是.gitignore中写的可以被忽略的内容】</p><p>然后进入你的博客目录（我的是codeanime文件夹），右键git bash here，执行命令</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 安装其他一些必要的组件npm install hexo-deployer-git --savenpm install hexo-generator-feed --savenpm install hexo-generator-sitemap --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/Snipaste_2021-09-03_18-34-21.png" alt="Snipaste_2021-09-03_18-34-21"></p><h2 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h2><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;先本地预览hexo cleanhexo ghexo s&#x2F;&#x2F;此时可以先在localhost:4000 本地预览博客，如果不报错，那就说明迁移成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><h2 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h2><p>在你的博客文件夹中打开git bash,复制一下代码</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>内容换成你自己的Githuby用户名和邮箱。<br>执行一下两条指令，检查你有没有输入正确。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">git config user.namegit config user.email<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/Snipaste_2021-09-03_18-35-59.png" alt="Snipaste_2021-09-03_18-35-59"></p><p>然后创建SSH,一路回车</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;youremail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>注意C是大写。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/Snipaste_2021-09-03_18-36-35.png" alt="Snipaste_2021-09-03_18-36-35"></p><p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹（在C:\Users\你的用户名）。</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210903191034203.png" alt="image-20210903191034203"></p><p>ssh，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>而后在GitHub的setting中，找到<code>SSH and GPC keys</code>的设置选项，点击<code>New SSH key</code><br>把你的<code>id_rsa.pub</code>里面的信息复制进去,title随便填写。</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210903191453344.png" alt="image-20210903191453344"></p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210903191543487.png" alt="image-20210903191543487"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 正式部署hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>期间测试的时候会出现登陆github账号的提醒,正常登陆登陆就行了</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/Snipaste_2021-09-03_18-10-28.png" alt="Snipaste_2021-09-03_18-10-28"></p><h2 id="踩坑："><a href="#踩坑：" class="headerlink" title="踩坑："></a>踩坑：</h2><h3 id="报错1：hexo-d时出现ERROR-deployer-not-found-git"><a href="#报错1：hexo-d时出现ERROR-deployer-not-found-git" class="headerlink" title="报错1：hexo d时出现ERROR deployer not found: git"></a>报错1：hexo d时出现ERROR deployer not found: git</h3><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ERROR Deployer not found: git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>这是因为没安装<code>hexo-deployer-git</code>插件，在<strong>站点目录</strong>下输入下面的插件安装就好了：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>然后在使用<code>Hexo d</code>命令就可以推送了。</p><p>错误2:hexo报错spwan failed</p><h2 id="报错2"><a href="#报错2" class="headerlink" title="报错2"></a>报错2</h2><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">FATAL &#123;  err: Error: Spawn failed      at ChildProcess.&lt;anonymous&gt; (&#x2F;usr&#x2F;local&#x2F;src&#x2F;hexo&#x2F;cairbin&#x2F;node_modules&#x2F;hexo-util&#x2F;lib&#x2F;spawn.js:51:21)      at ChildProcess.emit (events.js:376:20)      at Process.ChildProcess._handle.onexit (internal&#x2F;child_process.js:277:12) &#123;    code: 128  &#125;&#125; Something&#39;s wrong. Maybe you can find the solution here: %s https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;troubleshooting.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h3><ul><li>进行以下处理</li></ul><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">##进入博客根目录(以我的为例)cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;hexo&#x2F;cairbin&#x2F;##删除git提交文件夹rm -rf .deploy_git&#x2F;git config --global core.autocrlf false<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><ul><li>最后重新生成提交</li></ul><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h2 id="报错3"><a href="#报错3" class="headerlink" title="报错3"></a>报错3</h2><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">! [remote rejected] master -&gt; master (push declined due to email privacy restrictions)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="解决方案-2"><a href="#解决方案-2" class="headerlink" title="解决方案"></a>解决方案</h3><ul><li>这是因为你的github设置出了问题</li><li>浏览器进入github.com</li><li>登陆github -&gt; “+” -&gt;settings</li><li>后续操作如下图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210903194424285.png" alt="image-20210903194424285"></p><ul><li>重新提交</li></ul><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>迁移</tag>
      
      <tag>搬家</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在GitHub上部署hexo博客</title>
    <link href="/%E5%9C%A8GitHub%E4%B8%8A%E9%83%A8%E7%BD%B2hexo%E5%8D%9A%E5%AE%A2.html"/>
    <url>/%E5%9C%A8GitHub%E4%B8%8A%E9%83%A8%E7%BD%B2hexo%E5%8D%9A%E5%AE%A2.html</url>
    
    <content type="html"><![CDATA[<h1 id="在GitHub上部署hexo博客"><a href="#在GitHub上部署hexo博客" class="headerlink" title="在GitHub上部署hexo博客"></a>在GitHub上部署hexo博客</h1><p>在GitHub Pages部署hexo博客</p><h1 id="需要的工具"><a href="#需要的工具" class="headerlink" title="需要的工具"></a>需要的工具</h1><ol><li>node.js</li><li>git</li></ol><h1 id="安装及部署"><a href="#安装及部署" class="headerlink" title="安装及部署"></a>安装及部署</h1><ol><li><p>安装完成node.js和git后安装hexo<br><code>npm install hexo -g</code><br>安装后使用<code>hexo -v</code>查看版本号，看是否安装成功</p></li><li><p>创建hexo项目寻找一个<br>文件夹作为博客的目录<br>在这个目录下使用<br><code>hexo init</code><br>该目录</p></li><li><p>使用<code>npm install</code>安装需要的组件</p></li><li><p>使用<code>npm install hexo-deployer-git --save</code>安装插件</p></li><li><p>使用<code>hexo generate</code>或<code>hexo g</code>生成当前的博客</p></li><li><p>使用<code>hexo server</code>或<code>hexo s</code>启动服务器<br>然后就可以打开浏览器访问localhost:4000在本地查看当前的博客</p></li><li><p>生成SSH密钥<br>打开Git Bash，使用以下命令配置git<br><code>git config --global user.name &quot;你的github用户的名字&quot;</code><br><code>git config --global user.email &quot;你的github账户邮箱&quot;</code><br><code>cd ~/.ssh</code><br><code>ssh-keygen -t rsa -C &quot;你的github账户邮箱&quot;</code><br>连续三次回车<br><code>eval &quot;$(ssh-agent -s)&quot;</code>，添加到ssh-agent<br><code>ssh-add ~/.ssh/id_rsa</code>，添加生成的SSH密钥到ssh-agent<br><code>cat ~/.ssh/id_rsa.pub</code><br>复制此时显示的内容，内容应该是ssh-rsa简介</p></li><li><p>Ctrl+C退出后，在GitHub上新建一个新的仓库，收藏名随意，还需要记录下来，我这里起名叫博客，最下面的用README初始化这个仓库，要勾选上，然后保存卫生。进入这个仓库后选择设置，在左侧选项卡选项中翻到下面，GItHub页面，源选择master分支，选择保存后，会在这部分的标题处写明这个仓库的url，就是你博客的网址了。还是页面的左侧的选项卡，部署选择添加部署键，添加密钥。<br>题目随意，我设置为了博客<br>的关键粘贴我们刚才复制的那一段。<br>最下面允许写访问要打勾。<br>选择添加项即可。<br>然后在Git的Bash的使用中<br><code>ssh -T git@github.com</code>测试，如果看到喜后面是你的用户名，就说明成功了。</p></li><li><p>修改hexo配置文件</p><p>打开本地博客的根目录，找到_config.yml文件，</p><p>在文件的开头处，第二部分，URL部分改成如下内容：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># URL ## 如果您的站点放在子目录中，请将 url 设置为 &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; 并将 root 设置为 &#39;&#x2F;child&#x2F;&#39; url: http:&#x2F;&#x2F;yoursite.com&#x2F;blog root: &#x2F;blog &#x2F;永久链接： :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F; permalink_defaults:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>这里的url和root这需要修改。url在入口要加仓库名，我的仓库叫博客，所以写成了</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;yoursite.com&#x2F;仓库名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>，同理root修改成</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#x2F;仓库名&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>。</p><p>在文件的结尾处，部署这部分改成如下内容：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># 部署## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html deploy:   type: git   repository: git@github.com:Davidham3&#x2F;blog.git   branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>需要的是，这里的repository这个，应该去GitHub里面你新建那个那个的那个叫的仓库里面找。进入仓库主页后，点击下面绿色的克隆，或者下载在新弹出的窗口选项选择使用SSH，然后将下面的文字复制粘贴到这里。</p><p>修改完配置文件后保存退出。</p></li><li><p>使用<code>hexo clean</code>清除扫描</p></li><li><p>使用<code>hexo g</code>生成博客</p></li><li><p>使用<code>hexo deploy</code>或<code>hexo d</code>将部署到GitHub上，打开你的GitHub Pages设置进入输入的url，就可以的博客了。以上两步也可以连写为<code>hexo d -g</code>。</p><p>原文作者：戴维汉姆</p><p>原文链接：<a href="https://davidham3.github.io/blog/2018/02/20/%E5%9C%A8github%E4%B8%8A%E9%83%A8%E7%BD%B2hexo/">https://davidham3.github.io/blog/2018/02/20/%E5%9C%A8github%E4%B8%8A%E9%83%A8%E7%BD%B2hexo/</a></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Github</tag>
      
      <tag>博客搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo初使用</title>
    <link href="/Hexo%E5%88%9D%E4%BD%BF%E7%94%A8.html"/>
    <url>/Hexo%E5%88%9D%E4%BD%BF%E7%94%A8.html</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo-Fluid添加追番页面&amp;&amp;Bangumi 插件使用说明</title>
    <link href="/Hexo-Fluid%E6%B7%BB%E5%8A%A0%E8%BF%BD%E7%95%AA%E9%A1%B5%E9%9D%A2-Bangumi-%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.html"/>
    <url>/Hexo-Fluid%E6%B7%BB%E5%8A%A0%E8%BF%BD%E7%95%AA%E9%A1%B5%E9%9D%A2-Bangumi-%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.html</url>
    
    <content type="html"><![CDATA[<p><strong>话不多少，立马开淦！</strong></p><h2 id="一、根据官方文档安装插件"><a href="#一、根据官方文档安装插件" class="headerlink" title="一、根据官方文档安装插件"></a>一、根据官方文档安装插件</h2><p>参考<a href="https://github.com/HCLonely/hexo-bilibili-bangumi">Github项目地址</a></p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/68747470733a2f2f6e6f6465692e636f2f6e706d2f6865786f2d62696c6962696c692d62616e67756d692e706e673f646f776e6c6f6164733d7472756526646f776e6c6f616452616e6b3d747275652673746172733d74727565" alt="Bangumi"></p><h3 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h3><div class="code-wrapper"><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ npm install hexo-bilibili-bangumi --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="三、配置"><a href="#三、配置" class="headerlink" title="三、配置"></a>三、配置</h3><p>将下面的配置写入<strong>站点的配置文件</strong> <code>_config.yml</code> 里。（注意不是主题配置文件）</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">bangumi<span class="token operator">:</span> # 追番设置  enable<span class="token operator">:</span> <span class="token boolean">true</span>  path<span class="token operator">:</span>  vmid<span class="token operator">:</span>  title<span class="token operator">:</span> <span class="token string">'追番列表'</span>  quote<span class="token operator">:</span> <span class="token string">'生命不息，追番不止！'</span>  show<span class="token operator">:</span> <span class="token number">1</span>  loading<span class="token operator">:</span>  metaColor<span class="token operator">:</span>  color<span class="token operator">:</span>  webp<span class="token operator">:</span>  progress<span class="token operator">:</span>  extra_options<span class="token operator">:</span>    key<span class="token operator">:</span> valuecinema<span class="token operator">:</span> # 追剧设置  enable<span class="token operator">:</span> <span class="token boolean">true</span>  path<span class="token operator">:</span>  vmid<span class="token operator">:</span>  title<span class="token operator">:</span> <span class="token string">'追番列表'</span>  quote<span class="token operator">:</span> <span class="token string">'生命不息，追番不止！'</span>  show<span class="token operator">:</span> <span class="token number">1</span>  loading<span class="token operator">:</span>  metaColor<span class="token operator">:</span>  color<span class="token operator">:</span>  webp<span class="token operator">:</span>  progress<span class="token operator">:</span>  extra_options<span class="token operator">:</span>    key<span class="token operator">:</span> value<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li><strong>enable</strong>: 是否启用</li><li><strong>path</strong>: 页面路径，默认<code>bangumis/index.html</code>, <code>cinemas/index.html</code></li><li><strong>vmid</strong>: 哔哩哔哩的 <code>vmid(uid)</code>,<a href="https://github.com/HCLonely/hexo-bilibili-bangumi#%E8%8E%B7%E5%8F%96uid">如何获取？</a></li><li><strong>title</strong>: 该页面的标题</li><li><strong>quote</strong>: 写在页面开头的一段话，支持 html 语法，可留空。</li><li><strong>show</strong>: 初始显示页面：<code>0: 想看</code>, <code>1: 在看</code>, <code>2: 看过</code>，默认为<code>1</code></li><li><strong>loading</strong>: 图片加载完成前的 loading 图片</li><li><strong>metaColor</strong>: meta 部分(简介上方)字体颜色</li><li><strong>color</strong>: 简介字体颜色</li><li><strong>webp</strong>: 番剧封面使用<code>webp</code>格式(此格式在<code>safari</code>浏览器下不显示，但是图片大小可以缩小 100 倍左右), 默认<code>true</code></li><li><strong>progress</strong>: 获取番剧数据时是否显示进度条，默认<code>true</code></li><li><strong>extra_options</strong>: 此配置会扩展到Hexo<code>page</code>变量中</li></ul><h3 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h3><ol><li><p><code>hexo new page &quot;bangumis&quot;</code>其 <code>bangumis</code>的 md 文档加上<code>type: &quot;bangumis&quot;</code></p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210830142639979.png" alt="image-20210830142639979"></p></li><li><p>添加 <code>uid</code></p></li><li><p>在<code>hexo generate</code>或<code>hexo deploy</code>之前使用<code>hexo bangumi -u</code>命令更新番剧数据！</p></li><li><p>删除数据命令:<code>hexo bangumi -d</code></p></li></ol><h3 id="五、获取-uid"><a href="#五、获取-uid" class="headerlink" title="五、获取 uid"></a>五、获取 uid</h3><p>登录哔哩哔哩后前往<code>https://space.bilibili.com</code>页面，网址最后的一串数字就是 <code>uid</code></p><p>*<strong>需要将追番列表设置为公开！*</strong></p><h3 id="六、手动添加番剧数据"><a href="#六、手动添加番剧数据" class="headerlink" title="六、手动添加番剧数据"></a>六、手动添加番剧数据</h3><p>因为某些番剧在哔哩哔哩上没有，但是又想在 hexo 中展示，怎么办呢？现在支持手动添加番剧数据了！</p><p>在 <code>sources/_data/</code> 目录下新建文件，命名为 <code>extra_bangumis.json</code> ，并添加以如下内容:</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span>  <span class="token string">"watchedExtra"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      <span class="token string">"title"</span><span class="token operator">:</span> <span class="token string">"缘之空"</span><span class="token punctuation">,</span>       <span class="token string">"type"</span><span class="token operator">:</span> <span class="token string">"番剧"</span><span class="token punctuation">,</span>       <span class="token string">"area"</span><span class="token operator">:</span> <span class="token string">"日本"</span><span class="token punctuation">,</span>       <span class="token string">"cover"</span><span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/mmdjiji/bangumis@main/Yosuga-no-Sora/cover.jpg"</span><span class="token punctuation">,</span>       <span class="token string">"totalCount"</span><span class="token operator">:</span> <span class="token string">"全12话"</span><span class="token punctuation">,</span>       <span class="token string">"id"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token string">"follow"</span><span class="token operator">:</span> <span class="token string">"不可用"</span><span class="token punctuation">,</span>       <span class="token string">"view"</span><span class="token operator">:</span> <span class="token string">"不可用"</span><span class="token punctuation">,</span>       <span class="token string">"danmaku"</span><span class="token operator">:</span> <span class="token string">"不可用"</span><span class="token punctuation">,</span>       <span class="token string">"coin"</span><span class="token operator">:</span> <span class="token string">"不可用"</span><span class="token punctuation">,</span>       <span class="token string">"score"</span><span class="token operator">:</span> <span class="token string">"不可用"</span><span class="token punctuation">,</span>       <span class="token string">"des"</span><span class="token operator">:</span> <span class="token string">"远离都市的田园小镇，奥木染。春日野悠带着妹妹穹，来到了这座城镇。坐落在这里的是，儿时暑假经常造访的充满回忆的已故祖父的家。双亲因意外事故而丧生，变得无依无靠..."</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>title</code> 是番剧的标题，<code>cover</code> 是封面图链接， <code>des</code> 是简介，上述字段均根据需要修改。</p><p>另外除了 <code>watchedExtra</code> 数组，还可以在后面添加新的数组，可用数组名如下:</p><table><thead><tr><th align="left">可用数组名</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">wantWatchExtra</td><td align="left">想看</td></tr><tr><td align="left">watchingExtra</td><td align="left">在看</td></tr><tr><td align="left">watchedExtra</td><td align="left">看过</td></tr></tbody></table><p>需要注意，在两个数组之间需要用 <code>,</code> 分隔。</p><h2 id="七、进行个性化修改"><a href="#七、进行个性化修改" class="headerlink" title="七、进行个性化修改"></a>七、进行个性化修改</h2><blockquote><p>参考<a href="https://liuruibin.com/posts/64eb.html">Matrey 主题增加豆瓣书/影单</a></p></blockquote><h3 id="1、ejs-文件的创建"><a href="#1、ejs-文件的创建" class="headerlink" title="1、ejs 文件的创建"></a>1、ejs 文件的创建</h3><p>在<code>/themes/fluid/layout</code>文件夹下面创建一个名为 <code>bangumi.ejs</code> 的文件，并将下面的内容复制进去：</p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210830142955916.png" alt="image-20210830142955916" style="zoom:80%;" /><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/post-cover'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span> <span class="token operator">&lt;</span>style<span class="token operator">></span>     <span class="token punctuation">.</span>bangumi<span class="token operator">-</span>picture img <span class="token punctuation">&#123;</span>         width<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span> <span class="token operator">&lt;</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"content"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"contact"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container chip-container"</span><span class="token operator">></span>         <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">></span>             <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-content"</span> style<span class="token operator">=</span><span class="token string">"padding: 30px"</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>h1 style<span class="token operator">=</span><span class="token string">"margin: 10px 0 10px 0px;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%=</span> page<span class="token punctuation">.</span>title <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> page<span class="token punctuation">.</span>content <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>         <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">></span>             <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-content"</span> style<span class="token operator">=</span><span class="token string">"text-align: center"</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>h3 style<span class="token operator">=</span><span class="token string">"margin: 5px 0 5px 5px;"</span><span class="token operator">></span>如果你有好的内容推荐，欢迎在下面留言！<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>         <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>gitalk <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>gitalk<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/gitalk'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">&#125;</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>gitment<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/gitment'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">&#125;</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>disqus<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/disqus'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">&#125;</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>livere <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>livere<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/livere'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">&#125;</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>valine <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/valine'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">&#125;</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>minivaline <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>minivaline<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/minivaline'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">&#125;</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>main<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><blockquote><p>最后面的几个<code>&lt;% if (*) &#123; %&gt; &lt;% * %&gt; &lt;% &#125; %&gt;</code>模块，可以根据实际运用模块进行删改</p></blockquote><h3 id="2、插件-moudle-内容修改"><a href="#2、插件-moudle-内容修改" class="headerlink" title="2、插件 moudle 内容修改"></a>2、插件 moudle 内容修改</h3><p>然后在博客站点目录下的 <code>node_modules</code> 文件夹下找到 <code>hexo-bilibili-bangumi/lib</code>，用文本编辑器打开文件夹。</p><p>下面两个 <code>js</code> 文件中的代码进行对应修改：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">hexo-bilibili-bangumi\lib\bangumi-generator.jshexo-bilibili-bangumi\src\lib\bangumi-generator.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">layout<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">,</span> <span class="token string">'bangumi'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><blockquote><p>本来的代码是<code>layout: [&#39;page&#39;, &#39;post&#39;]</code></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
      <tag>魔改</tag>
      
      <tag>主题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 常用命令及备份指南</title>
    <link href="/Hexo-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E5%A4%87%E4%BB%BD%E6%8C%87%E5%8D%97.html"/>
    <url>/Hexo-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E5%A4%87%E4%BB%BD%E6%8C%87%E5%8D%97.html</url>
    
    <content type="html"><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><div class="code-wrapper"><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment"># Hexo的常见缩写</span>$ hexo n <span class="token string double-quoted-string">"博客名称"</span>  <span class="token operator">=></span> hexo <span class="token keyword">new</span> <span class="token string double-quoted-string">"博客名称"</span>   <span class="token comment">#这两个都是创建新文章，前者是简写模式</span>$ hexo p  <span class="token operator">=></span> hexo <span class="token class-name type-declaration">publish</span>$ hexo g  <span class="token operator">=></span> hexo generate  <span class="token comment">#生成</span>$ hexo s  <span class="token operator">=></span> hexo server  <span class="token comment">#启动服务预览</span>$ hexo d  <span class="token operator">=></span> hexo deploy  <span class="token comment">#部署</span>        $ hexo g <span class="token operator">-</span>d <span class="token comment">#生成静态文件（gnerate），且文件生成后立即部署网站（deploy）；</span>$ hexo version <span class="token comment"># 显示 Hexo 版本；</span>$ npm <span class="token keyword">list</span> <span class="token comment">#查看插件；</span>$ npm uninstall <span class="token number">3</span>插件名称<span class="token string backtick-quoted-string">` 卸载插件；$ hexo clean #清除缓存文件 (`</span>db<span class="token operator">.</span>json<span class="token string backtick-quoted-string">`) 和已生成的静态文件 (`</span><span class="token keyword">public</span>`<span class="token punctuation">)</span>；在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令        <span class="token comment"># Hexo 服务器的命令</span>    $ hexo server   <span class="token comment">#Hexo 会监视文件变动并自动更新，无须重启服务器。</span>$ hexo server <span class="token operator">-</span>s   <span class="token comment">#静态模式</span>$ hexo server <span class="token operator">-</span>p <span class="token number">5000</span>   <span class="token comment">#更改端口</span>$ hexo server <span class="token operator">-</span>i <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.1</span>   <span class="token comment">#自定义IP</span>$ hexo clean   <span class="token comment">#清除缓存，网页正常情况下可以忽略此条命令</span>$ hexo g   <span class="token comment">#生成静态网页</span>$ hexo d   <span class="token comment">#开始部署</span>        <span class="token comment"># Hexo资料网站</span>    https<span class="token punctuation">:</span><span class="token comment">//hexo.io/zh-cn/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="备份博客"><a href="#备份博客" class="headerlink" title="备份博客"></a>备份博客</h2><p>使用 <strong><a href="https://github.com/coneycode/hexo-git-backup">hexo-git-backup</a></strong> 插件进行备份操作。</p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>如果 Hexo 版本是 3.x.x，则应按如下方式安装：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ npm install hexo-git-backup --saveCopy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="插件升级"><a href="#插件升级" class="headerlink" title="插件升级"></a>插件升级</h3><p>如果使用 –save 安装，则在更新时必须先删除。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ npm remove hexo-git-backup$ npm install hexo-git-backup --saveCopy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="插件配置"><a href="#插件配置" class="headerlink" title="插件配置"></a>插件配置</h3><p>在博客目录根的 _config.yml 中增加相应配置。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">backup:    type: git    theme: coney,landscape,xxx    repository:       github: git@github.com:xxx&#x2F;xxx.git,branchName       gitcafe: git@github.com:xxx&#x2F;xxx.git,branchNameCopy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>其中 branchName 为在 GitHub 中博客仓库中自行创建的分支名称。若需要备份主题则在 theme 处添加主题名称。</p><blockquote><p>插件更多配置细则请参考官方文档。</p></blockquote><h3 id="插件使用"><a href="#插件使用" class="headerlink" title="插件使用"></a>插件使用</h3><p><code>hexo b</code> 备份博客到 GitHub 上对应的 backup 分支。</p><p><strong>建议每次发布博客 <code>hexo d</code> 的时候都同时 <code>hexo b</code> 对博客进行备份更新。</strong></p><h2 id="恢复博客"><a href="#恢复博客" class="headerlink" title="恢复博客"></a>恢复博客</h2><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>在新环境下根据 <a href="https://hexo.io/zh-cn/">Hexo官方文档</a> 安装配置好Hexo环境，</p><p>安装博客部署到 GitHub 所需要的插件：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">npm install --save hexo-deployer-gitCopy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="覆盖本地文件"><a href="#覆盖本地文件" class="headerlink" title="覆盖本地文件"></a>覆盖本地文件</h3><p>从之前插件备份到 GitHub 分支中下载博客文件到本地，并覆盖本地博客文件。</p><p>此外，可以只下载其中的 <code>config.yml，theme/，source/，scaffolds/，package.json，.gitignore</code> 这六个文件覆盖。</p><p>此时运行如下三连进行测试博客是否迁移成功。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">hexo cleanhexo ghexo sCopy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>如果成功接下来就是安装常用插件的任务了….</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><ul><li>如果不想使用 <a href="https://github.com/coneycode/hexo-git-backup">hexo-git-backup</a> 插件对博客进行备份，可参考此文：<a href="https://lrscy.github.io/2018/01/26/Hexo-Github-Backup/">在Github上备份Hexo博客</a> 。</li><li>在 <code>hexo d</code> 时若出现 <code>fatal: &#39;github&#39; does not appear to be a git repository</code> 的错误，请参考此 <a href="https://github.com/coneycode/hexo-git-backup/issues/8">Issue</a> 。</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://hexo.io/zh-cn/docs/commands">Hexo官方文档</a></li><li><a href="https://github.com/coneycode/hexo-git-backup">hexo-git-backup</a></li><li><a href="https://mxy493.xyz/2019/05/25/Hexo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8%E6%8F%92%E4%BB%B6hexo-git-backup%E9%80%9A%E8%BF%87GitHub%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/">Hexo博客使用插件hexo-git-backup通过GitHub备份与恢复</a></li><li><a href="https://lrscy.github.io/2018/01/26/Hexo-Github-Backup/">在Github上备份Hexo博客</a></li><li><a href="https://www.dazhuanlan.com/2019/10/12/5da110cdd9a7b/">卸载 hexo 插件</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>备份Hexo博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Fluid主题魔改</title>
    <link href="/Hexo-Fluid%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9.html"/>
    <url>/Hexo-Fluid%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9.html</url>
    
    <content type="html"><![CDATA[<p><strong>所谓魔改，就是与主题不同，一旦主题已经被采用或者被实现，<del>则会被划掉</del>，而且魔改初心是使用无侵入式的方式修改——即不修改源码，而是使用注入器的方式。这样的话主题升级比较容易！</strong></p><h3 id="一、在任意hexo主题博客中添加github日历：在博客中添加github的commit的日历："><a href="#一、在任意hexo主题博客中添加github日历：在博客中添加github的commit的日历：" class="headerlink" title="一、在任意hexo主题博客中添加github日历：在博客中添加github的commit的日历："></a>一、在任意hexo主题博客中添加<a href="https://aigisss.com/blog/posts/91dc324b.html">github日历</a>：在博客中添加github的commit的日历：</h3><h3 id="二、背景固定"><a href="#二、背景固定" class="headerlink" title="二、背景固定"></a>二、<a href="https://aigisss.com/blog/posts/1563abd8.html">背景固定</a></h3><h3 id="三、自定义滚动条、首页图片动画、自动翻译标题至英文标题、Twikoo评论样式修改"><a href="#三、自定义滚动条、首页图片动画、自动翻译标题至英文标题、Twikoo评论样式修改" class="headerlink" title="三、自定义滚动条、首页图片动画、自动翻译标题至英文标题、Twikoo评论样式修改"></a>三、<a href="https://www.xifenghhh.top/article/hexo-fluid-theme-beautification-with-the-addition-of-falling-cherry-blossoms-black-lines-and-mouse-clicks-love/">自定义滚动条</a>、<a href="https://forsure.live/customize-some-effects-for-hexofluid/">首页图片动画、自动翻译标题至英文标题、Twikoo评论样式修改</a></h3><h3 id="四、瞎折腾1，瞎折腾2，瞎折腾3，"><a href="#四、瞎折腾1，瞎折腾2，瞎折腾3，" class="headerlink" title="四、瞎折腾1，瞎折腾2，瞎折腾3，"></a>四、<a href="https://blog.jalenchuh.cn/posts/hexo-fluid/">瞎折腾1</a>，<a href="http://yearito.cn/posts/hexo-theme-beautify.html">瞎折腾2</a>，<a href="https://qianling.pw/hexo-optimization/">瞎折腾3</a>，</h3><h3 id="五、主题美化-头部上升的气泡、动态彩带、动态黑色线条、雪花飘落、樱花飘落、鼠标跟随小星星、页脚加入运行时间、大雪花飘落、鼠标点击出字、鼠标点击出小爱心、鼠标点击出爆炸效果、鼠标指针、滚动条颜色、头部打字机"><a href="#五、主题美化-头部上升的气泡、动态彩带、动态黑色线条、雪花飘落、樱花飘落、鼠标跟随小星星、页脚加入运行时间、大雪花飘落、鼠标点击出字、鼠标点击出小爱心、鼠标点击出爆炸效果、鼠标指针、滚动条颜色、头部打字机" class="headerlink" title="五、主题美化:头部上升的气泡、动态彩带、动态黑色线条、雪花飘落、樱花飘落、鼠标跟随小星星、页脚加入运行时间、大雪花飘落、鼠标点击出字、鼠标点击出小爱心、鼠标点击出爆炸效果、鼠标指针、滚动条颜色、头部打字机"></a>五、<a href="https://cxyzjd.com/article/weixin_43471926/109798811">主题美化</a>:头部上升的气泡、动态彩带、动态黑色线条、雪花飘落、樱花飘落、鼠标跟随小星星、页脚加入运行时间、大雪花飘落、鼠标点击出字、鼠标点击出小爱心、鼠标点击出爆炸效果、鼠标指针、滚动条颜色、头部打字机</h3><h3 id="六、看板娘1-看板娘2-看板娘3-看板娘自定义提示文本"><a href="#六、看板娘1-看板娘2-看板娘3-看板娘自定义提示文本" class="headerlink" title="六、看板娘1,看板娘2,看板娘3,看板娘自定义提示文本"></a>六、<a href="https://www.xifenghhh.top/article/hexo-fluid-theme-beautification-with-live2d-kanban-girl/">看板娘1</a>,<a href="https://blog.cyfan.top/p/abf13c7a.html">看板娘2</a>,<a href="https://ming-cloud.com/20210823/HEXO/bb97d92b7cbd/">看板娘3</a>,<a href="https://muspace.top/posts/35059/">看板娘自定义提示文本</a></h3><h3 id="七、一言"><a href="#七、一言" class="headerlink" title="七、一言"></a>七、<a href="https://pxxyyz.com/posts/30454/">一言</a></h3><h3 id="八、添加网站运行时间与版权声明优化、添加排序、加密、标题翻译、站点地图等插件"><a href="#八、添加网站运行时间与版权声明优化、添加排序、加密、标题翻译、站点地图等插件" class="headerlink" title="八、添加网站运行时间与版权声明优化、添加排序、加密、标题翻译、站点地图等插件"></a>八、<a href="https://www.xifenghhh.top/article/hexo-fluid-theme-adds-website-runtime-and-copyright-statement-optimization/">添加网站运行时间与版权声明优化</a>、<a href="https://www.xifenghhh.top/article/hexo-fluid-theme-adds-sorting-encryption-title-translation-sitemap-and-other-plugins/">添加排序、加密、标题翻译、站点地图等插件</a></h3><h3 id="九、版权声明、tag、页脚优化"><a href="#九、版权声明、tag、页脚优化" class="headerlink" title="九、版权声明、tag、页脚优化"></a>九、<a href="https://clearlight.com.cn/posts/fluid_details.html">版权声明、tag、页脚优化</a></h3><h3 id="十、自定义字体、关于页添加评论、评论样式"><a href="#十、自定义字体、关于页添加评论、评论样式" class="headerlink" title="十、自定义字体、关于页添加评论、评论样式"></a>十、<a href="https://www.erenship.com/posts/40222.html">自定义字体、关于页添加评论、评论样式</a></h3><h3 id="十一、浏览器网页标题恶搞"><a href="#十一、浏览器网页标题恶搞" class="headerlink" title="十一、浏览器网页标题恶搞"></a>十一、<a href="https://zhuanlan.zhihu.com/p/69211731">浏览器网页标题恶搞</a></h3>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
      <tag>魔改</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给Hexo + Github pages搭建的个人博客绑定域名</title>
    <link href="/%E7%BB%99Hexo-Github-pages%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D.html"/>
    <url>/%E7%BB%99Hexo-Github-pages%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D.html</url>
    
    <content type="html"><![CDATA[<h2 id="给Hexo-Github-pages搭建的个人博客绑定域名"><a href="#给Hexo-Github-pages搭建的个人博客绑定域名" class="headerlink" title="给Hexo + Github pages搭建的个人博客绑定域名"></a>给Hexo + Github pages搭建的个人博客绑定域名</h2><p>前段时间使用<a href="https://github.com/hexojs/hexo">Hexo</a>给自己搭了一个博客，托管在Github上面。不过托管在Github上的博客对外暴露的是<code>github.io</code>的子域名，那么既然是个人博客，当然要上自己的域名啦！话不多少，开始折腾吧！</p><h3 id="一、购买域名"><a href="#一、购买域名" class="headerlink" title="一、购买域名"></a>一、购买域名</h3><p>选择域名也是一个技术活，建议大家在下单购买自己中意的域名之前，先去检查一下这个域名之前有没有被人使用过，以及这个域名是否被各个搜索引擎ban掉了，这里的门道比较多，我刚刚开始接触，也是在网上搜资料看的，这里就不多说了，建议大家直接搜资料看看 ; )</p><p>我这里是在腾讯云上购买的域名，进入腾讯云的<a href="https://buy.cloud.tencent.com/domain?from=console">域名注册服务</a>，可以选一个中意的域名，先搜一下看看哪些后缀的域名还没有被占用。</p><p>例如搜索”codeanime”域名,哪个能买就买哪个</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210828202046510.png" alt="image-20210828202046510"></p><p><strong>注意</strong>： 在国内购买域名需要实名认证才能使用</p><h3 id="二、配置域名解析记录"><a href="#二、配置域名解析记录" class="headerlink" title="二、配置域名解析记录"></a>二、配置域名解析记录</h3><p>买到的域名要腾讯云审核好后才能使用，审核好后需要解析一下才能指向我们的Github pages地址。从腾讯云<a href="https://console.cloud.tencent.com/domain">域名注册</a>界面找到刚刚购买的域名，点击右边的“解析”，进入配置页。</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210828202934092.png" alt="image-20210828202934092"></p><p>这里可以选择快速添加解析：</p><p>1、点击快速添加解析</p><p>2、选择网站解析</p><p>3、选择域名映射（CANME）</p><p>4、填写你github仓库的域名，确定</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210828203601002.png" alt="image-20210828203601002"></p><h3 id="三、配置CNAME文件"><a href="#三、配置CNAME文件" class="headerlink" title="三、配置CNAME文件"></a>三、配置CNAME文件</h3><p>DNS配置生效后，新购买的域名就已经指向Github pages页面地址了。但此时如果去访问这个域名的话，得到的是Github的404返回页，这是因为我们还没有在Github pages中配置域名。我们还需要在工程的根目录下放置一份CNAME文件指向我们的域名。<br>这里说的“根目录”是指的托管在Github pages上的静态页面工程的根目录，而对于hexo源工程而言，CNAME文件应该放在<code>source/</code>目录下，文件内容就是我们的域名，操作如下：</p><p>找到你的hexo博客目录，进入source文件夹，创建一个”CNAME”文件（没有后缀名的）</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210828203932005.png" alt="image-20210828203932005"></p><p>打开CNAME文件，内容就填写你的域名</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210828210329458.png" alt="image-20210828210329458"></p><h3 id="四、最后到你-code-anime-github-io-的Settings里，填上你的域名"><a href="#四、最后到你-code-anime-github-io-的Settings里，填上你的域名" class="headerlink" title="四、最后到你 code-anime.github.io 的Settings里，填上你的域名"></a>四、最后到你 <a href="https://link.juejin.cn/?target=http://xxx.github.io">code-anime.github.io</a> 的Settings里，填上你的域名</h3><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210828210810855.png" alt="image-20210828210810855"></p><p>然后执行 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code> 完成构建和部署就行了。</p>]]></content>
    
    
    <categories>
      
      <category>生命不息折腾不止！</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>生命不息折腾不止！</tag>
      
      <tag>github</tag>
      
      <tag>域名</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《樱花庄的宠物女孩》人物简介</title>
    <link href="/%E3%80%8A%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9%E3%80%8B%E4%BA%BA%E7%89%A9%E7%AE%80%E4%BB%8B.html"/>
    <url>/%E3%80%8A%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9%E3%80%8B%E4%BA%BA%E7%89%A9%E7%AE%80%E4%BB%8B.html</url>
    
    <content type="html"><![CDATA[<p>《樱花庄的宠物女孩》是鸭志田一著作、沟口凯吉负责插画、电击文库所属的轻小说，全13卷（本篇10卷+短篇3卷）。小说亦改编成同名动画、漫画以及游戏。</p><p>繁体中文版由台湾角川发行，简体中文版由天闻角川发行，并授权腾讯动漫在其平台上发布电子版。 [1] </p><p>小说曾获“这本轻小说真厉害！2011年第16名的成绩。 [2] </p><ul><li><p>中文名</p><p>樱花庄的宠物女孩</p></li><li><p>原版名称</p><p>さくら荘のペットな彼女</p></li><li><p>作  者</p><p><a href="https://baike.baidu.com/item/%E9%B8%AD%E5%BF%97%E7%94%B0%E4%B8%80/2496763">鸭志田一</a></p></li></ul><h2 id="作品背景"><a href="#作品背景" class="headerlink" title="作品背景"></a>作品背景</h2><p><a href="javascript:;">编辑</a><a href="javascript:;"> 语音</a></p><p>作者<a href="https://baike.baidu.com/item/%E9%B8%AD%E5%BF%97%E7%94%B0%E4%B8%80/2496763">鸭志田一</a>在后记中提到，故事的发想在很久以前就大致想到，并列入“总有一天想写的故事清单”当中。 [3] 至于标题的“<a href="https://baike.baidu.com/item/%E6%A8%B1%E8%8A%B1%E5%BA%84/5722674">樱花庄</a>”，只是因为中意它听起来顺耳又有亲切感才取的名称。但由于这不是太罕见的名字，所以作者上网随意搜寻了一下，发现它似乎实际存在于日本全国各地许多地方，但其实并没有以哪里的樱花庄作为题材。 [4] </p><h2 id="故事内容"><a href="#故事内容" class="headerlink" title="故事内容"></a>故事内容</h2><p><a href="javascript:;">编辑</a><a href="javascript:;"> 语音</a></p><p>小说主要讲述了就读水明艺术大学附属高中的神田空太，一年级的夏天时在宿舍中养猫，而被校长叫去问话，校长让他在丢掉猫与从此搬到”樱花庄”中作选择。身为爱猫一族的空太，暂时选择了流落到因聚集各种怪人而恶名昭著的“樱花庄”。 隔年春天，随着世界级天才画家椎名真白搬进了樱花庄，神田空太开始过起被这名缺乏常识的少女耍得团团转的日子。 [5] </p><p><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/4bed2e738bd4b31c181fcf2382d6277f9e2ff803?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/4bed2e738bd4b31c181fcf2382d6277f9e2ff803" alt="img"></a></p><h2 id="登场角色"><a href="#登场角色" class="headerlink" title="登场角色"></a>登场角色</h2><p><a href="javascript:;">编辑</a><a href="javascript:;"> 语音</a></p><h3 id="樱花庄"><a href="#樱花庄" class="headerlink" title="樱花庄"></a>樱花庄</h3><table><thead><tr><th>**<a href="https://baike.baidu.com/item/%E7%A5%9E%E7%94%B0%E7%A9%BA%E5%A4%AA/145665">神田空太</a>**就读水明艺术大学附属高中普通科二年级，因在一般宿舍养猫而被流放到樱花庄，成为樱花庄的101号房客。感受到了自己的才能和真白的差距之后奋力追赶，目标是成为游戏制作人。三鹰仁评价空太具有不可思议的力量能把樱花庄的人凝聚在一起。</th><th><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/5bafa40f4bfbfbed171b30a67cf0f736aec31fac?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/5bafa40f4bfbfbed171b30a67cf0f736aec31fac" alt="img"></a></th></tr></thead><tbody><tr><td>**<a href="https://baike.baidu.com/item/%E6%A4%8E%E5%90%8D%E7%9C%9F%E7%99%BD/10073247">椎名真白</a>**从英国转学到水明艺术大学附属高中美术科二年级。个性温和，<a href="https://baike.baidu.com/item/%E5%A4%A9%E7%84%B6%E5%91%86/79727">天然呆</a>、三无，有极度地依赖性。完全没有一点自理能力，甚至连换洗衣物也是空太帮忙选，喜爱吃年轮蛋糕，拥有与常人迥异的思维回路，因为出生于艺术世家，从小便开始学习画画，对外界的反应迟钝，不会笑，缺乏生活常识，被空太评价为“活在绘画的世界里”。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/f9dcd100baa1cd11130827fbbd12c8fcc2ce2daa?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/f9dcd100baa1cd11130827fbbd12c8fcc2ce2daa" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E9%9D%92%E5%B1%B1%E4%B8%83%E6%B5%B7/2561100">青山七海</a>**空太的同班同学。原本住在大阪，因此操有一口<a href="https://baike.baidu.com/item/%E5%85%B3%E8%A5%BF%E8%85%94">关西腔</a>，为了能够当上声优而努力改掉，但是激动的时候还是会下意识的用关西腔。在学校保持着优等生的姿态，非常真实，平易近人，有点羞涩、傲娇，平凡而可爱。似乎很喜欢老虎，有一个具有搭话功能的很可爱的老虎抱枕“虎次郎”，其他很多东西也是老虎。喜欢空太，但是不敢坦率地表达出来。梦想是声优。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/7aec54e736d12f2ea454fabb4bc2d56284356893?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/7aec54e736d12f2ea454fabb4bc2d56284356893" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E4%B8%8A%E4%BA%95%E8%8D%89%E7%BE%8E%E5%92%B2/2560554">上井草美咲</a>**就读于水明艺术大学附属高中美术科三年级，上井草风香的妹妹。美术技巧高超，喜欢制作动画，独自制作了多部动画。属性为“外星人”，行为举止怪异，永远充满激情，充满活力，常令神田空太和三鹰仁非常烦恼。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/e61190ef76c6a7efe9adfcfdf9faaf51f2de6665?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/e61190ef76c6a7efe9adfcfdf9faaf51f2de6665" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E4%B8%89%E9%B9%B0%E4%BB%81/2561300">三鹰仁</a>**在樱花庄中的别称为“夜之帝王”，源自于其女性关系的混乱、其帅气的外貌、花花公子的性格跟夜夜笙歌的能力，被空太称做“走在路上就可以让女性怀孕”，但他本人宣称都有做避孕措施。同时和六个已经工作的成年女性交往，按星期几来安排晚上去谁家过夜。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/35a85edf8db1cb1370696bc8d954564e93584bec?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/35a85edf8db1cb1370696bc8d954564e93584bec" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E8%B5%A4%E5%9D%82%E9%BE%99%E4%B9%8B%E4%BB%8B/2561714">赤坂龙之介</a><strong>有着女性面貌的少年。程式设计师。是个茧居族，整天龟在宿舍房间里，用电脑和樱花庄房客连络。在业界很有名气，编写的程序受到普遍的好评。讨厌异性，不能有任何身体接触，被丽塔吻过之后出现昏厥。</strong><a href="https://baike.baidu.com/item/%E5%B0%8F%E5%A5%B3%E4%BB%86/4359157">小女仆</a>**由龙之介独立开发的程式，非常人性化。主要工作是当龙之介忙碌时，代替龙之介联络樱花庄其他房客之用，研发者有提到目前正在研发如何让女仆得以实体化。女仆的衣服以及动作由美咲设计制作。对龙之介抱有好意的样子，对丽塔抱有敌意。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/b3fb43166d224f4af3db24c80df790529922d1af?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/b3fb43166d224f4af3db24c80df790529922d1af" alt="赤坂龙之介（左）、女仆（右）"></a>赤坂龙之介（左）、女仆（右）</td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E5%8D%83%E7%9F%B3%E5%8D%83%E5%AF%BB/2562160">千石千寻</a>**水明艺术大学附属高中的美术教师樱花庄的管理员，住在管理员室椎名真白的表姐，做出决定把椎名真白交给了空太的罪魁祸首。自称“永远的二十九岁”。小说第一卷登场时为二十九岁又十五个月，第七卷时为二十九岁又三十个月，三围参数不详。学生时代梦想是成为画家，在被和希表白时被和希说喜欢千寻的画，但是大学毕业之后放弃作画而回到母校做美术老师。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/80cb39dbb6fd5266a68c6bcfaf18972bd5073641?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/80cb39dbb6fd5266a68c6bcfaf18972bd5073641" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E4%B8%BD%E5%A1%94%C2%B7%E7%88%B1%E5%9B%A0%E5%85%B9%E6%B8%A5%E5%8F%B8/7735532">丽塔·爱因兹渥司</a>**真白过去在英国的室友。与空太和真白等人同年，但外表和言行看起来比他们更为成熟。身材上前凸后翘，比真白和七海的身材还要好。因真白的能力太过耀眼而放弃绘画，不过在来到樱花庄之后重拾画笔，喵波隆的制作功不可没。见过龙之介之后对龙之介产生兴趣并且对龙之介展开攻势。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/d52a2834349b033bfec4650611ce36d3d439bd9a?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/d52a2834349b033bfec4650611ce36d3d439bd9a" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E5%A7%AC%E5%AE%AB%E4%BC%8A%E7%BB%87/6354084">姬宫伊织</a>**在仁与美咲毕业后、空太等人升上三年级后，入学水明艺术大学附属高中音乐科一年级，姫宫沙织的亲弟弟。7卷登场。本人是个散发青春气息的男高中生，也有着一般男生会有的好色一面，喜欢女孩子前凸后翘，梦想希望自己未来的女朋友是个身材火辣的美少女，有着自己能像恋爱模拟游戏中般梦幻的邂逅场景再现，之后跟心仪的女孩子顺利恋爱的妄想。喜欢长谷栞奈，并毫不掩饰这份感情，向栞奈表白并遭到拒绝，但一直没有放弃。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/6609c93d70cf3bc79ca14e62d600baa1cc112a9e?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/6609c93d70cf3bc79ca14e62d600baa1cc112a9e" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E9%95%BF%E8%B0%B7%E6%A0%9E%E5%A5%88/6354029">长谷栞奈</a>**在仁与美咲毕业后、空太等人升上三年级后，入学水明艺术大学附属高中普通科一年级，曾和优子同宿舍。7卷登场。高中生作家，以自身家庭经历创作的小说颇得好评。曾经喜欢神田空太，但意识到自己已无法参与到七海和真白的竞争中而感到不甘心。也曾在自己写的小说里表达过这种感情。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/b3119313b07eca80cfa5ba69962397dda0448398?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/b3119313b07eca80cfa5ba69962397dda0448398" alt="img"></a></td></tr></tbody></table><p>[6] </p><h3 id="水明艺术大学附属高中"><a href="#水明艺术大学附属高中" class="headerlink" title="水明艺术大学附属高中"></a>水明艺术大学附属高中</h3><table><thead><tr><th>**<a href="https://baike.baidu.com/item/%E5%AE%AB%E5%8E%9F%E5%A4%A7%E5%9C%B0/3915455">宫原大地</a>**空太的邻座兼同班同学，空太少数朋友之一，游泳部部员。细长的肌肉，身高也比较高大。但是，实际上性格很孩子气。一直喜欢着七海，为了接近七海而努力获得了文化祭委员会职务，在文化祭后夜祭的时候向七海告白，但是却被拒。</th><th><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/d833c895d143ad4bff51c44e85025aafa50f06c4?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/d833c895d143ad4bff51c44e85025aafa50f06c4" alt="img"></a></th></tr></thead><tbody><tr><td><strong>高崎茧</strong>空太与七海的同班同学。与七海是朋友关系，身材娇小。对于七海与空太的关系一直非常支持。暗恋赤坂龙之介。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/a8ec8a13632762d03d85cf71a4ec08fa503dc641?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/a8ec8a13632762d03d85cf71a4ec08fa503dc641" alt="img"></a></td></tr><tr><td><strong>本庄弥生</strong>普通科2年级→3年级空太与七海的同班同学，身高175cm，垒球部所属。一直支持空太和七海的关系。在和学校里的某个老师交往。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/86d6277f9e2f0708cc202c59e824b899a901f246?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/86d6277f9e2f0708cc202c59e824b899a901f246" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E5%A7%AC%E5%AE%AB%E6%B2%99%E7%BB%87/6013136">姬宫沙织</a>**音乐科3年生→毕业（6卷）一直戴着耳机，耳机上写有“HAU-HAU”而被美咲和仁用「皓皓」来称呼，但本人似乎讨厌美咲以外的人用这种叫法，以至于以后没有再带过这只耳机。经常担任美咲制作的动画音乐的制作。在2年级的时候与前学生会长馆林总一郎交往中，毕业要去奥地利留学，因为舍不得总一郎而犹豫不决，在和仁在天台偶遇并谈话之后下定决心去奥地利。弟弟姫宫伊织第二年入学水明艺术大学付属高校。弟弟伊织所戴含有“HAU-HAU”的耳机是沙织所用过的。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/0b7b02087bf40ad1ec777fb55e2c11dfa8ecced1?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/0b7b02087bf40ad1ec777fb55e2c11dfa8ecced1" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E9%A6%86%E6%9E%97%E6%80%BB%E4%B8%80%E9%83%8E/3915303">馆林总一郎</a>**前学生会会长。和仁连续三年同班。在1年级的文化祭上，看了沙织钢琴演奏的表演，并对沙织一见钟情，却在一年半后才告白，与姫宫沙织在交往中。虽然笨手笨脚，但是很认真，个性很正经；和性格潇洒、才华洋溢，信手拈来即成艺的三鹰仁形成鲜明的对比。曾在学园祭上和空太吵了一架，因此两人存在芥蒂，但后来进了大学部后对空太的厌恶度大为降低。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/08f790529822720e0cf3b61fbe871d46f21fbf097d8b?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/08f790529822720e0cf3b61fbe871d46f21fbf097d8b" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E6%B7%B1%E8%B0%B7%E5%BF%97%E7%A9%97/5715158">深谷志穗</a>**真白的朋友兼同班同学。虽然觉得才能上自己比不过真白，但是有自己的道路要走，提前领悟到这个觉悟。发型是辫子，性格比较亲切，也是班上内少数敢亲近真白的同学。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/3ac79f3df8dcd100a91861fd768b4710b8122f61?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/3ac79f3df8dcd100a91861fd768b4710b8122f61" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E7%99%BD%E5%B1%B1%E5%B0%8F%E6%98%A5/3915503">白山小春</a>**在水明高中担任现代国文老师，与千寻同年龄，与千寻是同届同学兼校友，跟千寻一样想把自己嫁出去。对于和希对千寻的感情也知情。学生时代时喜欢和希。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/35a85edf8db1cb13a7faa4cfd954564e93584b5f?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/35a85edf8db1cb13a7faa4cfd954564e93584b5f" alt="img"></a></td></tr></tbody></table><h3 id="其他角色"><a href="#其他角色" class="headerlink" title="其他角色"></a>其他角色</h3><table><thead><tr><th>**<a href="https://baike.baidu.com/item/%E4%B8%8A%E4%BA%95%E8%8D%89%E9%A3%8E%E9%A6%99/4994680">上井草风香</a>**大学生。美咲的亲姐姐，仁的前女友。知道仁最爱的是自己的妹妹美咲。当得知仁要和美咲一起报水高时，再也无法忍受时，和仁摊牌分手。与美咲有相似的容貌，但是与妹妹有相反的性格。</th><th><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/3b292df5e0fe9925bc31e7bbf1e449df8db1ca13db81?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/3b292df5e0fe9925bc31e7bbf1e449df8db1ca13db81" alt="img"></a></th></tr></thead><tbody><tr><td>**<a href="https://baike.baidu.com/item/%E7%A5%9E%E7%94%B0%E4%BC%98%E5%AD%90/3915219">神田优子</a>**空太的妹妹，兄控。小时候因身体不好经常被哥哥照料，所以养成了极度兄控的性格，导致一步也不想离开哥哥，每次出现于空太面前时都会撒娇。视真白为情敌（真白也把优子当作情敌）。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/b64543a98226cffc78ba1d62ba014a90f703ea4a?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/b64543a98226cffc78ba1d62ba014a90f703ea4a" alt="img"></a></td></tr><tr><td><strong>空太之父</strong>名字不详。是空太的父亲，很溺爱女儿优子。借助酒劲才有勇气和儿子交谈。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/838ba61ea8d3fd1f71cc1563314e251f94ca5fa5?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/838ba61ea8d3fd1f71cc1563314e251f94ca5fa5" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E7%A5%9E%E7%94%B0%E6%98%8E%E5%AD%90/5711954">神田明子</a>**空太的母亲，脸上总是带着温柔的微笑，空太说“没有见过可怕的神色”，但是，那是不能表现出自己的感情，所以经常笑着的可能性很高。发型是娃娃头。虽然真白在空太家里的发言依旧少根筋，得让空太正坐三小时面对母亲解释真白的缘由，但也表达出明理的一面，使得寒假期间空太家没有因为真白而天翻地覆。喜欢七海，并对空太说讨媳妇的话，妈妈喜欢七海哟。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/4ec2d5628535e5dde305138677c6a7efce1b62b9?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/4ec2d5628535e5dde305138677c6a7efce1b62b9" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E9%A5%AD%E7%94%B0%E7%BB%AB%E4%B9%83/6394878">饭田绫乃</a>**真白的漫画编辑，丽塔的朋友，教真白漫画过激描写的人。在家庭餐厅里，喜欢点上一堆餐点，并且喜好嘴里同时有咸味跟甜味的感觉，反映在性格上的浪漫喜好。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/cb8065380cd79123471036a4ae345982b3b7806a?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/cb8065380cd79123471036a4ae345982b3b7806a" alt="img"></a></td></tr><tr><td>**<a href="https://baike.baidu.com/item/%E8%97%A4%E6%B3%BD%E5%92%8C%E5%B8%8C/3922112">藤泽和希</a>**在“来做游戏吧”的商业游戏企画中，担任评审之一，高中时期就读水明，也是水高的校友。学生时代就喜欢千寻，最后表白失败。当年的梦想是成为游戏制作人，并且实现了梦想。这也是千寻不敢见面的原因，当年和千寻虽然目标不同却相互刺激，朝梦想迈进，和希实现了梦想而千寻放弃了梦想当了美术老师。</td><td><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/a50f4bfbfbedab6473c9fb99f636afc379311e2b?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/a50f4bfbfbedab6473c9fb99f636afc379311e2b" alt="img"></a></td></tr></tbody></table><p>[6] </p><h2 id="用语解说"><a href="#用语解说" class="headerlink" title="用语解说"></a>用语解说</h2><p><a href="javascript:;">编辑</a><a href="javascript:;"> 语音</a></p><p><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/1643969994/bd315c6034a85edfaabdbabb4c540923dd547570?fr=lemma&ct=cover"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/bd315c6034a85edfaabdbabb4c540923dd547570" alt="原话">原话(8张)</a><strong>水明艺术大学附属高中</strong>（水明芸术大学附属高等学校（すいめいげいじゅつだいがくふぞくこうとうがっこう））</p><p>简称“水高”。分为普通以及艺术两种学科。艺术学科下分美术科以及音乐科。空太、七海、龙之介与仁（於第六集毕业前）是就读普通科，真白、美咲则是就读美术科。虽然艺术学科的单学年总人数仅有20人，但由於菁英化的培养制度，而吸引全国各地的学生报考。</p><p><strong>水明艺术大学</strong>（水明芸术大学（すいめいげいじゅつだいがく））</p><p>艺术相关的学院，在水高的旁边。一般水高毕业直升。</p><p><strong>樱花庄议事录</strong>（さくら荘议事録）</p><p>记录樱花庄的各种事件的决议，通过网络聊天室确定和记录。 [7] </p><p>**<a href="https://baike.baidu.com/item/%E6%A8%B1%E8%8A%B1%E5%BA%84/5722674">樱花庄</a>**（さくら荘（さくらそう））</p><p>樱花庄是一栋两层的木结构的旧公寓，因院子里的大樱花树而得名樱花庄。但是因为美咲的缘故还种有竹子，原作中并没有给出樱花庄的具体地址，只知道在水明艺术大学附属高等学校的附近（而不是在校内），但动画版第7集末尾在上井草美咲的驾照上出现了樱花庄地址及全称：东京都水明市水明樱花庄台3-10-11 水明艺术大学附属高等学校学生宿舍樱花庄（东京都水明市水明さくら台3-10-11 水明芸术大学付属高等学校学生寮さくら荘。）。</p><p>从樱花庄到学校或最近的车站都是步行十分钟的路程。樱花庄的楼房耐震程度堪忧，还曾被提出过拆掉。而且这栋公寓是没有寮母（管杂务的舍管阿姨）的，所以什麼事都得房客自己搞定。厨房、澡堂都是公用的。樱花庄虽然也算是一栋学生宿舍，但这里住的都是因为在普通学生宿舍闹出状况而被赶出来的问题儿童，因此被称为“问题儿童的老巢”（问题児の巣窟）。担任管理员（正式名称：监视要员）的是真白的表姐、美术老师千石千寻。樱花庄在学校内的知名度颇高。因此，只要有任何人住进来过，马上就会成为校内的知名人物。在其他学生间谣传著靠近住在樱花庄的学生就会得到“樱花庄菌”的谣言。男主角神田空太因在学生宿舍养猫而被轰出了普通宿舍，搬到了“恶名昭著”的樱花庄居住。但其实樱花庄原本是为了让水明附中的学生进行拓展美术、音乐等才能的自由活动而设立的，现在变味儿了。</p><p>第六卷中面临要被拆除的危机，实则是水高理事会为了不让真白的才能浪费而想出的权宜之计。在樱花庄全体收集全校学生联署的同时，仁和美咲策划了利用毕业典礼的行动，最终用真情打动了全体学生从而化解了危机。在仁和美咲毕业之后，决定顺势继续利用樱花庄的理事会又将姬宫伊织和长谷刊奈安排住入樱花庄，使得樱花庄再度满员。</p><p>千寻究竟在樱花庄住了多久目前没有确定的说法，但在原作官方由作者每周更新的《樱花庄议事录》（さくら荘议事录）中，有一次千寻向空太提到自己在樱花庄已经住了超过十年了。</p><p><strong>樱花庄住的房客分布如下</strong>：</p><table><thead><tr><th>2F</th><th>201：上井草美咲（零年春）长谷栞奈（三年春）</th><th>202：椎名真白（二年春）</th><th>203：青山七海（二年夏）</th><th>房间未知：神田优子（四年）</th></tr></thead><tbody><tr><td>1F</td><td>101：神田空太（一年夏）</td><td>102：赤坂龙之介（一年春）</td><td>103：三鹰仁（零年春）姬宫伊织（三年春）</td><td>管理员室：千石千寻</td></tr><tr><td>注：括号内为入住年份，本表格设定以神田空太入住之年为樱花庄第1年</td><td></td><td></td><td></td><td></td></tr></tbody></table><p><a href="https://baike.baidu.com/pic/%E6%A8%B1%E8%8A%B1%E5%BA%84%E7%9A%84%E5%AE%A0%E7%89%A9%E5%A5%B3%E5%AD%A9/35197/0/e61190ef76c6a7ef96f7b085fafaaf51f2de66bb?fr=lemma&ct=single"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/e61190ef76c6a7ef96f7b085fafaaf51f2de66bb" alt="房客分布"></a></p><p>房客分布</p>]]></content>
    
    
    <categories>
      
      <category>动漫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动漫</tag>
      
      <tag>感动</tag>
      
      <tag>观后感</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于《我的青春恋爱物语果然有问题。》所说的真物究竟是什么</title>
    <link href="/%E5%85%B3%E4%BA%8E%E3%80%8A%E6%88%91%E7%9A%84%E9%9D%92%E6%98%A5%E6%81%8B%E7%88%B1%E7%89%A9%E8%AF%AD%E6%9E%9C%E7%84%B6%E6%9C%89%E9%97%AE%E9%A2%98%E3%80%82%E3%80%8B%E6%89%80%E8%AF%B4%E7%9A%84%E7%9C%9F%E7%89%A9%E7%A9%B6%E7%AB%9F%E6%98%AF%E4%BB%80%E4%B9%88.html"/>
    <url>/%E5%85%B3%E4%BA%8E%E3%80%8A%E6%88%91%E7%9A%84%E9%9D%92%E6%98%A5%E6%81%8B%E7%88%B1%E7%89%A9%E8%AF%AD%E6%9E%9C%E7%84%B6%E6%9C%89%E9%97%AE%E9%A2%98%E3%80%82%E3%80%8B%E6%89%80%E8%AF%B4%E7%9A%84%E7%9C%9F%E7%89%A9%E7%A9%B6%E7%AB%9F%E6%98%AF%E4%BB%80%E4%B9%88.html</url>
    
    <content type="html"><![CDATA[<h3 id="关于《我的青春恋爱物语果然有问题。》所说的真物究竟是什么"><a href="#关于《我的青春恋爱物语果然有问题。》所说的真物究竟是什么" class="headerlink" title="关于《我的青春恋爱物语果然有问题。》所说的真物究竟是什么"></a>关于《我的青春恋爱物语果然有问题。》所说的真物究竟是什么</h3><h4 id="一部动漫，一首音乐，一个角色，一种人生。"><a href="#一部动漫，一首音乐，一个角色，一种人生。" class="headerlink" title="一部动漫，一首音乐，一个角色，一种人生。"></a>一部动漫，一首音乐，一个角色，一种人生。</h4><p>  着重和大家聊聊《我的青春恋爱物语果然有问题。完》第十一集、第十二集，大老师口中的真物究竟是什么。他比企谷八幡的青春恋爱物语究竟有个毛的问题。</p><p>首先是故事开场，大老师第一句经典语录：青春是一场谎言，是一种罪恶，歌颂青春者往往欺骗自己与周遭的人，正面看待自身所处环境的一切，就算犯下什么滔天大错，他们也视为青春的象征，刻画为记忆中的一页，所以结论就是–爆炸吧，现充（指在现实世界中生活得充实的人们，全称是“现实生活很充实的人生赢家”）。</p><img src="https://cdn.jsdelivr.net/gh/code-anime/autopiccdn@7ed6de656ae8161b8805a1c287bb1127c0f5272a/2021/08/16/fe0a84f1f08f19fb578a1ac65f53f1d5.png" style="zoom: 80%;" /><hr><p>  有人说是京阿尼给残酷的青春上了一层浪漫的滤镜，是大老师口中所谓青春是一种谎言，是一种罪恶，所有人都在讴歌青春积极地肯定自己周围的一切，为失败寻找接口，可是他本人也不得不承认那口中所言的真物，就藏在这所谓的”失败”的青春中。</p><hr><p>实际上当我们回头再去看梦开始的地方，发现从一开始大老师就已经明确的告诉了观众，他自己就是现充，因为他一直在爆炸啊。这里，我们先来探讨一个一直以来春物的一个最大的争论点，那就是比企谷八幡这个人本身，有人冠名为：孤独哲学家、世界第一妹控、日本最后的忍者、单人棒球爱好者、黑暗骑士、彩加小天使共浴狂热分子、黑色蕾丝仰视者、粉红胖次见证者，比企谷正道之光八幡。最早，是有不少小鬼将大老师奉做行为的指引，为自己的孤僻找一个合理的借口，学来的大老师的吐槽力却学不来吐槽水平，学来了如何远离人群却学不来如何与自己达成和解，学来了雪乃与团子如何心疼大老师，却学不来大老师那份自爆的勇气，看到了大老师眼中的虚假，却看不到大老师眼中的真物。就算你生活中有雪乃，你也肯定没有平冢静那么可爱的老师。</p><hr><p>在这段青春的伊始，作者为这个小小的侍奉部安排了几个性格鲜明，在现实中都能够代表相当一类人的几个角色。外向孤独的团子，理性压过感性的雪乃，以及高情商自闭天才比企谷八幡，从一开始，侍奉部的存在就是为了帮助别人去解决一些棘手的人际关系，一些只属于这个年纪的懵懂与纠结，其实在每个人的初高中时代，你都或多或少地做过类似的事，只是你自己不一定有这个自觉，比如帮助朋友追对象，安慰被甩的朋友，帮同学融入集体，甚至是帮助ta解决学习上的瓶颈问题等等，当你考虑过自己帮助别人的行为是为了满足自己还是真的在帮助别人的时候，此时的你的这份纠结，其实就属于侍奉部的业务范畴了，当然除此之外还有很多，我想每一个能在春物的小故事中找到共鸣的观众多少都有过类似的经历或者思考，至少我自己是曾经付出过行动，但最后以失败告终，所以当我们想去考虑何为真物的时候首先大家需要搞明白的是，<strong>什么，是伪物？</strong></p><p>是留美所处的小集体中各个孩子之间看似和谐的友情</p><p>是叶山小团体中没有了叶山就不在融洽的三个人</p><p>是海老名与阿部所继续维系的可能性</p><p>是建立在雪乃知道比企谷八幡这个人前提下的初见</p><p>是平冢静老师与比企谷八幡之间未曾打破的那个界限</p><p>是为了弟弟偷偷外出打工的川崎沙希</p><p>是不停发卡但是台词语气却不停变化的一色</p><p>是大老师、雪乃、结衣三个人之间在彼此发现对方的心意之后，继续维系的社团关系</p><p>总结下来就是指：建立在谎言之上的感情与关系，在这点上大老师与雪乃从一开始就有着这样的共识–此为伪物</p><hr><p>  对于团子从一开始其实就是很常规的展开，观众在最初也有着不少这样的看法，团子对大老师的靠近最初是以感激之情为基础的，所以在最后，静似乎是给了这个角度上的真物满分的回答：如果对一个女生产生共鸣、熟稔、怜悯、尊敬、嫉妒以及在这些之上的感情，那肯定不只是喜欢，所以，无法分开、离别，即使隔着一段距离依然会随着时间相互吸引，那或许就能称为真物。</p><hr><p>  于是一切似乎都得到了解释，但是我总有一个疙瘩在心中未曾解开，尤其是在最后团子的回归，新的侍奉部任务又再次出现的时候，有那么一瞬间我真以为团子被小恶魔忽悠，那么其实也就是这么一个问题，阳乃口中所谓的共依存，或者换句话说，难道你们就没有这种异议？团子为了维系三人之间的友情所做出的努力，难道就被认为是伪物了吗？知道作为一个普通的观众的我从未对此承认过。于是我去翻开春物前面的故事，同样的，假如川崎沙希的故事未被发现，弟弟顺利且幸福地升学，那么川崎沙希同学是否还算得上伪物，假如那帮小屁孩没有这波人性的考验，大家快乐的相处一直到长大，那么这份友情是否还算得上伪物……</p><hr><p>  于是在留美的这段大老师的话似乎找到了答案：要靠把某人踩在脚底下才能其乐融融的关系，哪可能是真正的友情，但是，如果明知道那是虚假的，却还是愿意伸出援手的话，那一定就是真正的友情了。最终阐述的依旧是那个观点：那就是看清生活的真相后依旧继续热爱生活。那么从大的人际关系的角度，这个，也就是真物了吧。</p><hr><p>  从《我的青春恋爱物语果然有问题。完》第十一集最后大老师对雪乃的告白中：虽然大概不够作为扭曲你人生的代价，我把我的一切都交给你，不需要的话随时扔掉就行，若嫌麻烦也大可忘掉，这完全是我的自作主张，所以你不必答复，我几乎没有财产，能给的只有时间、感情、将来、人生，这些不切合实际的东西。终于在下一秒，我找到了对真物，<strong>最后的解释</strong>。你会发现即使到最后，大老师的告白是最后这几句依然具有非常强的单向性，所以是否可以认为，对于青春，对于这段青春恋爱物语，<strong>本就不存在真物</strong>，或者说，<strong>所有的一切都是伪物</strong>。就像这份告白的前提，懵懂，不成熟刚刚破土而出的我们什么都没有，是跌到底的垃圾股，所拥有的只有未来，时间，感情，承诺这些伪物，对于团子来说，那份我全都要却又不可能的前提是，当有两个人真正成为了情侣，这份友情就不可能再继续下去。那么这个从一开始就固化的学生时代的人心中的观念，是不是也是所谓的伪物。</p><hr><p>  <strong>所以答案就是</strong>：所有可以被称为伪物的东西，是因为人毫无理由的相信并付出了行动，才变成了我们眼中的真物，留美明知这份友情是虚假的脆弱的，却依旧选择伸出援手，此时虚假的友情就成为了真物。叶山得知三人看似融洽的关系，核心其实是自己之后，选择让自己退出，此四人虚伪的友情就变成了真物。川崎沙希同学隐瞒自己为了弟弟，但弟弟为了姐姐去探寻真相，此时被谎言笼罩的亲情就变成了真物。</p><p>真物就是团子明知二人关系已定却依旧选择继续与他们做永远的朋友。</p><p>真物就是大老师在拒绝平冢静伸出的手之后却在下一秒又紧紧握住。</p><p>真物就是大老师明知道告白的所有前提都是伪物却依旧选择靠近。</p><p>真物就是雪乃明知所有的一切都是伪物却依旧选择将彼此的人生交付。</p><hr><p>  所以当这么一部携带着如此多的人的青春的一部作品完结，除了爷青结之外，我希望作为普通观众的每一个我们，得到的不是我的青春，没有恋爱，没有物语，只有问题这么个令人糟心的结论，或许此刻你已经离开学校，或许此刻你已经步入成年，或者你已经成家立业，或许你依旧孤身一人，首先，我们明知动画中的每一段故事，都是伪物。<strong>明知你看到的这一段青春恋爱物语都是伪物，可我们依旧选择相信，去相信在这一段段虚构的故事中的真情实感，去相信，即使我们的青春已逝，但我们的恋爱物语，永远都不会完结</strong>，或许在我们的人生中依旧会看到各种各样的伪物，充满着各种各样的问题，但我希望从此以后，我们依旧可以有着大老师那双洞察伪物的眼睛，也随时可以调侃爆炸吧，现充！但是一定要珍惜身边的小町，身边的材木座，身边的平冢静老师，身边最强的学妹，身边最可爱的团子，并且一定有一天，当你遇到了那个和自己有着同样的世界观，不可爱，有很麻烦，冰雪聪明，和自己一样自我封闭却渴望沟通的伪物，假如她试图依靠你，假如你有着让自己扭曲的人生进一步扭曲并干涉到她的想法，希望你能抓紧她的手。把所有能用上的伪物都用上，然后赌上自己的人生，假如这份勇气能够得到回应，假如能得到所有人的祝福，我想那就是属于每一个人自己的，独一无二的真物。</p><hr><p><img src="https://cdn.jsdelivr.net/gh/code-anime/autopiccdn@0e06e1374005d07aeb776c9b6810ded6bb71388e/2021/08/16/f9583c3e4221608bc81e42ab0dfa3644.png"></p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/autopiccdn@ca68cc8dcc63012cf9e90520397c18866f93c087/2021/08/16/2696deb53334406f1ba73240196b002a.png"></p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/autopiccdn@bffda7e10fefa1c246751c953d3fd249ea4e99d7/2021/08/16/0434f9476a6cd6dac00da5c7fd47ff46.png"></p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/autopiccdn@f72d03507589bdeeb5362fea60502b472a167edd/2021/08/16/3cc25e295d7ddf906731accc3644b556.png"></p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/autopiccdn@ee7e7f2a4682556884242644568551f79ce273eb/2021/08/16/95418617a18cd6905ed0947b15c660ad.png"></p>]]></content>
    
    
    <categories>
      
      <category>动漫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动漫</tag>
      
      <tag>漫评</tag>
      
      <tag>青春</tag>
      
      <tag>爷青结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>那些感动人的句子</title>
    <link href="/%E9%82%A3%E4%BA%9B%E6%84%9F%E5%8A%A8%E4%BA%BA%E7%9A%84%E5%8F%A5%E5%AD%90.html"/>
    <url>/%E9%82%A3%E4%BA%9B%E6%84%9F%E5%8A%A8%E4%BA%BA%E7%9A%84%E5%8F%A5%E5%AD%90.html</url>
    
    <content type="html"><![CDATA[<h4 id="那些感动人的句子："><a href="#那些感动人的句子：" class="headerlink" title="那些感动人的句子："></a>那些感动人的句子：</h4><p>1、知道为什么注定不能在一起的两个人，还要安排他们相遇吗？因为上辈子欠的太多太多，这辈子注定是要还的。在这个世界上，所有的相遇，不是恩赐，就是劫。若无相欠，怎能相见。</p><p>2、一本书你重新读一遍，可能会有新的感悟，但不会有新的结局。</p><p>3、如果事与愿违，请相信另有安排。</p><p>4、我一直相信释迦摩尼说的一句话：无论你遇见谁，ta都是你生命中，该出现的人，绝非偶然，ta一定会教会你一些什么，所以我也始终相信，无论我走到哪里？那都是我该去的地方，经历该经历的事，遇见该遇见的人。</p><p>5、今生无悔遇真白，来世愿入樱花庄！</p>]]></content>
    
    
    <categories>
      
      <category>随手</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随手</tag>
      
      <tag>一言</tag>
      
      <tag>句子</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>归并排序</title>
    <link href="/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F.html"/>
    <url>/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F.html</url>
    
    <content type="html"><![CDATA[<h3 id="归并排序："><a href="#归并排序：" class="headerlink" title="归并排序："></a>归并排序：</h3><h4 id="排序原理："><a href="#排序原理：" class="headerlink" title="排序原理："></a>排序原理：</h4><p>1、尽可能的一组数据拆分成两个元素相等的子组，并对每一个子组继续拆分，知道拆分后的每个子组的元素个数是1为止。</p><p>2、将相邻的两个子组进行合并成一个有序的大组</p><p>3、不断重复步骤2，直到最终只有一个组为止</p><hr><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo02<span class="token punctuation">.</span>sort</span><span class="token punctuation">;</span><span class="token comment">//排序代码</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Merge</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> assist<span class="token punctuation">;</span><span class="token comment">//归并所需要的辅助数组</span>    <span class="token comment">/*           对数组a中的元素进行排序        */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        assist <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Comparable</span><span class="token punctuation">[</span>a<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> lo <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> hi <span class="token operator">=</span> a<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> lo<span class="token punctuation">,</span> hi<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    对数组a中从lo到hi的元素进行排序     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> lo<span class="token punctuation">,</span> <span class="token keyword">int</span> hi<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>hi <span class="token operator">&lt;=</span> lo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">int</span> mid <span class="token operator">=</span> lo <span class="token operator">+</span> <span class="token punctuation">(</span>hi <span class="token operator">-</span> lo<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token comment">//对lo到mid之间的元素进行排序；</span>        <span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> lo<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//对mid+1到hi之间的元素进行排序；</span>        <span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> hi<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//对lo到mid这组数据和mid到hi这组数据进行归并</span>        <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> lo<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> hi<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    对数组中，从lo到mid为一组，从mid+1到hi为一组，对这两组数据进行归并     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> lo<span class="token punctuation">,</span> <span class="token keyword">int</span> mid<span class="token punctuation">,</span> <span class="token keyword">int</span> hi<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//lo到mid这组数据和mid+1到hi这组数据归并到辅助数组assist对应的索引处</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> lo<span class="token punctuation">;</span><span class="token comment">//定义一个指针，指向assist数组中开始填充数据的索引</span>        <span class="token keyword">int</span> p1 <span class="token operator">=</span> lo<span class="token punctuation">;</span><span class="token comment">//定义一个指针，指向第一组数据的第一个元素</span>        <span class="token keyword">int</span> p2 <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//定义一个指针，指向第二组数据的第一个元素</span>        <span class="token comment">//比较左边小组和右边小组中的元素大小，哪个小，就把哪个数据填充到assist数组中</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>p1 <span class="token operator">&lt;=</span> mid <span class="token operator">&amp;&amp;</span> p2 <span class="token operator">&lt;=</span> hi<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">less</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>p1<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span>p2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                assist<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>p1<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                assist<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>p2<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//上面的循环结束后，如果退出循环的条件是p1&lt;=mid，则证明左边小组中的数据已经归并完毕，如果退出循环的条件是p2&lt;=hi,则证明右边小组的数据已经填充完毕；</span>        <span class="token comment">//所以需要把未填充完毕的数据继续填充到assist中,//下面两个循环，只会执行其中的一个</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>p1<span class="token operator">&lt;=</span>mid<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            assist<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>p1<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>p2<span class="token operator">&lt;=</span>hi<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            assist<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>p2<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//到现在为止，assist数组中，从lo到hi的元素是有序的，再把数据拷贝到a数组中对应的索引处</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token operator">=</span>lo<span class="token punctuation">;</span>index<span class="token operator">&lt;=</span>hi<span class="token punctuation">;</span>index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            a<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">=</span>assist<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*        比较v元素是否小于w元素     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">less</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span> v<span class="token punctuation">,</span> <span class="token class-name">Comparable</span> w<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> v<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    数组元素i和j交换位置     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">exch</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Comparable</span> t <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo02<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">demo02<span class="token punctuation">.</span>sort<span class="token punctuation">.</span></span><span class="token class-name">Merge</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestMerge</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">Merge</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><hr><h4 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h4><p><img src="https://cdn.jsdelivr.net/gh/code-anime/autopiccdn@b6655417f42cefd2e8cb17f87b56789d67ece8d7/2021/08/13/faf1dfea39f6b1294098f2c48cc669ba.png"></p><hr><h4 id="归并排序时间复杂度分析："><a href="#归并排序时间复杂度分析：" class="headerlink" title="归并排序时间复杂度分析："></a>归并排序时间复杂度分析：</h4><p>归并排序是分治思想的最典型的例子，上面的算法中，对a[lo…hi]进行排序，先将它分为a[lo…mid]和a[mid+1…hi]<br>两部分，分别通过递归调用将他们单独排序，最后将有序的子数组归并为最终的排序结果。该递归的出口在于如果<br>一个数组不能再被分为两个子数组，那么就会执行merge进行归并，在归并的时候判断元素的大小进行排序。</p><p>归并排序的时间复杂度为：log2(n)* 2^(log2(n))=log2(n)*n,根据大O推导法则，忽略底<br>数，最终归并排序的时间复杂度为O(nlogn);</p><hr><h4 id="归并排序的缺点："><a href="#归并排序的缺点：" class="headerlink" title="归并排序的缺点："></a>归并排序的缺点：</h4><p>需要申请额外的数组空间，导致空间复杂度提升，是典型的以空间换时间的操作。</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>数据结构</tag>
      
      <tag>归并排序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>希尔排序</title>
    <link href="/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F.html"/>
    <url>/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F.html</url>
    
    <content type="html"><![CDATA[<h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><p>排序原理：</p><p>1、选定一个增量h，按照增长量h作为数据分组的依据，对数据进行分组</p><p>2、对分好组的每一组数据完成插入排序</p><p>3、减小增长量，最小减为1，重复第二步操作</p><p>其中，希尔排序确定增长量h的规则：</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>h<span class="token operator">&lt;</span>数组长度<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>h <span class="token operator">=</span> <span class="token number">2</span>h<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//循环结束后我们可以确定h的最大值;</span>h的减小规则为<span class="token operator">:</span>h <span class="token operator">=</span> h<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><hr><p> 代码实现：</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo02<span class="token punctuation">.</span>sort</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Shell</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 对数组a中的元素进行排序     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//1.根据数组a的长度，确定增长量h的初始值</span>        <span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>h<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            h <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>h<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//2、希尔排序</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>h<span class="token operator">>=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//排序</span>            <span class="token comment">//2.1找到待插入的元素</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> h<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//2.2把待插入的元素插入到有序数组中</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">>=</span>h<span class="token punctuation">;</span> j<span class="token operator">-=</span>h<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">//待插入的元素是a[j],比较a[j]和a[j-h]</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">greater</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token operator">-</span>h<span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token function">exch</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>j<span class="token operator">-</span>h<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">//减小h的值</span>            h <span class="token operator">=</span> h<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 比较v元素是否大于w元素     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">greater</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span> v<span class="token punctuation">,</span><span class="token class-name">Comparable</span> w<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> v<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 数组元素i和j交换位置     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">exch</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Comparable</span> temp<span class="token punctuation">;</span>        temp <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo02<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">demo02<span class="token punctuation">.</span>sort<span class="token punctuation">.</span></span><span class="token class-name">Shell</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestShell</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">Shell</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210812185121109.png" alt="image-20210812185121109"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
      <tag>java</tag>
      
      <tag>希尔排序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>插入排序</title>
    <link href="/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F.html"/>
    <url>/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F.html</url>
    
    <content type="html"><![CDATA[<h3 id="插入排序："><a href="#插入排序：" class="headerlink" title="插入排序："></a>插入排序：</h3><h4 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h4><p>1、把所有的元素分为两组，已经排序的和未排序的</p><p>2、找到未排序的组中的第一个元素，向已经排序的组中进行插入</p><p>3、倒叙遍历已经排序的元素，依次和待插叙的元素进行比较，直到找到一个元素小于等于待插入元素，那么就把待插入元素放到这个位置，其他的元素向后移动一位。</p><hr><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo02<span class="token punctuation">.</span>sort</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Insertion</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//比较索引j处的值和索引j-1处的值，如果j—1处的值大，则交换数据，否则，就找到了合适的位置</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">greater</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token function">exch</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 比较v元素是否大于w元素     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">greater</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span> v<span class="token punctuation">,</span><span class="token class-name">Comparable</span> w<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> v<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 数组元素i和j交换位置     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">exch</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Comparable</span> temp<span class="token punctuation">;</span>        temp <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo02<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">demo02<span class="token punctuation">.</span>sort<span class="token punctuation">.</span></span><span class="token class-name">Insertion</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestInsertion</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">Insertion</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h4><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210812170131750.png" alt="image-20210812170131750"></p><h4 id="插入排序时间复杂度分析："><a href="#插入排序时间复杂度分析：" class="headerlink" title="插入排序时间复杂度分析："></a>插入排序时间复杂度分析：</h4><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210812170324592.png" alt="image-20210812170324592"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
      <tag>java</tag>
      
      <tag>插入排序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用接口写冒泡排序</title>
    <link href="/%E7%94%A8%E6%8E%A5%E5%8F%A3%E5%86%99%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F.html"/>
    <url>/%E7%94%A8%E6%8E%A5%E5%8F%A3%E5%86%99%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F.html</url>
    
    <content type="html"><![CDATA[<h3 id="用接口写冒泡排序："><a href="#用接口写冒泡排序：" class="headerlink" title="用接口写冒泡排序："></a>用接口写冒泡排序：</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo02<span class="token punctuation">.</span>maopaoapi<span class="token punctuation">.</span></span><span class="token class-name">Bubble</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bubble</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     *对数组a中的元素进行排序     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> a<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//比较索引j和索引j+1处的值</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">greater</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token function">exch</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>j<span class="token punctuation">,</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 比较v元素是否大于w元素     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">greater</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span> v<span class="token punctuation">,</span><span class="token class-name">Comparable</span> w<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> v<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 数组元素i和j交换元素位置     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">exch</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Comparable</span> temp<span class="token punctuation">;</span>        temp <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo02<span class="token punctuation">.</span>maopaoapi<span class="token punctuation">.</span></span><span class="token class-name">TestBubble</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">demo02<span class="token punctuation">.</span>maopaoapi<span class="token punctuation">.</span></span><span class="token class-name">Bubble<span class="token punctuation">.</span>Bubble</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestBubble</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">Bubble</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h3><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210811165336486.png" alt="image-20210811165336486"></p><h3 id="分析冒泡排序的性能："><a href="#分析冒泡排序的性能：" class="headerlink" title="分析冒泡排序的性能："></a>分析冒泡排序的性能：</h3><p>冒泡排序使用了双层for循环，其中内层循环的循环体是真正完成排序的代码，所以，分析冒泡排序的时间复杂度，主要分析一下内层循环的执行次数即可。</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210811165940433.png" alt="image-20210811165940433"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>数据结构</tag>
      
      <tag>冒泡排序</tag>
      
      <tag>接口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>选择排序</title>
    <link href="/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F.html"/>
    <url>/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F.html</url>
    
    <content type="html"><![CDATA[<h3 id="选择排序：合适的元素放在合适的位置"><a href="#选择排序：合适的元素放在合适的位置" class="headerlink" title="选择排序：合适的元素放在合适的位置"></a>选择排序：合适的元素放在合适的位置</h3><p><strong>1、每一次遍历的过程中，都假定第一个索引处的元素是最小值，和其他索引处的值依次进行比较，如果当前索引处的值大于其他某个索引处的值，则假定其他某个索引处的只为最小值，最后可以找到最小值所在的索引。</strong></p><p><strong>2、交换第一个索引处和最小值所在的索引处的值</strong></p><hr><p><strong>选择排序api实验：</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo02<span class="token punctuation">.</span>sort</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Selection</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 对数组a中的元素进行排序     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//定义一个变量，记录最小元素所在的索引，默认为参与选择排序的第一个元素的位置</span>            <span class="token keyword">int</span> minIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">greter</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    minIndex <span class="token operator">=</span> j<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">//交换最小元素所在索引minIndex处的值和索引i处的值</span>            <span class="token function">exch</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>i<span class="token punctuation">,</span>minIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 比较v元素是否大于w元素     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">greter</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span> v<span class="token punctuation">,</span><span class="token class-name">Comparable</span> w<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> v<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 数组元素i和j交换位置     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">exch</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Comparable</span> temp<span class="token punctuation">;</span>        temp <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo02<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">demo02<span class="token punctuation">.</span>sort<span class="token punctuation">.</span></span><span class="token class-name">Selection</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestSelection</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//原始数据</span>        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">Selection</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210811191504521.png" alt="image-20210811191504521"></p><p>选择排序时间复杂度分析：</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210811192210439.png" alt="image-20210811192210439"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>数据结构</tag>
      
      <tag>接口</tag>
      
      <tag>选择排序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Comparable接口的使用</title>
    <link href="/Comparable%E6%8E%A5%E5%8F%A3%E7%9A%84%E4%BD%BF%E7%94%A8.html"/>
    <url>/Comparable%E6%8E%A5%E5%8F%A3%E7%9A%84%E4%BD%BF%E7%94%A8.html</url>
    
    <content type="html"><![CDATA[<h3 id="Comparable接口的使用：（知识回顾）"><a href="#Comparable接口的使用：（知识回顾）" class="headerlink" title="Comparable接口的使用：（知识回顾）"></a>Comparable接口的使用：（知识回顾）</h3><h4 id="1、定义一个学生类，具有年龄age和姓名username两个属性，并通过Comparable接口提供比较规则。"><a href="#1、定义一个学生类，具有年龄age和姓名username两个属性，并通过Comparable接口提供比较规则。" class="headerlink" title="1、定义一个学生类，具有年龄age和姓名username两个属性，并通过Comparable接口提供比较规则。"></a>1、定义一个学生类，具有年龄age和姓名username两个属性，并通过Comparable接口提供比较规则。</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo02<span class="token punctuation">.</span>sort</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> username<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"Student&#123;"</span> <span class="token operator">+</span>                <span class="token string">"username='"</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">Student</span> o<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>o<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="2、定义测试类TestComparable，在测试类Test中定义测试方法Comparable-getMax（comparable-c1，comparable-c2）完成测试"><a href="#2、定义测试类TestComparable，在测试类Test中定义测试方法Comparable-getMax（comparable-c1，comparable-c2）完成测试" class="headerlink" title="2、定义测试类TestComparable，在测试类Test中定义测试方法Comparable getMax（comparable c1，comparable c2）完成测试"></a>2、定义测试类TestComparable，在测试类Test中定义测试方法Comparable getMax（comparable c1，comparable c2）完成测试</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo02<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">demo02<span class="token punctuation">.</span>sort<span class="token punctuation">.</span></span><span class="token class-name">Student</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestComparable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Student</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s1<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s1<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s2<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s2<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Comparable</span> max <span class="token operator">=</span> <span class="token function">getMax</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Comparable</span> <span class="token function">getMax</span><span class="token punctuation">(</span><span class="token class-name">Comparable</span> c1<span class="token punctuation">,</span> <span class="token class-name">Comparable</span> c2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> c1<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//如果result>0，则c1比c2大，如果result&lt;0，则c2比c1大如果result=0，则c1==c2大</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> c1<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> c2<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>运行结果</strong>：</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210811161236197.png" alt="image-20210811161236197"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Comparable接口</tag>
      
      <tag>Java</tag>
      
      <tag>知识回顾</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fluid 页脚增加网站运行时长</title>
    <link href="/Fluid-%E9%A1%B5%E8%84%9A%E5%A2%9E%E5%8A%A0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E6%97%B6%E9%95%BF.html"/>
    <url>/Fluid-%E9%A1%B5%E8%84%9A%E5%A2%9E%E5%8A%A0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E6%97%B6%E9%95%BF.html</url>
    
    <content type="html"><![CDATA[<p>Fluid 1.8.4 版本支持自定义页脚内容了，群友常改的网站运行时长，这次无需再修改源代码。</p><p>只需要在主题配置中的 <code>footer: content</code> 添加：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">footer:  content: &#39;    &lt;a href&#x3D;&quot;https:&#x2F;&#x2F;hexo.io&quot; target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;nofollow noopener&quot;&gt;&lt;span&gt;Hexo&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;    &lt;i class&#x3D;&quot;iconfont icon-love&quot;&gt;&lt;&#x2F;i&gt;    &lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;fluid-dev&#x2F;hexo-theme-fluid&quot; target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;nofollow noopener&quot;&gt;&lt;span&gt;Fluid&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;    &lt;div style&#x3D;&quot;font-size: 0.85rem&quot;&gt;      &lt;span id&#x3D;&quot;timeDate&quot;&gt;载入天数...&lt;&#x2F;span&gt;      &lt;span id&#x3D;&quot;times&quot;&gt;载入时分秒...&lt;&#x2F;span&gt;      &lt;script src&#x3D;&quot;&#x2F;js&#x2F;duration.js&quot;&gt;&lt;&#x2F;script&gt;    &lt;&#x2F;div&gt;  &#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>content</code> 前三行是 Fluid 原有的页脚内容，建议不要删除，可稍作修改，保留 Fluid 的超链接，用于向更多人推广主题。</p><p><code>duration.js</code> 包含的才是功能代码，我们在博客目录下创建 <code>source/js/duration.js</code>，内容如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">!(function() &#123;  &#x2F;** 计时起始时间，自行修改 **&#x2F;  var start &#x3D; new Date(&quot;2020&#x2F;01&#x2F;01 00:00:00&quot;);  function update() &#123;    var now &#x3D; new Date();    now.setTime(now.getTime()+250);    days &#x3D; (now - start) &#x2F; 1000 &#x2F; 60 &#x2F; 60 &#x2F; 24;    dnum &#x3D; Math.floor(days);    hours &#x3D; (now - start) &#x2F; 1000 &#x2F; 60 &#x2F; 60 - (24 * dnum);    hnum &#x3D; Math.floor(hours);    if(String(hnum).length &#x3D;&#x3D;&#x3D; 1 )&#123;      hnum &#x3D; &quot;0&quot; + hnum;    &#125;    minutes &#x3D; (now - start) &#x2F; 1000 &#x2F;60 - (24 * 60 * dnum) - (60 * hnum);    mnum &#x3D; Math.floor(minutes);    if(String(mnum).length &#x3D;&#x3D;&#x3D; 1 )&#123;      mnum &#x3D; &quot;0&quot; + mnum;    &#125;    seconds &#x3D; (now - start) &#x2F; 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);    snum &#x3D; Math.round(seconds);    if(String(snum).length &#x3D;&#x3D;&#x3D; 1 )&#123;      snum &#x3D; &quot;0&quot; + snum;    &#125;    document.getElementById(&quot;timeDate&quot;).innerHTML &#x3D; &quot;本站安全运行&amp;nbsp&quot;+dnum+&quot;&amp;nbsp天&quot;;    document.getElementById(&quot;times&quot;).innerHTML &#x3D; hnum + &quot;&amp;nbsp小时&amp;nbsp&quot; + mnum + &quot;&amp;nbsp分&amp;nbsp&quot; + snum + &quot;&amp;nbsp秒&quot;;  &#125;  update();  setInterval(update, 1000);&#125;)();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>不要忘记把上面注释的时间改为自己的时间，至此这项功能就引入到 <code>&lt;footer&gt;</code> 里了。</p><p>原文链接：<a href="https://hexo.fluid-dev.com/posts/fluid-footer-custom/">https://hexo.fluid-dev.com/posts/fluid-footer-custom/</a></p>]]></content>
    
    
    <categories>
      
      <category>生命不息，折腾不止！</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生命不息，折腾不止！</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>binary search（二分法）</title>
    <link href="/binary-search%EF%BC%88%E4%BA%8C%E5%88%86%E6%B3%95%EF%BC%89.html"/>
    <url>/binary-search%EF%BC%88%E4%BA%8C%E5%88%86%E6%B3%95%EF%BC%89.html</url>
    
    <content type="html"><![CDATA[<h3 id="binary-search（二分法）："><a href="#binary-search（二分法）：" class="headerlink" title="binary search（二分法）："></a>binary search（二分法）：</h3><p><strong>代码：</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token comment">/** * 二分法查找元素 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BinarySearch</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> searchWord <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token comment">//要查找的值</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>searchWord<span class="token operator">+</span><span class="token string">"索引位置："</span><span class="token operator">+</span><span class="token function">binarySearch</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>searchWord<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     *     * @param array 目标数组     * @param value 所要查找的值     * @return 如果找到，则返回这个值在数组中的索引，如果未找到，则返回-1；     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span><span class="token keyword">int</span> value<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//二分法查找的数组，戏必须先排序</span>        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> low <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> high <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>low<span class="token operator">&lt;=</span>high<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> middle <span class="token operator">=</span> <span class="token punctuation">(</span>low<span class="token operator">+</span>high<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token operator">==</span>array<span class="token punctuation">[</span>middle<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> middle<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token operator">></span>array<span class="token punctuation">[</span>middle<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                low <span class="token operator">=</span> middle<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token operator">&lt;</span>array<span class="token punctuation">[</span>middle<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                high <span class="token operator">=</span> middle<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//未找到返回-1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>执行结果：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210809210232202.png" alt="image-20210809210232202"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>binary search</tag>
      
      <tag>二分法</tag>
      
      <tag>折半查找法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>稀疏数组的转换</title>
    <link href="/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%E7%9A%84%E8%BD%AC%E6%8D%A2.html"/>
    <url>/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%E7%9A%84%E8%BD%AC%E6%8D%A2.html</url>
    
    <content type="html"><![CDATA[<p><strong>二维数组转稀疏数组的思路：</strong></p><p><strong>1、遍历原始的二维数组，得到有效数据的个数sum</strong></p><p><strong>2、根据sum就可以创建稀疏数组sparseArr int[sum+1] [3]</strong></p><p><strong>3、将二维数组的有效数据存入到稀疏数组中</strong></p><hr><p><strong>稀疏数组转原始的二维数组的思路</strong></p><p><strong>1、先读取稀疏数组的第一行，根据第一行的数据，常见原始的二维数组</strong></p><p><strong>2、在读取稀疏数组后几行的数据，并赋给原始的二维数组即可</strong></p><hr><p>代码实现：二维数组转换稀疏数组</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SparseArray</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//创建一个原始的二维数组11*11</span>        <span class="token comment">//0：表示没有棋子，1表示黑子，2表示蓝子</span>        <span class="token keyword">int</span> chessArr1<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        chessArr1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        chessArr1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token comment">//输出原始的二维数组</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"原始的二维数组："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> row<span class="token operator">:</span>chessArr1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> data<span class="token operator">:</span>row<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\t"</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//将二维数组转换稀疏数组</span>        <span class="token comment">//1、先遍历二维数组得到非零数据的个数</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chessArr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">11</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>chessArr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    sum<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//2、创建对应的稀疏数组</span>        <span class="token keyword">int</span> sparseArr<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>sum<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">//给稀疏数组赋值</span>        sparseArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>        sparseArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>        sparseArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> sum<span class="token punctuation">;</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//遍历二维数组，将非零的值存放到sparseArr中</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chessArr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">11</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>chessArr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    count<span class="token operator">++</span><span class="token punctuation">;</span>                    sparseArr<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>                    sparseArr<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>                    sparseArr<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> chessArr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//输出稀疏数组的形式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"得到的稀疏数组为："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sparseArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\t%d\t%d\t\n"</span><span class="token punctuation">,</span>sparseArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sparseArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sparseArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210809140451827.png" alt="image-20210809140451827"></p><p><strong>代码实现稀疏数组转换原始二维数组</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo01</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SparseArray</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//创建一个原始的二维数组11*11</span>        <span class="token comment">//0：表示没有棋子，1表示黑子，2表示蓝子</span>        <span class="token keyword">int</span> chessArr1<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        chessArr1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        chessArr1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token comment">//输出原始的二维数组</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"原始的二维数组："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> row<span class="token operator">:</span>chessArr1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> data<span class="token operator">:</span>row<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\t"</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//将二维数组转换稀疏数组</span>        <span class="token comment">//1、先遍历二维数组得到非零数据的个数</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chessArr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">11</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>chessArr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    sum<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//2、创建对应的稀疏数组</span>        <span class="token keyword">int</span> sparseArr<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>sum<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">//给稀疏数组赋值</span>        sparseArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>        sparseArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>        sparseArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> sum<span class="token punctuation">;</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//遍历二维数组，将非零的值存放到sparseArr中</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chessArr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">11</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>chessArr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    count<span class="token operator">++</span><span class="token punctuation">;</span>                    sparseArr<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>                    sparseArr<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>                    sparseArr<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> chessArr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//输出稀疏数组的形式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"得到的稀疏数组为："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sparseArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\t%d\t%d\t\n"</span><span class="token punctuation">,</span>sparseArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sparseArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sparseArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//将稀疏数组转换为原始二维数组</span>        <span class="token comment">//1先读取稀疏数组的第一行，根据第一行的数据，创建原始的二维数组</span>        <span class="token keyword">int</span> chessArr2<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>sparseArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>sparseArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">//2、在读取稀疏数组后几行的数组，并赋给原始的二维数组即可</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sparseArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            chessArr2<span class="token punctuation">[</span>sparseArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>sparseArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> sparseArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//恢复后的二维数组</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恢复后的二维数组："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> row<span class="token operator">:</span>chessArr2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> data<span class="token operator">:</span>row<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\t"</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210809142016509.png" alt="image-20210809142016509"></p>]]></content>
    
    
    <categories>
      
      <category>数据结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-有效字符串判定</title>
    <link href="/LeetCode-%E6%9C%89%E6%95%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%A4%E5%AE%9A.html"/>
    <url>/LeetCode-%E6%9C%89%E6%95%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%A4%E5%AE%9A.html</url>
    
    <content type="html"><![CDATA[<h4 id="一、给定一个只有括号’-‘-’-’-’-‘-’-’-’-‘-’-’字符串，判断字符串是否有效。"><a href="#一、给定一个只有括号’-‘-’-’-’-‘-’-’-’-‘-’-’字符串，判断字符串是否有效。" class="headerlink" title="一、给定一个只有括号’(‘,’)’,’{‘,’}’,’[‘,’]’字符串，判断字符串是否有效。"></a>一、给定一个只有括号’(‘,’)’,’{‘,’}’,’[‘,’]’字符串，判断字符串是否有效。</h4><p><strong>有效字符串需要满足：</strong></p><p><strong>1、左括号必须用相同的类型的右括号闭合。</strong></p><p><strong>2、左括号必须以正确的顺序闭合。</strong></p><p><strong>注意空字符串可被认为有效字符串。</strong></p><p><strong>实例1：</strong></p><p><strong>输入：”()”</strong></p><p><strong>输出：true</strong></p><p><strong>实例2：</strong></p><p><strong>输入：</strong></p><p><strong>“()[]{}”</strong></p><p><strong>输出：true</strong></p><h3 id="二、-代码实现："><a href="#二、-代码实现：" class="headerlink" title="二、 代码实现："></a>二、 代码实现：</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Stack</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">></span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> ch <span class="token operator">:</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token string">'('</span> <span class="token operator">||</span> ch <span class="token operator">==</span> <span class="token string">'&#123;'</span> <span class="token operator">||</span> ch <span class="token operator">==</span> <span class="token string">'['</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">char</span> temp <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token string">')'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">!=</span> <span class="token string">'('</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token string">'&#125;'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">!=</span> <span class="token string">'&#123;'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token string">']'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">!=</span> <span class="token string">'['</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>LeetCode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
      <tag>LeetCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java冒泡排序</title>
    <link href="/Java%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F.html"/>
    <url>/Java%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F.html</url>
    
    <content type="html"><![CDATA[<h3 id="1、冒泡排序"><a href="#1、冒泡排序" class="headerlink" title="1、冒泡排序"></a>1、冒泡排序</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token comment">/** * 冒泡排序 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"排序前数组："</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> temp<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> values<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> values<span class="token punctuation">.</span>length<span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>values<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    temp <span class="token operator">=</span> values<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    values<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> values<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    values<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第"</span><span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"趟，完成时"</span><span class="token operator">+</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210808175651613.png" alt="image-20210808175651613"></p><h3 id="2、优化代码："><a href="#2、优化代码：" class="headerlink" title="2、优化代码："></a>2、优化代码：</h3><p>从上图得知，第五趟排好后就可以直接输出了。所以对代码进行优化</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token comment">/** * 冒泡排序 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"排序前数组："</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> temp<span class="token punctuation">;</span>   <span class="token comment">//用来交换的临时变量</span>        <span class="token comment">//定义一个布尔类型的变量，标记数组是否已达到有序状态</span>        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> values<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> values<span class="token punctuation">.</span>length<span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>values<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token comment">//两两比较，如果大于就交换</span>                    temp <span class="token operator">=</span> values<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    values<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> values<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    values<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>                    flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"结束排序！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第"</span><span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"趟，完成时"</span><span class="token operator">+</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210808181535597.png" alt="image-20210808181535597"></p><h3 id="3、把算法封装起来，以后用可以直接调用方法"><a href="#3、把算法封装起来，以后用可以直接调用方法" class="headerlink" title="3、把算法封装起来，以后用可以直接调用方法"></a>3、把算法封装起来，以后用可以直接调用方法</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token comment">/** * 冒泡排序 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token function">bubbleSort</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//int[] values = &#123;3,1,6,2,9,0,7,4,8,5&#125;;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"排序前数组："</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> temp<span class="token punctuation">;</span>   <span class="token comment">//用来交换的临时变量</span>        <span class="token comment">//定义一个布尔类型的变量，标记数组是否已达到有序状态</span>        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> values<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> values<span class="token punctuation">.</span>length<span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>values<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token comment">//两两比较，如果大于就交换</span>                    temp <span class="token operator">=</span> values<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    values<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> values<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    values<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>                    flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"结束排序！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第"</span><span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"趟，完成时"</span><span class="token operator">+</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>数据结构</tag>
      
      <tag>冒泡排序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode---两数相加2</title>
    <link href="/LeetCode-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A02.html"/>
    <url>/LeetCode-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A02.html</url>
    
    <content type="html"><![CDATA[<h2 id="LeetCode—两数相加2"><a href="#LeetCode—两数相加2" class="headerlink" title="LeetCode—两数相加2"></a>LeetCode—两数相加2</h2><p>给你两个非空的链表，表示两个非负的整数。他们每位数字都是按照逆序的方式存储的，，并且每个节点只能存储一位数字。</p><p>请你将两数相加，并以相同形式返回一个表示和的链表。你可以假设除了数字0之外，这两个数都不会以0开头</p><hr><p>例如：</p><p>输入：2–4–3</p><p>​            5–6–4</p><p>输出：7–0–8</p><hr><p>解法：</p><h4 id="1、迭代法"><a href="#1、迭代法" class="headerlink" title="1、迭代法"></a>1、迭代法</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Iteration</span>    <span class="token comment">// N is the size of l1, M is the size of l2</span>    <span class="token comment">// Time Complexity: O(max(M,N))</span>    <span class="token comment">// Space Complexity: O(max(M,N)) if dummy is counted else O(1)</span>    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">addTwoNumbers</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> l1<span class="token punctuation">,</span> <span class="token class-name">ListNode</span> l2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> next1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token class-name">ListNode</span> dummy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ListNode</span> cur <span class="token operator">=</span> dummy<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>l1 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> l2 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            total <span class="token operator">=</span> l1<span class="token punctuation">.</span>val <span class="token operator">+</span> l2<span class="token punctuation">.</span>val <span class="token operator">+</span> next1<span class="token punctuation">;</span>            cur<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>total <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            next1 <span class="token operator">=</span> total <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>            l1 <span class="token operator">=</span> l1<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            l2 <span class="token operator">=</span> l2<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>l1 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            total <span class="token operator">=</span> l1<span class="token punctuation">.</span>val <span class="token operator">+</span> next1<span class="token punctuation">;</span>            cur<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>total <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            next1 <span class="token operator">=</span> total <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>            l1 <span class="token operator">=</span> l1<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>l2 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            total <span class="token operator">=</span> l2<span class="token punctuation">.</span>val <span class="token operator">+</span> next1<span class="token punctuation">;</span>            cur<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>total <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            next1 <span class="token operator">=</span> total <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>            l2 <span class="token operator">=</span> l2<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>next1 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            cur<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>next1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> dummy<span class="token punctuation">.</span>next<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="2、递归法"><a href="#2、递归法" class="headerlink" title="2、递归法"></a>2、递归法</h4><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Recursion</span>    <span class="token comment">// N is the size of l1, M is the size of l2</span>    <span class="token comment">// Time Complexity: O(max(M,N))</span>    <span class="token comment">// Space Complexity: O(max(M,N)) if dummy is counted else O(1)</span>    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">addTwoNumbers</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> l1<span class="token punctuation">,</span> <span class="token class-name">ListNode</span> l2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> total <span class="token operator">=</span> l1<span class="token punctuation">.</span>val <span class="token operator">+</span> l2<span class="token punctuation">.</span>val<span class="token punctuation">;</span>        <span class="token keyword">int</span> next1 <span class="token operator">=</span> total <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token class-name">ListNode</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>total<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>l1<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> l2<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> next1 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            l1 <span class="token operator">=</span> l1<span class="token punctuation">.</span>next<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">?</span> l1<span class="token punctuation">.</span>next <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            l2 <span class="token operator">=</span> l2<span class="token punctuation">.</span>next<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">?</span> l2<span class="token punctuation">.</span>next <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            l1<span class="token punctuation">.</span>val <span class="token operator">+=</span> next1<span class="token punctuation">;</span>            res<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">addTwoNumbers</span><span class="token punctuation">(</span>l1<span class="token punctuation">,</span> l2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><hr><h5 id="另外写一下递归与迭代的区别："><a href="#另外写一下递归与迭代的区别：" class="headerlink" title="另外写一下递归与迭代的区别："></a>另外写一下递归与迭代的区别：</h5><p>递归和迭代都是循环中的一种。</p><p>简单地说，递归是重复调用函数自身实现循环。迭代是函数内某段代码实现循环，而迭代与普通循环的区别是：循环代码中参与运算的变量同时是保存结果的变量，当前保存的结果作为下一次循环计算的初始值。</p><p>递归循环中，遇到满足终止条件的情况时逐层返回来结束。迭代则使用计数器结束循环。当然很多情况都是多种循环混合采用，这要根据具体需求。</p><p>使用递归要注意的有两点:</p><p>1)递归就是在过程或函数里面调用自身;<br>2)在使用递归时,必须有一个明确的递归结束条件,称为递归出口.</p><p>递归分为两个阶段:</p><p>1)递推:把复杂的问题的求解推到比原问题简单一些的问题的求解;<br>2)回归:当获得最简单的情况后,逐步返回,依次得到复杂的解.</p><p>递归和迭代的空间利用率</p><p>迭代是逐渐逼近，用新值覆盖旧值，直到满足条件后结束，不保存中间值，空间利用率高。<br>递归是将一个问题分解为若干相对小一点的问题，遇到递归出口再原路返回，因此必须保存相关的中间值，这些中间值压入栈保存，问题规模较大时会占用大量内存。</p>]]></content>
    
    
    <categories>
      
      <category>LeetCode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LeetCode</tag>
      
      <tag>数据结构与算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leetcode---两数之和1</title>
    <link href="/Leetcode-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C1.html"/>
    <url>/Leetcode-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C1.html</url>
    
    <content type="html"><![CDATA[<h3 id="Leetcode—两数之和1"><a href="#Leetcode—两数之和1" class="headerlink" title="Leetcode—两数之和1"></a>Leetcode—两数之和1</h3><p>给定一个整数数组nums和一个正阿虎目标值target,请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标</p><p>你可以假设每种输入只会对应一个答案，但是，数组中同一个元素不能使用两遍。</p><p>示例：</p><p>nums = [2,7,11,15]，target = 9；</p><p>输出：[0,1]</p><p>解法一：暴力法</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Brute Force</span>    <span class="token comment">// N is the size of nums</span>    <span class="token comment">// Time Complexity: O(N^2)</span>    <span class="token comment">// Space COmplexity: O(1)</span>    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">int</span> sum <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>                    result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>                    <span class="token keyword">return</span> result<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>解法二：哈希表法</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// HashMap</span>    <span class="token comment">// N is the size of nums</span>    <span class="token comment">// Time Complexity: O(N)</span>    <span class="token comment">// Space COmplexity: O(N)</span>    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> diff <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>diff<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>diff<span class="token punctuation">)</span> <span class="token operator">!=</span> j<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>                result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>diff<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> result<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>LeetCode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
      <tag>LeetCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据结构 ----&gt; 1</title>
    <link href="/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-1.html"/>
    <url>/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-1.html</url>
    
    <content type="html"><![CDATA[<h3 id="数据结构-—-gt-1"><a href="#数据结构-—-gt-1" class="headerlink" title="数据结构 —-&gt; 1"></a>数据结构 —-&gt; 1</h3><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210807193621548.png" alt="image-20210807193621548"></p>]]></content>
    
    
    <categories>
      
      <category>数据结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
      <tag>程序员</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>细思极恐---十年生死两茫茫，通信人，意欲亡。</title>
    <link href="/%E7%BB%86%E6%80%9D%E6%9E%81%E6%81%90-%E5%8D%81%E5%B9%B4%E7%94%9F%E6%AD%BB%E4%B8%A4%E8%8C%AB%E8%8C%AB%EF%BC%8C%E9%80%9A%E4%BF%A1%E4%BA%BA%EF%BC%8C%E6%84%8F%E6%AC%B2%E4%BA%A1%E3%80%82.html"/>
    <url>/%E7%BB%86%E6%80%9D%E6%9E%81%E6%81%90-%E5%8D%81%E5%B9%B4%E7%94%9F%E6%AD%BB%E4%B8%A4%E8%8C%AB%E8%8C%AB%EF%BC%8C%E9%80%9A%E4%BF%A1%E4%BA%BA%EF%BC%8C%E6%84%8F%E6%AC%B2%E4%BA%A1%E3%80%82.html</url>
    
    <content type="html"><![CDATA[<p>每一位通信人，都可能面对过来自亲友的“灵魂三问”。</p><p>“通信究竟是什么？”</p><p>“通信从哪里来？”</p><p>“通信要往哪里去？”</p><p>讲真的，我不知道。。。。</p><p>让我们看看我这三年到底经历了什么？</p><p>不久前就拿到了成绩单，今天打开又仔细看了一下，就离谱，我都不记得学了这么多门课了，给大家列一下就我校通信工程要学什么吧。</p><h4 id="大一"><a href="#大一" class="headerlink" title="大一"></a>大一</h4><ul><li>大学物理（一）</li><li>大学物理实验（一）</li><li>大学英语（一）</li><li>高等数学(一)</li><li>信息应用技术（一）</li><li>大学物理(二)</li><li>大学物理(二)</li><li>大学英语（二）</li><li>电路分析原理</li><li>电子工艺</li><li>高等数学 (二)</li><li>马克思主义基本原理</li><li>通信工程专业导论</li><li>线性代数</li><li>专业见习（一）</li></ul><h4 id="大二"><a href="#大二" class="headerlink" title="大二"></a>大二</h4><ul><li>C程序设计</li><li>大学英语（三） /英语语言素质拓展</li><li>复变函数</li><li>概率论与数理统计</li><li>模拟电子技术</li><li>模拟电子技术实验</li><li>通信工程制图</li><li>信号与系统</li><li>电磁场与电磁波</li><li>数据通信技术（中兴通讯网络技术工程师）</li><li>数字电路（数字电子技术基础）</li><li>数字电路实验</li><li>数字信号处理</li></ul><h4 id="大三"><a href="#大三" class="headerlink" title="大三"></a>大三</h4><ul><li>4G移动通信技术</li><li>单片机原理及应用</li><li>单片机原理及应用实验</li><li>光传输技术</li><li>宽带接入技术</li><li>通信电子线路</li><li>通信原理</li><li>4G全网建设</li><li>Java高级编程</li><li>三网融合综合实训</li><li>数据库系统及应用</li><li>信息论与编码</li></ul><h4 id="大四"><a href="#大四" class="headerlink" title="大四"></a>大四</h4><p>还没开学，，，还有两个月的课程，也不知道还有啥没学的</p><hr><p>怪不得民间一直有这样一段流传，我觉得描述得颇为真实：</p><blockquote><ul><li>十年生死两茫茫，通信人，意欲亡。</li><li>模电数电，学完更凄凉。</li><li>纵使学完又怎样，今信号，明磁场。</li><li>夜来报告还没写，速起床，连夜忙。</li><li>妹子没有，唯有泪千行!</li></ul></blockquote><p>不得不说，通信专业要学的真的又多又难又咋，包括各种通用基础课、通信专业课，计算机基础课、硬件课、软件课、课程设计和实验课，还有金工实习磨锤子，，，，，万金油专业可不是吹的，</p><hr><p>或许也正因为这样，这也成为很多人后续可以从通信专业转行到其他方向的一个垫脚石吧。。。。</p><p>通信专业四大天书，学通信的估计都懂：</p><ul><li>《电磁场与电磁波》</li><li>《模电》</li><li>《数字信号处理》</li><li>《高频电子线路》</li><li>《通信原理》</li></ul><p>尤其是《电磁场与电磁波》这棵参天大树，曾几何时，上面挂满了多少英雄好汉。。。<img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/1612062615525.jpg" alt="1612062615525"></p><p>大家如有学通信的，不妨在评论区吐吐槽。。。（苦笑）</p><p>学通信专业的小伙伴有想要转行的，趁早打算！</p><hr><p>另外说一下，我搭建了个人博客网站，欢迎大家来互相交流，学习。</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210807144547658.png" alt="image-20210807144547658"></p>]]></content>
    
    
    <categories>
      
      <category>随手</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随手</tag>
      
      <tag>大学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title> Hexo部署出现错误err: Error: Spawn failed解决方式</title>
    <link href="/Hexo%E9%83%A8%E7%BD%B2%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AFerr-Error-Spawn-failed%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F.html"/>
    <url>/Hexo%E9%83%A8%E7%BD%B2%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AFerr-Error-Spawn-failed%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F.html</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo部署出现错误err-Error-Spawn-failed解决方式"><a href="#Hexo部署出现错误err-Error-Spawn-failed解决方式" class="headerlink" title="Hexo部署出现错误err: Error: Spawn failed解决方式"></a>Hexo部署出现错误err: Error: Spawn failed解决方式</h1><p>部署过程中可能会出现错误</p><div class="code-wrapper"><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">fatal<span class="token punctuation">:</span> unable to access <span class="token string">'https://github.com/a956551943/a956551943.github.io/'</span><span class="token punctuation">:</span> <span class="token constant">Encountered</span> <span class="token keyword">end</span> of file<span class="token constant">FATAL</span> <span class="token punctuation">&#123;</span>  err<span class="token punctuation">:</span> <span class="token constant">Error</span><span class="token punctuation">:</span> <span class="token constant">Spawn</span> failed      at <span class="token constant">ChildProcess</span><span class="token punctuation">.</span><span class="token operator">&lt;</span>anonymous<span class="token operator">></span> <span class="token punctuation">(</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>src<span class="token operator">/</span>hexo<span class="token operator">/</span>hanyubolg<span class="token operator">/</span>node_modules<span class="token operator">/</span>hexo<span class="token operator">-</span>util<span class="token operator">/</span>lib<span class="token operator">/</span>spawn<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">51</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">)</span>      at <span class="token constant">ChildProcess</span><span class="token punctuation">.</span>emit <span class="token punctuation">(</span>events<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">376</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">)</span>      at <span class="token constant">Process</span><span class="token punctuation">.</span><span class="token constant">ChildProcess</span><span class="token punctuation">.</span>_handle<span class="token punctuation">.</span>onexit <span class="token punctuation">(</span>internal<span class="token operator">/</span>child_process<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">277</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    code<span class="token punctuation">:</span> <span class="token number">128</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token constant">Something</span>'s wrong<span class="token punctuation">.</span> <span class="token constant">Maybe</span> you can find the solution here<span class="token punctuation">:</span> <span class="token operator">%</span>s https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>hexo<span class="token punctuation">.</span>io<span class="token operator">/</span>docs<span class="token operator">/</span>troubleshooting<span class="token punctuation">.</span>html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>解决方式一：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">##进入站点根目录</span><span class="token builtin class-name">cd</span> d://blog/codeanime/<span class="token comment">##删除git提交内容文件夹</span><span class="token function">rm</span> -rf .deploy_git/<span class="token comment">##执行</span><span class="token function">git</span> config --global core.autocrlf <span class="token boolean">false</span><span class="token comment">##最后</span>hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>解决方式二：有可能是你的git repo配置地址不正确,可以将http方式变更为ssh方式</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">##进入站点根目录</span><span class="token builtin class-name">cd</span> /usr/local/src/hexo/hanyubolg/<span class="token comment">##删除git提交内容文件夹</span><span class="token function">vim</span> _config.yml<span class="token comment">##修改</span>deploy:type: <span class="token function">git</span>repo: https://github.com/yourname/yourname.github.io.git -<span class="token operator">></span> git@github.com:a956551943/weixiaohui.github.io.gitbranch: master<span class="token comment">##最后</span>hexo cleanhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>解决方式三：不建议</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">##进入站点根目录</span><span class="token builtin class-name">cd</span> /usr/local/src/hexo/hanyubolg/<span class="token comment">##进入depoly文件夹</span><span class="token builtin class-name">cd</span> .deploy_git/<span class="token comment">##强制推送</span><span class="token function">git</span> push -f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>文章来源：<a href="http://www.jianshu.com,/">www.jianshu.com，</a> 作者：翰羽，版权归原作者所有，如需转载，请联系作者。</p><p>原文链接： <a href="https://www.jianshu.com/p/c60ad2a33a1e">https://www.jianshu.com/p/c60ad2a33a1e</a></p>]]></content>
    
    
    <categories>
      
      <category>生命不熄，折腾不止！</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生命不息，折腾不止！</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo-fluid主题设置统计博客阅读量</title>
    <link href="/Hexo-fluid%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E7%BB%9F%E8%AE%A1%E5%8D%9A%E5%AE%A2%E9%98%85%E8%AF%BB%E9%87%8F.html"/>
    <url>/Hexo-fluid%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E7%BB%9F%E8%AE%A1%E5%8D%9A%E5%AE%A2%E9%98%85%E8%AF%BB%E9%87%8F.html</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo-fluid主题设置统计博客阅读量"><a href="#Hexo-fluid主题设置统计博客阅读量" class="headerlink" title="Hexo-fluid主题设置统计博客阅读量"></a>Hexo-fluid主题设置统计博客阅读量</h2><p><strong>开始小插曲：</strong></p><p>我使用的是sublime文本编辑器：</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806141926807.png" alt="image-20210806141926807"></p><p><strong>正戏开始</strong></p><p>查找关键字：web_analytics       (快捷键ctrl+F)</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806142359695.png" alt="image-20210806142359695"></p><p>这里我使用一个第三方服务<strong>Leancloud</strong>来统计文章的阅读量。</p><p>首先需要打开 Leancloud 的官网，注册一个账号，注册好账号之后，点击左上角的按钮，创建一个应用。</p><p>创建时「应用名称」可以随你自由命名，下方的「应用计价方案」选择「<strong>开发版</strong>」就好，不需要花钱，接着点击右下角的蓝色按钮「创建」。</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806142614176.png" alt="image-20210806142614176"></p><p>创建好应用之后，打开应用的「设置 &gt;&gt; 应用凭证」，页面中有两个参数，一个是<strong>AppID</strong>，一个是<strong>AppKey</strong>。</p><p>这两个参数下方的值等会要用到，暂时不要把网页关掉。</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806142848337.png" alt="image-20210806142848337"></p><p>查找关键字：leancloud</p><p>如下图所示，可以看到 leancloud 下方有两个需要配置的参数，一个是<strong>app_id</strong>，一个是<strong>app_key</strong>，这两个参数的值就分别对应上面说到的<strong>AppID</strong>和<strong>AppKey</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806142945119.png" alt="image-20210806142945119"></p><p>接着我们还要开启每篇博客的数据统计的功能，在博客主题配置文件中搜索关键字 view。</p><p>每篇博客的数据统计 views 下方有两个参数，一个是 enable，将其设置为 enable 或 true 都可以；一个是统计的来源 source，设置为 leancloud。</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806143024257.png" alt="image-20210806143024257"></p><p>完成以上配置之后，将所有变更 Push 到服务器，稍等一小会，刷新自己的博客，一般情况下，就可以在每篇博客的顶部看到阅读量的统计数据了。</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806143141072.png" alt="image-20210806143141072"></p>]]></content>
    
    
    <categories>
      
      <category>生命不熄，折腾不止！</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生命不息，折腾不止！</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>宝塔面板搭建autoPicCdn：一款基于jsdelivr+Github的免费CDN图床</title>
    <link href="/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAautoPicCdn%EF%BC%9A%E4%B8%80%E6%AC%BE%E5%9F%BA%E4%BA%8Ejsdelivr-Github%E7%9A%84%E5%85%8D%E8%B4%B9CDN%E5%9B%BE%E5%BA%8A.html"/>
    <url>/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BAautoPicCdn%EF%BC%9A%E4%B8%80%E6%AC%BE%E5%9F%BA%E4%BA%8Ejsdelivr-Github%E7%9A%84%E5%85%8D%E8%B4%B9CDN%E5%9B%BE%E5%BA%8A.html</url>
    
    <content type="html"><![CDATA[<p>autoPicCdn是白嫖Github的存储空间，通过<a href="https://www.daniao.org/tag/jsdelivr/">jsdelivr</a>全球加速(含有国内节点)。实现图床加速的目的。</p><p>加速效果非常不错，用站长工具检测，也是一片绿油油，所以用来存储一些静态文件是最合适不过了。</p><hr><p><strong>相关文章</strong>：<a href="https://www.daniao.org/8594.html">Github+jsDelivr+PicGo 为脚本/图片等静态文件加速的全球CDN</a></p><hr><p><strong>活动：</strong>堡塔（宝塔面板）724运维节，本活动一年就这一次，错过再等一年。组队免费送服务器插件（堡塔APP、堡塔企业级备份、堡塔资源监视器）不拿白不拿，现在就来组队吧！<a href="https://www.bt.cn/724/a2?group_id=f5dff75d">https://www.bt.cn/724/a2?group_id=f5dff75d</a></p><hr><h4 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h4><p>项目：<a href="https://github.com/yumusb/autoPicCdn">https://github.com/yumusb/autoPicCdn</a></p><h4 id="2、功能"><a href="#2、功能" class="headerlink" title="2、功能"></a>2、功能</h4><p><strong>1）选择Github（推荐）</strong></p><p>白嫖Github的存储空间，通过<a href="https://www.daniao.org/tag/jsdelivr/">jsdelivr</a>全球加速(含有国内节点)。实现图床的目的。</p><p><strong>2）选择Gitee</strong></p><p>白嫖Gitee的存储空间， 实现图床的目的。存储和访问节点都在国内，请在遵循国内相关法律的前提下使用。 文件在1M以上需要访客登录才能访问。1M以下，相当稳。</p><h4 id="3、准备"><a href="#3、准备" class="headerlink" title="3、准备"></a>3、准备</h4><p>1）宝塔面板最新版本（宝塔服务器面板，一键全能部署及管理，送你3188元礼包，点我领取<a href="https://www.bt.cn/?invite_code=MV9ub2NxdmI=%EF%BC%89">https://www.bt.cn/?invite_code=MV9ub2NxdmI=）</a></p><p>2）lnmp自己安装好（nginx1.18、mysql5.7、PHP7.3、phpmyadmin4.7）</p><h4 id="4、新建仓库"><a href="#4、新建仓库" class="headerlink" title="4、新建仓库"></a>4、新建仓库</h4><p>这里具体的可以参考，上面的文章推荐！</p><p>1）当然你得先有一个github账号！网址：<a href="https://github.com/">https://github.com/</a></p><p>2）登录/注册GitHub，新建一个仓库，填写好仓库名，仓库描述，根据需求选择是否为仓库初始化一个README.md描述文件</p><p><a href="https://www.daniao.org/wp-content/uploads/2020/07/autoPicCdn-1.png"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/autoPicCdn-1.png" alt="宝塔面板搭建autoPicCdn：一款基于jsdelivr+Github的免费CDN图床"></a></p><p>3）新建好即可，下面我们生成token</p><h4 id="5、生成token"><a href="#5、生成token" class="headerlink" title="5、生成token"></a>5、生成token</h4><p><a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a> 去这个页面生成一个有写权限的token（repo：Full control of private repositories 和write:packages前打勾）~</p><p><a href="https://www.daniao.org/wp-content/uploads/2020/07/autoPicCdn-2.png"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/autoPicCdn-2.png" alt="宝塔面板搭建autoPicCdn：一款基于jsdelivr+Github的免费CDN图床"></a></p><p>得到token后，保存备用。</p><h4 id="6、下载程序以及新建数据库"><a href="#6、下载程序以及新建数据库" class="headerlink" title="6、下载程序以及新建数据库"></a>6、下载程序以及新建数据库</h4><p><strong>1）可以利用宝塔的远程下载来搞定，下载好之后解压，把文件都复制你自己的网站根目录。</strong></p><p><a href="https://www.daniao.org/wp-content/uploads/2020/07/autoPicCdn-3.png"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/autoPicCdn-3.png" alt="宝塔面板搭建autoPicCdn：一款基于jsdelivr+Github的免费CDN图床"></a></p><p><strong>2）新建数据库，至于宝塔如何新建，简单看个图吧。</strong></p><p><a href="https://www.daniao.org/wp-content/uploads/2020/07/autoPicCdn-4.png"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/autoPicCdn-4.png" alt="宝塔面板搭建autoPicCdn：一款基于jsdelivr+Github的免费CDN图床"></a></p><h4 id="7、导入数据库"><a href="#7、导入数据库" class="headerlink" title="7、导入数据库"></a>7、导入数据库</h4><p>把网站根目录下的pic.sql文件复制到（/www/backup/database）然后再数据库中导入这个文件。</p><p><a href="https://www.daniao.org/wp-content/uploads/2020/07/autoPicCdn-5.png"><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/autoPicCdn-5.png" alt="宝塔面板搭建autoPicCdn：一款基于jsdelivr+Github的免费CDN图床"></a></p><h4 id="8、配置up-php中的相关字段"><a href="#8、配置up-php中的相关字段" class="headerlink" title="8、配置up.php中的相关字段"></a>8、配置up.php中的相关字段</h4><p>打开你网站根目录下的up.php文件，配置其中的相关字段。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;必选项define(&quot;TYPE&quot;,&quot;GITHUB&quot;);&#x2F;&#x2F;选择github&#x2F;&#x2F;define(&quot;TYPE&quot;,&quot;GITEE&quot;);&#x2F;&#x2F;选择gitee，如果使用gitee，需要手动建立master分支，可以看这里 https:&#x2F;&#x2F;gitee.com&#x2F;help&#x2F;articles&#x2F;4122 define(&quot;USER&quot;,&quot;pic-cdn&quot;);&#x2F;&#x2F;你的GitHub&#x2F;Gitee的用户名 define(&quot;REPO&quot;,&quot;cdn2&quot;);&#x2F;&#x2F;必须是上面用户名下的 公开仓库 define(&quot;MAIL&quot;,&quot;yumusb@foxmail.com&quot;);&#x2F;&#x2F;邮箱无所谓，随便写 define(&quot;TOKEN&quot;,&quot;213&quot;);&#x2F;&#x2F;贴入你刚才得到的token<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>之后配置数据库信息</p><p>此处为隐藏的内容！</p><p>发表评论并刷新，方可查看</p><p><a href="https://www.daniao.org/10086.html#respond">发表评论</a></p><p>保存后，搭建完毕。</p><h4 id="9、效果"><a href="#9、效果" class="headerlink" title="9、效果"></a>9、效果</h4><p>效果还是很不错的，比之前的picgo要方便一点。</p><p><img src="https://cdn.jsdelivr.net/gh/tmmtoo/dnpython@latest/2020/07/18/2cdab2d1d03faee6c744bd7c776ca967.png" alt="宝塔面板搭建autoPicCdn：一款基于jsdelivr+Github的免费CDN图床"></p><h4 id="10、最后"><a href="#10、最后" class="headerlink" title="10、最后"></a>10、最后</h4><p>看着写了很多，其实整个步骤很简单，仓库建好后，就是新建网站，下载程序，导入数据库，配置up.php,之后就可以了。</p><p>不过你需要知道的是jsDelivr仅能针对50M以下的文件CDN加速！</p><p>仓库单个文件50M会收到警告，大于100M会被拒绝！</p><p>目前<a href="https://www.daniao.org/tag/github/">GITHUB</a>仓库容量是没有上限的！不过官方推荐在1G以内！</p><p>所以，资源不要滥用，这个图床私用就可以了，不要搞的大家都不好用了。</p><hr><p>文章来源： <a href="https://www.daniao.org/10086.html">www.daniao.org</a>， 作者：大鸟博客，版权归原作者所有，如需转载，请联系作者。</p><p>源文链接： <a href="https://www.daniao.org/10086.html">https://www.daniao.org/10086.html</a></p>]]></content>
    
    
    <categories>
      
      <category>生命不熄，折腾不止！</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生命不息，折腾不止！</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>免费CDN：jsDelivr+Github 使用方法</title>
    <link href="/%E5%85%8D%E8%B4%B9CDN%EF%BC%9AjsDelivr-Github-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html"/>
    <url>/%E5%85%8D%E8%B4%B9CDN%EF%BC%9AjsDelivr-Github-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html</url>
    
    <content type="html"><![CDATA[<h1 id="免费CDN：jsDeliver-Github使用方法"><a href="#免费CDN：jsDeliver-Github使用方法" class="headerlink" title="免费CDN：jsDeliver+Github使用方法"></a>免费CDN：jsDeliver+Github使用方法</h1><p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。</p><p>详情请参见百度百科：[<a href="https://baike.baidu.com/item/CDN/420951]:%E7%99%BE%E5%BA%A6%E7%99%BE%E7%A7%91">https://baike.baidu.com/item/CDN/420951]:百度百科</a></p><h3 id="1、新建Github仓库，名字随意取"><a href="#1、新建Github仓库，名字随意取" class="headerlink" title="1、新建Github仓库，名字随意取"></a>1、新建Github仓库，名字随意取</h3><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806110414917.png" alt="image-20210806110414917"></p><h3 id="2、克隆Github仓库到本地"><a href="#2、克隆Github仓库到本地" class="headerlink" title="2、克隆Github仓库到本地"></a>2、克隆Github仓库到本地</h3><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806114148747.png" alt="image-20210806114148747"></p><p>在本地目录右键 Git Bash Here</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806114339914.png" alt="image-20210806114339914"></p><p>执行命令：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">git clone 复制的仓库的地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806114815211.png" alt="image-20210806114815211"></p><h3 id="3、上传资源"><a href="#3、上传资源" class="headerlink" title="3、上传资源"></a>3、上传资源</h3><p>把要上传的资源放到本地git仓库</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806115652267.png" alt="image-20210806115652267"></p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">git status  &#x2F;&#x2F;查看状态git add .&#x2F;&#x2F;添加所有文件到暂存区git commit -m &#39;第一次提交&#39; &#x2F;&#x2F;把文件提交到仓库git push&#x2F;&#x2F;推送至远程仓库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806120210988.png" alt="image-20210806120210988"></p><h3 id="4、发布仓库"><a href="#4、发布仓库" class="headerlink" title="4、发布仓库"></a>4、发布仓库</h3><p>点击relsese发布</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806120401359.png" alt="image-20210806120401359"></p><p>自定义发布版本号</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806120726622.png" alt="image-20210806120726622"></p><p>然后就可以看到发布的版本了</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806120804172.png" alt="image-20210806120804172"></p><h3 id="5、通过jsDeliver引用资源"><a href="#5、通过jsDeliver引用资源" class="headerlink" title="5、通过jsDeliver引用资源"></a>5、通过jsDeliver引用资源</h3><p>使用方法：<a href="https://cdn.jsdelivr.net/gh/%E4%BD%A0%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BD%A0%E7%9A%84%E4%BB%93%E5%BA%93%E5%90%8D@%E5%8F%91%E5%B8%83%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7/%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84">https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</a></p><p>例如：</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806121640847.png" alt="image-20210806121640847"></p><p>注意版本号不是必须的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，除此之外还可以使用某个范围内的版本，查看所有资源等，具体使用方法如下：</p><p><img src="https://cdn.jsdelivr.net/gh/code-anime/piccdn@main/img/image-20210806121955554.png" alt="image-20210806121955554"></p><p>可以去官网查看：<a href="https://www.jsdelivr.com/">https://www.jsdelivr.com/</a></p><p>然后就可以开心玩耍了。</p>]]></content>
    
    
    <categories>
      
      <category>生命不熄，折腾不止！</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生命不息，折腾不止！</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo写博客</title>
    <link href="/%E4%BD%BF%E7%94%A8Hexo%E5%86%99%E5%8D%9A%E5%AE%A2.html"/>
    <url>/%E4%BD%BF%E7%94%A8Hexo%E5%86%99%E5%8D%9A%E5%AE%A2.html</url>
    
    <content type="html"><![CDATA[<p>尽管 Hexo 支持 MarkDown，但是我们却不能像写单独的 MarkDown 文档时那样肆无忌惮。由于我们所写的文档是需要被解析为静态网页文件的，所以我们必须严格遵从 Hexo 的规范，这样才能解析出条理清晰的静态网页文件。</p><h2 id="新建文档"><a href="#新建文档" class="headerlink" title="新建文档"></a>新建文档</h2><p>假设我们的文章名为 “hello hexo markdwon”，在命令行键入以下命令即可：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ hexo new &quot;hello hexo markdown&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>上述命令的结果是在 <code>./hexo/source/_posts</code> 路径下新建了一个 <code>hello-hexo-markdown.md</code> 文件。</p><p>然后，我们就可以打开编辑器尽情地写作了。</p><h2 id="文档格式"><a href="#文档格式" class="headerlink" title="文档格式"></a>文档格式</h2><p>我们使用文本编辑器打开刚刚新建的 <code>hello-hexo-markdown.md</code> 文件，会发现其中已经存在内容：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">---title: hello hexo markdowndate: 2016-11-16 18:11:25tags:---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>这些内容是干嘛的呢？事实上，他们就是用于设置 MarkDown 文档在被解析为静态网页文件时的相关配置，这些配置参数一般位于文件中最上方以 <code>---</code> 分隔的区域。</p><p>其中，<code>title</code> 的值是当前文档名，也是将来在网页中显示的文章标题。</p><p><code>date</code> 值是我们新建文档时的当地时区时间。</p><p><code>tags</code> 值是文档的标签，我们可以随意赋值为文档贴标签。其用法如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">---title: hello hexo markdowndate: 2016-11-16 18:11:25tags:- hello- hexo- markdown---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>上面的配置参数为这篇文档贴上了 <code>hello</code>、<code>hexo</code>、<code>mardown</code> 标签，如果站点使用的主题支持标签功能，MarkDown 文档被解析为静态网页文件后就可以看到效果。</p><p>除了以上这些，还有很多预先定义的参数 <a href="https://hexo.io/zh-cn/docs/front-matter.html">Front-mtter</a>，我们这里选取一个常用且较为典型的配置参数 <code>categories</code> 讲解一下。</p><h3 id="文章分类"><a href="#文章分类" class="headerlink" title="文章分类"></a>文章分类</h3><p><code>categories</code> 是用来给文章分类的，它跟 <code>tags</code> 不同的是其具有顺序性和层次性。</p><p>例如，我们写一篇关于 CSS3 动画的文章，我们可能会为其打标签 ”CSS3“、”动画“等，但是我们却会将其分在 CSS/CSS3 类别下，这个是有一定的相关性、顺序性和层次性。简单来说，<code>categories</code> 有点儿像新建文件夹对文档进行分门别类的归置。</p><p><code>categories</code> 的用法同 <code>tags</code> 一样，只不过斗个 categories 值是分先后顺序的。</p><h2 id="引用资源"><a href="#引用资源" class="headerlink" title="引用资源"></a>引用资源</h2><p>写个博客，有时候我们会想添加个图片啦 O.O，或者其他形式的资源，等等。</p><p>这时，有两种解决办法：</p><ol><li>使用绝对路径引用资源，在 Web 世界中就是资源的 URL</li><li>使用相对路径引用资源</li></ol><h3 id="文章资源文件夹"><a href="#文章资源文件夹" class="headerlink" title="文章资源文件夹"></a>文章资源文件夹</h3><p>如果是使用相对路径引用资源，那么我们可以使用 Hexo 提供的资源文件夹功能。</p><p>使用文本编辑器打开站点根目录下的 <code>_ config.yml</code> 文件，将 <code>post_asset_folder</code> 值设置为 <code>true</code>。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">post_asset_folder: true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>上面的操作会开启 Hexo 的文章资源文件管理功能。Hexo 将会在我们每一次通过 <code>hexo new &lt;title&gt;</code> 命令创建新文章时自动创建一个同名文件夹，于是我们便可以将文章所引用的相关资源放到这个同名文件夹下，然后通过相对路径引用。</p><h3 id="相对路径引用的标签插件"><a href="#相对路径引用的标签插件" class="headerlink" title="相对路径引用的标签插件"></a>相对路径引用的标签插件</h3><p>通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。我们可以通过使用 Hexo 提供的标签插件来解决这个问题：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>比如说：当你打开文章资源文件夹功能后，你把一个 <code>example.jpg</code> 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <code>![](/example.jpg)</code> ，它将 <em>不会</em> 出现在首页上。（但是它会在文章中按你期待的方式工作）</p><p><strong>！！！注意：</strong> 如果已经开启了文章的资源文件夹功能，当使用 MarkDown 语法引用相对路径下的资源时，只需 <code>./资源名称</code>，不用在引用路径中添加同名文件夹目录层级。</p><p>正确的引用图片方式是使用下列的标签插件而不是 markdown ：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#123;% asset_img example.jpg This is an example image %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>通过这种方式，图片将会同时出现在文章和主页以及归档页中。</p><h2 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h2><p>有的时候，主题模板配置的不够好的话，Hexo 最终生成的静态站点是不会自动生成文章摘要的。</p><p>所以，为了保险起见，我们也自己手动设置文章摘要，这样也方便避免自动生成的摘要不优雅的情况。</p><p>设置文章摘要，我们只需在想显示为摘要的内容之后添 <code>&lt;!-- more --&gt;</code> 即可。像下面这样：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">---title: hello hexo markdowndate: 2016-11-16 18:11:25tags:- hello- hexo- markdown---我是短小精悍的文章摘要(๑•̀ㅂ•́)و✧&lt;!-- more --&gt;紧接着文章摘要的正文内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>这样，<code>&lt;!-- more --&gt;</code> 之前、文档配置参数之后中的内容便会被渲染为站点中的文章摘要。</p><p>注意！文章摘要在文章详情页是正文中最前面的内容。</p><h2 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h2><h3 id="清除缓存文件"><a href="#清除缓存文件" class="headerlink" title="清除缓存文件"></a>清除缓存文件</h3><p>为了避免不必要的错误，在生成静态文件前，强烈建议先运行以下命令：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>上述命令会清除本地站点文件夹下的缓存文件（<code>db.json</code>）和已有的静态文件（<code>public</code>）。</p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><p>写好 MarkDown 文档之后，我们就可使用以下命令生成静态文件：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>然后我们就可以启动 Hexo 服务器，使用浏览器打开 <a href="http://localhost:4000/">http://localhost:4000</a> 查看效果了。</p><h2 id="示范"><a href="#示范" class="headerlink" title="示范"></a>示范</h2><p>下图是一篇经过配置的简单文档，生成静态文件后在网站首页显示的结果。我们可以看到手动设置的摘要，以及打的标签生效了。</p><p><a href="https://lfkid.github.io/2016/11/16/Hexo%E6%95%99%E7%A8%8B%EF%BC%9A%EF%BC%88%E4%B8%89%EF%BC%89%E4%BD%BF%E7%94%A8Hexo%E5%86%99%E5%8D%9A%E5%AE%A2/snipaste20161116_225705.png"><img src="https://lfkid.github.io/2016/11/16/Hexo%E6%95%99%E7%A8%8B%EF%BC%9A%EF%BC%88%E4%B8%89%EF%BC%89%E4%BD%BF%E7%94%A8Hexo%E5%86%99%E5%8D%9A%E5%AE%A2/snipaste20161116_225705.png" alt="img"></a></p><p>文章来源： <a href="https://lfkid.github.io/">lfkid.github.io</a>， 作者：lfkid，版权归原作者所有，如需转载，请联系作者。</p><p>源文链接： <a href="https://lfkid.github.io/2016/11/16/Hexo%E6%95%99%E7%A8%8B%EF%BC%9A%EF%BC%88%E4%B8%89%EF%BC%89%E4%BD%BF%E7%94%A8Hexo%E5%86%99%E5%8D%9A%E5%AE%A2/">https://lfkid.github.io/2016/11/16/Hexo%E6%95%99%E7%A8%8B%EF%BC%9A%EF%BC%88%E4%B8%89%EF%BC%89%E4%BD%BF%E7%94%A8Hexo%E5%86%99%E5%8D%9A%E5%AE%A2/</a></p>]]></content>
    
    
    <categories>
      
      <category>生命不熄，折腾不止！</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生命不息，折腾不止！</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WordPress博客网站搬家和换域名方法</title>
    <link href="/WordPress%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%90%AC%E5%AE%B6%E5%92%8C%E6%8D%A2%E5%9F%9F%E5%90%8D%E6%96%B9%E6%B3%95.html"/>
    <url>/WordPress%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%90%AC%E5%AE%B6%E5%92%8C%E6%8D%A2%E5%9F%9F%E5%90%8D%E6%96%B9%E6%B3%95.html</url>
    
    <content type="html"><![CDATA[<p><strong>WordPress博客网站搬家和换域名方法</strong></p><p><strong>方案一</strong></p><p>开设个人博客的朋友使用WordPress不在少数，那么也难免不了更换空间和域名的情况，由于笔者亲历了一次更换空间和域名的情况，将博客从AAA.com 更改为 BBB.com，所以本文就分享一下更换域名比较好的办法。</p><p>WordPress大家都知道后台需要设置网站的默认网址，如果直接更换了域名的话，使用新的域名是无法登陆的。网上有很多文章，告诉大家可以修改MySQL数据库，或者修改WordPress的wp-config.php文件或function.php文件等，其实不用这么麻烦。</p><p>只要更换前后的域名都在自己手里，那么其实解决方法很简单。首先让更改前后的域名都解析到博客空间，也就是让新旧域名都可以正确访问博客。判断新旧域名是否都能正确访问，除了自己本地直接访问两个域名都能正确访问到网站之外，还需要查看其他地区域名访问是否正常，因为电信、联通还有不同地区DNS生效的时间是不同的。这时候站长之家有个比较好的工具可是使用，就是超级ping（<a href="http://ping.chinaz.com/"> http://ping.chinaz.com</a>），把新旧域名分别输入超级ping里，查看是否各地都能ping通</p><p>用管理员登陆WordPress后台，点击设置→常规，将里面的WordPress 地址（URL）和站点地址（URL）都修改为新的域名，然后点击保存更改。咦，咋退出了，其实是成功了，看一下浏览器的地址栏是不是变成新地址了？用管理员账户登陆一下，看看设置→常规里是不是变成了新的域名？然后再点击首页看看是不是变成了新的域名，如果输入旧的域名会不会跳转到新的域名呢。很明显修改成功了，是不是很简单。</p><p>但是由于博客文章里的一些链接和图片地址还是用的旧的域名，所以还需要进行一些修改。</p><p>登陆phpmyadmin，选择自己博客的数据库，然后点击SQL，将下面三行命令输入进去：</p><p>UPDATE wp_posts SET post_content = replace( post_content, ‘AAA.com’,’BBB.com’) ;</p><p>UPDATE wp_comments SET comment_content = replace(comment_content, ‘AAA.com’, ‘BBB.com’) ;</p><p>UPDATE wp_comments SET comment_author_url = replace(comment_author_url, ‘AAA.com’, ‘BBB.com’) ;</p><p>然后点击 执行，如果没有出现错误，那么就会将文章和评论里的所有地址进行了更换。</p><p>这时候用新的地址去访问吧，域名完美进行更换</p><p><strong>方案二</strong></p><p>第一步：备份网站根目录下所有文件并转移到新主机；</p><p>第二步：备份网站数据库文件并在新主机上建立数据库，进行导入；</p><p>第三步：修改wp-config.php文件，确保网站文件与数据库通信正常；</p><p>第四步：在新主机上绑定域名，域名解析到主机。</p><p>第五步：在数据库更换网址。</p><p><a href="http://www.jianshu.com/writer"> </a></p><p>wordpress搬家第一步：备份网站根目录下的所有文件；</p><p>方法1.可以直接ftp把网址所有文件直接下来。</p><p>方法2.这个wordpress插件 BackUpWordPress 可以备份网站文件和数据库并打包，非常方便，推荐用这个方法。</p><p>wordpress搬家第二步：备份数据表并导出，在新主机数据库建立数据库名，并导入数据表；</p><p>备份数据表常见的有两种方法，一种是在旧主机里找到数据库管理，将数据表导出sql格式（一般默认为此）；另一种是wordpress博客安装“WordPress Database Backup”插件，通过插件导出数据表（强烈建议安装此插件，可以定期自动备份数据，比较安全），插件安装方法此处不讲。导出Sql格式的数据表后，需要登录新主机的数据库管理界面，建立新的数据库。数据库名可任意，最好与旧的相同。数据库建立后找到导入选项，将之前导出的数据表导入数据库。</p><p>wordpress搬家第三步：修改wp-config.php文件，促使网站文件与数据库通信正常；</p><p>让网站文件与数据库正常通信需要告诉网站文件，你要用的数据库用户名是什么，密码是什么，网站文件才可以获取数据库信息，然后还要告诉网站文件，你的数据库名是什么，让它找到与之对应的数据表，这样就能保持正常通信了。如下：</p><p>/** WordPress 数据库的名称 */</p><p>define(‘DB_NAME’,’你新建的数据库名称’);</p><p>/** MySQL 数据库用户名 */</p><p>define(‘DB_USER’,’你的数据库用户名，这个在主机数据库信息里可以找到’);</p><p>/** MySQL 数据库密码 */</p><p>define(‘DB_PASSWORD’,’你的数据库密码，这个也在主机信息里找’)</p><p>/** MySQL 主机 */</p><p>define(‘DB_HOST’,’localhost’);</p><p>需要改动的只有前三项，其他一般是不修改的。</p><p>wordpress搬家第四步：在新主机上绑定域名和域名解析；</p><p>这个很简单就不多说了。</p><p>wordpress搬家第五步：在数据库更改网址。</p><p>打开你的数据库，点击SQL，将以下代码粘贴到方框当中。点击“执行”。</p><p>UPDATEwp_optionsSEToption_value =replace( option_value,’<a href="http://www.old.com&/#39;,&#39;http://www.new.com&#39;)WHEREoption_name">http://www.old.com&#39;,&#39;http://www.new.com&#39;)WHEREoption_name</a> =’home’ORoption_name =’siteurl’;</p><p>UPDATEwp_postsSETpost_content =replace( post_content,’<a href="http://www.old.com&/#39;,&#39;http://www.new.com&#39;">http://www.old.com&#39;,&#39;http://www.new.com&#39;</a>) ;</p><p>UPDATEwp_postsSETguid =replace( guid,’<a href="http://www.old.com&/#39;,&#39;http://www.new.com&#39;">http://www.old.com&#39;,&#39;http://www.new.com&#39;</a>) ;</p><p>修改数据库。找到相应的网站数据库，修改wp-options和wp-posts两个文件。将老域名全部更换为新域名。注意第一个文件需要修改两项：siteurl和home。</p><p>这样搬家就完成了,自己测试完记录下来，方便以后使用。</p><p>文章来源： <a href="https://www.huaweicloud.com/articles/blog.51cto.com">blog.51cto.com</a>， 作者：2012hjtwyf，版权归原作者所有，如需转载，请联系作者。</p><p>源文链接： <a href="https://blog.51cto.com/hujiangtao/1917756">https://blog.51cto.com/hujiangtao/1917756</a></p>]]></content>
    
    
    <categories>
      
      <category>生命不熄，折腾不止！</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生命不息，折腾不止！</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二次元随机图片API</title>
    <link href="/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87API.html"/>
    <url>/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87API.html</url>
    
    <content type="html"><![CDATA[<h2 id="俺自己的"><a href="#俺自己的" class="headerlink" title="俺自己的"></a>俺自己的</h2><p><a href="https://api.codeanime.xyz/random.php">https://api.codeanime.xyz/random.php</a></p><h2 id="东方Project"><a href="#东方Project" class="headerlink" title="东方Project"></a>东方Project</h2><p>API文档：<a href="https://img.paulzzh.tech/">Paulzzh — 东方Project随机图片API</a></p><p>接口：<a href="https://img.paulzzh.tech/touhou/random">https://img.paulzzh.tech/touhou/random</a></p><h2 id="樱花"><a href="#樱花" class="headerlink" title="樱花"></a>樱花</h2><p>API文档：<a href="http://www.dmoe.cc/">随机二次元图片API-樱花</a></p><p>接口：<a href="http://www.dmoe.cc/random.php">http://www.dmoe.cc/random.php</a></p><h2 id="汐岑"><a href="#汐岑" class="headerlink" title="汐岑"></a>汐岑</h2><p>API文档：<a href="http://acg.yanwz.cn/">汐岑ACG |- 随机二次元图片API (yanwz.cn)</a></p><p>二次元动漫图片：<a href="https://acg.yanwz.cn/api.php">https://acg.yanwz.cn/api.php</a></p><p>menhera酱表情包：<a href="https://acg.yanwz.cn/menhera/api.php">https://acg.yanwz.cn/menhera/api.php</a></p><p>风景图片：<a href="https://acg.yanwz.cn/scenery/api.php">https://acg.yanwz.cn/scenery/api.php</a></p><p>二次元电脑壁纸：<a href="https://acg.yanwz.cn/wallpaper/api.php">https://acg.yanwz.cn/wallpaper/api.php</a></p><h2 id="阿珏"><a href="#阿珏" class="headerlink" title="阿珏"></a>阿珏</h2><p>API文档：<a href="https://random.52ecy.cn/">随机二次元图片API - 阿珏博客</a></p><p>接口：<br><a href="https://random.52ecy.cn/random.php">https://random.52ecy.cn/random.php</a><br><a href="https://random.52ecy.cn/randbg.php">https://random.52ecy.cn/randbg.php</a> (推荐)</p><h2 id="苏晓晴"><a href="#苏晓晴" class="headerlink" title="苏晓晴"></a>苏晓晴</h2><p>API文档：<a href="https://acg.toubiec.cn/">随机二次元接口</a></p><p>接口：<a href="https://acg.toubiec.cn/random.php">https://acg.toubiec.cn/random.php</a></p><h2 id="岁月小筑"><a href="#岁月小筑" class="headerlink" title="岁月小筑"></a>岁月小筑</h2><p>API文档：<a href="https://www.xjh.me/3069.html">岁月小筑随机图片API上线了，目前公测中~~ | 岁月小筑</a></p><p>https调用：<a href="https://img.xjh.me/random_img.php">https://img.xjh.me/random_img.php</a></p><p>http调用：<a href="http://img.xjh.me/random_img.php">http://img.xjh.me/random_img.php</a></p><h2 id="小歪"><a href="#小歪" class="headerlink" title="小歪"></a>小歪</h2><p>API文档：<a href="https://api.ixiaowai.cn/">小歪API-图片API，文字API，二维码API，随心所动不再单调</a></p><p>二次元动漫：<a href="https://api.ixiaowai.cn/api/api.php">https://api.ixiaowai.cn/api/api.php</a></p><p>menhera酱动漫：<a href="https://api.ixiaowai.cn/mcapi/mcapi.php">https://api.ixiaowai.cn/mcapi/mcapi.php</a></p><h2 id="一堆api"><a href="#一堆api" class="headerlink" title="一堆api"></a>一堆api</h2><p>高清壁纸：<a href="https://api.ixiaowai.cn/gqapi/gqapi.php">https://api.ixiaowai.cn/gqapi/gqapi.php</a></p><p>电脑动漫图片：<a href="http://api.btstu.cn/sjbz/?lx=dongman">http://api.btstu.cn/sjbz/?lx=dongman</a></p><p>电脑美女图片：<a href="http://api.btstu.cn/sjbz/?lx=meizi">http://api.btstu.cn/sjbz/?lx=meizi</a></p><p>电脑随机动漫妹子：<a href="http://api.btstu.cn/sjbz/?lx=suiji">http://api.btstu.cn/sjbz/?lx=suiji</a></p><p>手机动漫图片：<a href="http://api.btstu.cn/sjbz/?lx=m_dongman">http://api.btstu.cn/sjbz/?lx=m_dongman</a></p><p>手机美女图片：<a href="http://api.btstu.cn/sjbz/?lx=m_meizi">http://api.btstu.cn/sjbz/?lx=m_meizi</a></p><p>手机随机动漫妹子：<a href="http://api.btstu.cn/sjbz/?m_lx=suiji">http://api.btstu.cn/sjbz/?m_lx=suiji</a></p><p>手机性感美女:<a href="https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E">https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E</a></p><p>手机电脑自动判断，电脑显示适合电脑的壁纸，手机显示适合手机的壁纸</p><p><a href="http://api.btstu.cn/sjbz/zsy.php">http://api.btstu.cn/sjbz/zsy.php</a></p><p>风景随机图：<a href="http://pic.tsmp4.net/api/fengjing/img.php">http://pic.tsmp4.net/api/fengjing/img.php</a><br>女神随机图：<a href="http://pic.tsmp4.net/api/nvsheng/img.php">http://pic.tsmp4.net/api/nvsheng/img.php</a><br>影视随机图：<a href="http://pic.tsmp4.net/api/yingshi/img.php">http://pic.tsmp4.net/api/yingshi/img.php</a><br>二次元随机图：<a href="http://pic.tsmp4.net/api/erciyuan/img.php">http://pic.tsmp4.net/api/erciyuan/img.php</a><br>二次元随机图:<a href="https://acg.toubiec.cn/random">https://acg.toubiec.cn/random</a><br>二次元随机图:<a href="http://www.dmoe.cc/random.php">http://www.dmoe.cc/random.php</a></p><p><a href="https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E">https://uploadbeta.com/api/pictures/random/?key=推女郎</a></p><p><a href="https://uploadbeta.com/api/pictures/random/?key=%E4%BA%8C%E6%AC%A1%E5%85%83">https://uploadbeta.com/api/pictures/random/?key=二次元</a></p><p><a href="https://uploadbeta.com/api/pictures/random/?key=%E5%8A%A8%E6%BC%AB">https://uploadbeta.com/api/pictures/random/?key=动漫</a></p><p>api现在已经有几千张图了，每天都在增加，大家可以玩玩</p><h2 id="EEE-DOG"><a href="#EEE-DOG" class="headerlink" title="EEE.DOG"></a>EEE.DOG</h2><p>API文档：<a href="https://www.eee.dog/tech/rand-pic-api.html">随机图片API - EEE.DOG</a></p><p>接口：<a href="https://api.yimian.xyz/img">https://api.yimian.xyz/img</a></p><h2 id="随机图片API"><a href="#随机图片API" class="headerlink" title="随机图片API"></a>随机图片API</h2><p>API文档：<a href="https://api.pixivweb.com/">随机图片API (pixivweb.com)</a></p><p>接口：<a href="https://api.pixivweb.com/anime18r.php?return=img">https://api.pixivweb.com/anime18r.php?return=img</a></p><h2 id="樱花-1"><a href="#樱花-1" class="headerlink" title="樱花"></a>樱花</h2><p>API文档：<a href="http://www.dmoe.cc/">随机二次元图片API-樱花</a></p><p>接口：<a href="http://www.dmoe.cc/random.php">http://www.dmoe.cc/random.php</a></p><h2 id="汐岑-1"><a href="#汐岑-1" class="headerlink" title="汐岑"></a>汐岑</h2><p>API文档：<a href="http://acg.yanwz.cn/">汐岑ACG |- 随机二次元图片API (yanwz.cn)</a></p><p>二次元动漫图片：<a href="https://acg.yanwz.cn/api.php">https://acg.yanwz.cn/api.php</a></p><p>menhera酱表情包：<a href="https://acg.yanwz.cn/menhera/api.php">https://acg.yanwz.cn/menhera/api.php</a></p><p>风景图片：<a href="https://acg.yanwz.cn/scenery/api.php">https://acg.yanwz.cn/scenery/api.php</a></p><p>二次元电脑壁纸：<a href="https://acg.yanwz.cn/wallpaper/api.php">https://acg.yanwz.cn/wallpaper/api.php</a></p><h2 id="苏晓晴-1"><a href="#苏晓晴-1" class="headerlink" title="苏晓晴"></a>苏晓晴</h2><p>API文档：<a href="https://acg.toubiec.cn/">随机二次元接口</a></p><p>接口：<a href="https://acg.toubiec.cn/random.php">https://acg.toubiec.cn/random.php</a></p><h2 id="岁月小筑-1"><a href="#岁月小筑-1" class="headerlink" title="岁月小筑"></a>岁月小筑</h2><p>API文档：<a href="https://www.xjh.me/3069.html">岁月小筑随机图片API上线了，目前公测中~~ | 岁月小筑</a></p><p>https调用：<a href="https://img.xjh.me/random_img.php">https://img.xjh.me/random_img.php</a></p><p>http调用：<a href="http://img.xjh.me/random_img.php">http://img.xjh.me/random_img.php</a></p><hr><h2 id="随机二次元图片API-樱花"><a href="#随机二次元图片API-樱花" class="headerlink" title="随机二次元图片API-樱花"></a>随机二次元图片API-樱花</h2><p>API文档：<a href="https://www.dmoe.cc/">https://www.dmoe.cc/</a></p><p>接口：<a href="https://www.dmoe.cc/random.php">https://www.dmoe.cc/random.php</a></p><h2 id="随机二次元图片"><a href="#随机二次元图片" class="headerlink" title="随机二次元图片"></a>随机二次元图片</h2><p>API文档：<a href="https://api.vvhan.com/dongman.html">https://api.vvhan.com/dongman.html</a></p><p>接口：<a href="https://www.niubai.net/yanshi/acgapi/acgurl.php">https://www.niubai.net/yanshi/acgapi/acgurl.php</a></p><p><a href="https://api.vvhan.com/api/acgimg">https://api.vvhan.com/api/acgimg</a></p><hr><h2 id="随机二次元图片API接口"><a href="#随机二次元图片API接口" class="headerlink" title="随机二次元图片API接口"></a>随机二次元图片API接口</h2><p>APi文档：<a href="https://api.ghser.com/acg.html">https://api.ghser.com/acg.html</a></p><p>接口地址：</p><p><a href="https://api.ghser.com/random/api.php">https://api.ghser.com/random/api.php</a></p><p>自判断二次元API基本调用格式：</p><p><a href="https://api.ghser.com/random/api.php">https://api.ghser.com/random/api.php</a></p><p>PC随机二次元API：</p><p><a href="https://api.ghser.com/random/pc.php">https://api.ghser.com/random/pc.php</a></p><p>PE随机二次元API：</p><p><a href="https://api.ghser.com/random/pe.php">https://api.ghser.com/random/pe.php</a></p><p>PC随机二次元风景API：</p><p><a href="https://api.ghser.com/random/bg.php">https://api.ghser.com/random/bg.php</a></p><hr><h2 id="随机二次元图片-背景图-API"><a href="#随机二次元图片-背景图-API" class="headerlink" title="随机二次元图片(背景图)API"></a>随机二次元图片(背景图)API</h2><p>API文档：<a href="https://www.nck.cc/index.php/archives/3/">https://www.nck.cc/index.php/archives/3/</a></p><p>接口：<a href="https://www.rrll.cc/tuceng/ecy.php">https://www.rrll.cc/tuceng/ecy.php</a></p><hr><h2 id="七彩云API"><a href="#七彩云API" class="headerlink" title="七彩云API"></a>七彩云API</h2><p>API文档：<a href="https://api.qicaiyun.top/ercy/">https://api.qicaiyun.top/ercy/</a></p><p>接口：<code>https://api.qicaiyun.top/ercy/api.php</code></p><hr><h2 id="喵白"><a href="#喵白" class="headerlink" title="喵白"></a>喵白</h2><p>API文档：<a href="https://acg.teas.moe/">https://acg.teas.moe/</a></p><p>接口：</p><p><a href="https://acg.teas.moe/man/api.php%EF%BC%88%E4%BA%8C%E6%AC%A1%E5%85%83%E5%8A%A8%E6%BC%AB%EF%BC%89">https://acg.teas.moe/man/api.php（二次元动漫）</a></p><p><a href="https://acg.teas.moe/hua/api.php%EF%BC%88%E4%BA%8C%E6%AC%A1%E5%85%83%E5%8A%A8%E6%BC%AB2%EF%BC%89">https://acg.teas.moe/hua/api.php（二次元动漫2）</a></p><p><a href="https://acg.teas.moe/suiji/api.php%EF%BC%88%E9%9A%8F%E6%9C%BA%E5%8A%A8%E6%BC%AB%EF%BC%89">https://acg.teas.moe/suiji/api.php（随机动漫）</a></p><hr><h2 id="汐岑博客"><a href="#汐岑博客" class="headerlink" title="汐岑博客"></a>汐岑博客</h2><p>API文档：<a href="https://acg.yanwz.cn/">https://acg.yanwz.cn/</a></p><p>接口：</p><p>二次元动漫图片：</p><p><a href="https://acg.yanwz.cn/api.php">https://acg.yanwz.cn/api.php</a></p><p>menhera酱表情包：</p><p><a href="https://acg.yanwz.cn/menhera/api.php">https://acg.yanwz.cn/menhera/api.php</a></p><p>风景图片：</p><p><a href="https://acg.yanwz.cn/scenery/api.php">https://acg.yanwz.cn/scenery/api.php</a></p><p>二次元电脑壁纸：</p><p><a href="https://acg.yanwz.cn/wallpaper/api.php">https://acg.yanwz.cn/wallpaper/api.php</a></p><h2 id="动漫星空API官网"><a href="#动漫星空API官网" class="headerlink" title="动漫星空API官网"></a>动漫星空API官网</h2><p>API文档：<a href="https://api.dongmanxingkong.com/zipanduansuijierciyuantupianapi.html">https://api.dongmanxingkong.com/zipanduansuijierciyuantupianapi.html</a></p><p>接口：</p><p><a href="https://api.ghser.com/random/api.php">https://api.ghser.com/random/api.php</a></p><p>PC随机二次元API</p><p><a href="https://api.ghser.com/random/pc.php">https://api.ghser.com/random/pc.php</a></p><p>PE随机二次元API</p><p><a href="https://api.ghser.com/random/pe.php">https://api.ghser.com/random/pe.php</a></p><p>随机二次元风景API</p><p><a href="https://api.ghser.com/random/bg.php">https://api.ghser.com/random/bg.php</a></p><p><strong>1080P：</strong> <a href="https://api.dongmanxingkong.com/suijitupian/acg/1080p/index.php">https://api.dongmanxingkong.com/suijitupian/acg/1080p/index.php</a></p><p><strong>2K：</strong> <a href="https://api.dongmanxingkong.com/suijitupian/acg/2k/index.php">https://api.dongmanxingkong.com/suijitupian/acg/2k/index.php</a></p><p><strong>4K：</strong> <a href="https://api.dongmanxingkong.com/suijitupian/acg/4k/index.php">https://api.dongmanxingkong.com/suijitupian/acg/4k/index.php</a></p><h2 id="随机图片API-1"><a href="#随机图片API-1" class="headerlink" title="随机图片API"></a>随机图片API</h2><p>API文档：<a href="https://api.pixivweb.com/">随机图片API (pixivweb.com)</a></p><p>接口：<a href="https://api.pixivweb.com/anime18r.php?return=img">https://api.pixivweb.com/anime18r.php?return=img</a></p><h2 id="无名"><a href="#无名" class="headerlink" title="无名"></a>无名</h2><p>API文档：<a href="https://www.12580sky.com/fenxiang/23336.html">https://www.12580sky.com/fenxiang/23336.html</a></p><p>接口：</p><p>电脑动漫图片：</p><p><a href="http://api.btstu.cn/sjbz/?lx=dongman">http://api.btstu.cn/sjbz/?lx=dongman</a></p><p>电脑美女图片：</p><p><a href="http://api.btstu.cn/sjbz/?lx=meizi">http://api.btstu.cn/sjbz/?lx=meizi</a></p><p>电脑随机动漫妹子：</p><p><a href="http://api.btstu.cn/sjbz/?lx=suiji">http://api.btstu.cn/sjbz/?lx=suiji</a></p><p>手机动漫图片：</p><p><a href="http://api.btstu.cn/sjbz/?lx=m_dongman">http://api.btstu.cn/sjbz/?lx=m_dongman</a></p><p>手机美女图片：</p><p><a href="http://api.btstu.cn/sjbz/?lx=m_meizi">http://api.btstu.cn/sjbz/?lx=m_meizi</a></p><p>手机随机动漫妹子：</p><p><a href="http://api.btstu.cn/sjbz/?m_lx=suiji">http://api.btstu.cn/sjbz/?m_lx=suiji</a></p><p>手机电脑自动判断，电脑显示适合电脑的壁纸，手机显示适合手机的壁纸</p><p><a href="http://api.btstu.cn/sjbz/zsy.php">http://api.btstu.cn/sjbz/zsy.php</a></p><p>二次元随机图：</p><p><a href="https://acg.toubiec.cn/random">https://acg.toubiec.cn/random</a></p><p>二次元随机图：</p><p><a href="http://www.dmoe.cc/random.php">http://www.dmoe.cc/random.php</a></p><p><a href="https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E">https://uploadbeta.com/api/pictures/random/?key=推女郎</a></p><p><a href="https://uploadbeta.com/api/pictures/random/?key=%E4%BA%8C%E6%AC%A1%E5%85%83">https://uploadbeta.com/api/pictures/random/?key=二次元</a></p><p><a href="https://uploadbeta.com/api/pictures/random/?key=%E5%8A%A8%E6%BC%AB">https://uploadbeta.com/api/pictures/random/?key=动漫</a></p><p>电脑动漫图片：<a href="http://api.btstu.cn/sjbz/?lx=dongman">http://api.btstu.cn/sjbz/?lx=dongman</a></p><p>电脑美女图片：<a href="http://api.btstu.cn/sjbz/?lx=meizi">http://api.btstu.cn/sjbz/?lx=meizi</a></p><p>电脑随机动漫妹子：<a href="http://api.btstu.cn/sjbz/?lx=suiji">http://api.btstu.cn/sjbz/?lx=suiji</a></p><p>手机动漫图片：<a href="http://api.btstu.cn/sjbz/?lx=m_dongman">http://api.btstu.cn/sjbz/?lx=m_dongman</a></p><p>手机美女图片：<a href="http://api.btstu.cn/sjbz/?lx=m_meizi">http://api.btstu.cn/sjbz/?lx=m_meizi</a></p><p>手机随机动漫妹子：<a href="http://api.btstu.cn/sjbz/?m_lx=suiji">http://api.btstu.cn/sjbz/?m_lx=suiji</a></p><hr><h2 id="随机图片API搭建源码"><a href="#随机图片API搭建源码" class="headerlink" title="随机图片API搭建源码"></a>随机图片API搭建源码</h2><p><a href="https://github.com/galnetwen/Random-Image">GitHub - galnetwen/Random-Image: 随机图片服务</a></p><p>樱花：<a href="https://www.dmoe.cc/random.php">https://www.dmoe.cc/random.php</a><br>晓晴博客：<a href="https://acg.toubiec.cn/random.php">https://acg.toubiec.cn/random.php</a><br>Unsplash Source | API Documentation：详情请看官网介绍<br>夏沫博客：<a href="https://cdn.seovx.com/?mom=302">https://cdn.seovx.com/?mom=302</a><br><a href="https://cdn.seovx.com/d/?mom=302">https://cdn.seovx.com/d/?mom=302</a><br><a href="https://cdn.seovx.com/ha/?mom=302">https://cdn.seovx.com/ha/?mom=302</a><br>二次元随机图：<a href="https://api.blogbig.cn/random/api.php">https://api.blogbig.cn/random/api.php</a><br>搏天api：<a href="https://api.btstu.cn/sjbz/api.php">https://api.btstu.cn/sjbz/api.php</a><br>姬长信API For Docker：<br>—-每日bing：<a href="https://api.isoyu.com/bing_images.php">https://api.isoyu.com/bing_images.php</a><br>—-美女图片壁纸：<a href="https://api.isoyu.com/mm_images.php">https://api.isoyu.com/mm_images.php</a><br>—-网红专栏壁纸：<a href="https://api.isoyu.com/beibei_images.php">https://api.isoyu.com/beibei_images.php</a><br>—-动态IP签名图片：<a href="https://api.isoyu.com/ip_images.php?signature=%E6%97%A9%E5%AE%89">https://api.isoyu.com/ip_images.php?signature=早安</a><br>—-ARU(阿鲁)表情包：<a href="https://api.isoyu.com/ARU_GIF_S.php">https://api.isoyu.com/ARU_GIF_S.php</a><br>樱道：<a href="https://api.r10086.com/%E5%8A%A8%E6%BC%AB%E7%BB%BC%E5%90%881.php">https://api.r10086.com/动漫综合1.php</a> （网站中有更多api接口）<br>小歪API：<a href="https://api.ixiaowai.cn/api/api.php%EF%BC%88%E4%BA%8C%E6%AC%A1%E5%85%83%E5%8A%A8%E6%BC%AB%EF%BC%89">https://api.ixiaowai.cn/api/api.php（二次元动漫）</a><br><a href="https://api.ixiaowai.cn/mcapi/mcapi.php%EF%BC%88mc%E9%85%B1%E5%8A%A8%E6%BC%AB%EF%BC%89">https://api.ixiaowai.cn/mcapi/mcapi.php（mc酱动漫）</a><br><a href="https://api.ixiaowai.cn/gqapi/gqapi.php%EF%BC%88%E9%AB%98%E6%B8%85%E5%A3%81%E7%BA%B8%EF%BC%89">https://api.ixiaowai.cn/gqapi/gqapi.php（高清壁纸）</a><br>保罗｜API：<a href="https://api.paugram.com/wallpaper/">https://api.paugram.com/wallpaper/</a><br>墨天逸：<a href="https://api.mtyqx.cn/tapi/random.php">https://api.mtyqx.cn/tapi/random.php</a><br>EEE.DOG：<a href="https://api.yimian.xyz/img">https://api.yimian.xyz/img</a><br>动漫星空：<a href="https://api.dongmanxingkong.com/suijitupian/acg/1080p/index.php">https://api.dongmanxingkong.com/suijitupian/acg/1080p/index.php</a><br>岁月小筑：#https调用<a href="https://img.xjh.me/random_img.php">https://img.xjh.me/random_img.php</a><br>#http调用<a href="http://img.xjh.me/random_img.php">http://img.xjh.me/random_img.php</a><br>东方Project：<a href="https://img.paulzzh.tech/touhou/random">https://img.paulzzh.tech/touhou/random</a></p>]]></content>
    
    
    <categories>
      
      <category>生命不熄，折腾不止！</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生命不息，折腾不止！</tag>
      
      <tag>API</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>animations</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>bangumis</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>categories</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>tags</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
</search>
